var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.286,1,3.056]],["body/controllers/AppController.html",[0,2.259,1,5.366,2,1.905,3,0.187,4,0.169,5,0.131,6,5.414,7,0.315,8,0.012,9,0.965,10,5.018,11,5.414,12,0.187,13,0.218,14,2.563,15,1.791,16,0.01,17,0.01]],["title/modules/AppModule.html",[18,1.071,19,3.056]],["body/modules/AppModule.html",[1,4.134,2,1.467,3,0.098,4,0.088,5,0.069,7,0.358,8,0.012,9,0.505,10,4.458,11,2.834,12,0.098,13,0.114,16,0.006,17,0.006,18,1.449,19,6.196,20,1.391,21,1.391,22,1.5,23,1.5,24,1.391,25,2.618,26,1.5,27,2.834,28,2.834,29,2.834,30,4.741,31,4.741,32,4.741,33,4.741,34,4.741,35,4.741,36,4.741,37,4.741,38,4.458,39,4.741,40,4.458,41,2.207,42,1.5,43,1.5,44,3.238,45,2.724,46,3.238,47,2.834,48,4.169,49,4.254,50,2.078,51,1.627,52,0.856,53,3.238,54,3.238,55,1.444,56,1.062,57,1.444,58,0.781,59,6.231,60,3.252,61,3.485,62,3.238,63,2.834,64,3.238,65,3.238,66,3.238,67,3.238,68,3.238,69,2.834,70,3.238,71,3.238,72,3.238,73,3.238,74,2.568,75,4.169,76,3.238,77,2.568,78,3.238,79,2.834,80,2.834,81,2.369,82,2.568,83,3.238,84,3.238,85,3.238,86,3.238,87,3.238,88,1.209,89,3.238,90,2.568,91,0.967,92,3.238,93,3.238,94,3.238,95,4.763,96,3.238,97,0.83,98,2.568,99,4.763,100,4.169]],["title/injectables/AppService.html",[10,2.681,101,0.742]],["body/injectables/AppService.html",[3,0.194,4,0.175,5,0.136,7,0.275,8,0.011,9,1.001,10,4.81,12,0.194,13,0.226,16,0.01,17,0.01,101,1.331,102,2.243,103,5.614]],["title/controllers/AuthController.html",[0,1.286,104,3.056]],["body/controllers/AuthController.html",[0,0.919,2,0.919,3,0.09,4,0.081,5,0.063,7,0.316,8,0.012,9,0.466,12,0.09,13,0.105,14,1.236,15,0.864,16,0.006,17,0.006,63,2.611,75,2.611,77,2.366,79,2.611,80,2.611,81,2.183,88,2.011,91,2.197,97,1.645,104,3.28,105,2.611,106,1.566,107,2.366,108,0.277,109,1.259,110,4.483,111,4.483,112,5.239,113,3.923,114,4.747,115,2.984,116,2.515,117,1.596,118,3.06,119,5.384,120,2.258,121,2.984,122,0.906,123,2.984,124,1.858,125,0.702,126,0.709,127,1.802,128,1.802,129,2.984,130,7,131,4.81,132,2.984,133,2.984,134,2.984,135,5.616,136,2.984,137,2.984,138,2.984,139,2.984,140,2.984,141,2.984,142,2.153,143,2.984,144,4.483,145,2.984,146,2.984,147,2.611,148,3.884,149,5.384,150,2.984,151,2.984,152,2.825,153,2.984,154,1.639,155,2.183,156,2.366,157,3.268,158,2.366,159,3.839,160,1.566,161,1.33,162,2.72,163,2.611,164,1.915,165,1.811,166,1.153,167,4.483,168,4.483,169,1.566,170,1.282,171,2.984,172,2.984,173,3.842,174,2.984,175,2.669,176,4.087,177,4.747,178,1.915,179,2.984,180,2.984,181,2.984,182,2.984,183,5.384,184,2.984,185,2.611,186,2.984,187,2.984,188,2.984,189,2.984,190,1.439,191,2.877,192,2.984,193,2.984,194,2.984,195,2.984,196,3.555,197,2.984,198,2.984,199,2.984,200,0.838,201,2.183,202,2.984,203,2.984,204,2.984,205,2.984,206,2.984]],["title/modules/AuthModule.html",[18,1.071,30,2.851]],["body/modules/AuthModule.html",[2,1.701,3,0.121,4,0.109,5,0.085,7,0.355,8,0.012,9,0.622,12,0.121,13,0.14,16,0.008,17,0.008,18,1.626,20,1.711,21,1.711,22,1.846,23,1.846,24,1.711,25,2.938,26,2.938,30,5.672,38,4.777,40,4.777,41,2.56,42,1.846,43,1.846,45,3.058,47,3.486,48,4.835,49,4.675,50,2.557,51,2.002,52,1.053,69,3.486,90,3.159,91,1.19,98,3.159,104,4.64,120,1.153,125,0.604,157,4.947,158,3.159,207,3.486,208,3.486,209,3.983,210,3.486,211,5.081,212,5.081,213,3.983,214,5.524,215,2.557,216,3.983,217,3.983,218,3.159,219,3.983,220,3.983,221,3.546,222,2.915,223,2.188,224,3.159,225,1.488,226,3.546,227,2.719,228,3.983,229,3.486,230,3.486,231,3.983,232,3.486,233,3.983,234,2.09,235,2.915,236,2.134,237,2.915]],["title/injectables/AuthService.html",[101,0.742,157,2.535]],["body/injectables/AuthService.html",[3,0.063,4,0.057,5,0.044,7,0.32,8,0.012,9,0.327,12,0.063,13,0.074,15,1.429,16,0.005,17,0.005,49,4.178,50,1.344,52,0.553,55,0.934,56,0.687,57,0.934,58,0.505,88,1.269,91,2.145,97,1.569,101,0.603,102,0.732,108,0.195,109,0.954,112,4.319,113,2.974,114,2.695,116,1.725,120,1.961,122,0.864,124,1.571,125,0.833,126,0.571,127,1.524,128,1.386,130,5.357,131,4.092,142,1.973,147,2.974,148,3.348,157,2.062,163,1.832,164,1.344,165,1.271,166,0.809,178,2.181,190,2.801,196,3.913,200,2.186,201,4.251,218,1.66,222,1.532,223,2.71,224,1.66,225,2.529,227,1.429,229,2.974,232,1.832,238,1.832,239,0.82,240,4.288,241,4.288,242,3.398,243,1.515,244,2.094,245,2.995,246,6.12,247,3.4,248,2.836,249,3.4,250,3.753,251,2.094,252,3.398,253,3.398,254,2.094,255,3.398,256,0.994,257,2.094,258,2.017,259,2.094,260,3.398,261,3.753,262,2.094,263,1.772,264,2.319,265,2.181,266,2.094,267,2.094,268,1.429,269,1.099,270,2.974,271,1.429,272,2.094,273,1.429,274,1.66,275,2.486,276,2.094,277,1.429,278,1.66,279,1.429,280,1.66,281,1.832,282,1.832,283,2.468,284,2.094,285,2.25,286,2.974,287,2.094,288,3.61,289,4.934,290,3.398,291,1.958,292,2.486,293,2.589,294,4.302,295,2.974,296,3.398,297,4.934,298,3.398,299,3.311,300,2.974,301,3.398,302,2.094,303,3.753,304,2.062,305,3.398,306,3.398,307,2.974,308,3.398,309,3.398,310,3.398,311,3.398,312,3.398,313,4.288,314,2.974,315,3.398,316,4.288,317,2.974,318,2.094,319,1.832,320,1.46,321,1.832,322,1.832,323,3.398,324,2.094,325,2.094,326,2.094,327,2.094,328,2.094,329,3.398,330,1.866,331,1.228,332,3.398,333,1.783,334,2.974,335,2.094,336,2.094,337,2.094,338,1.832,339,2.094,340,1.832]],["title/controllers/CompaniesController.html",[0,1.286,341,3.056]],["body/controllers/CompaniesController.html",[0,1.484,2,1.013,3,0.1,4,0.09,5,0.07,7,0.324,8,0.012,9,0.513,12,0.1,13,0.116,14,1.362,15,0.952,16,0.007,17,0.007,56,1.078,58,1.163,81,4.593,82,2.608,91,2.085,97,1.85,108,0.306,109,1.353,116,2.683,117,1.662,120,2.353,122,0.943,124,1.935,125,0.731,126,0.703,127,1.877,128,1.877,142,1.927,152,2.992,154,2.646,160,1.725,161,1.466,166,1.27,169,1.725,170,1.413,256,1.12,268,2.245,273,2.245,274,2.608,283,1.631,291,1.895,293,1.725,331,1.741,341,3.525,342,2.878,343,1.58,344,2.148,345,2.07,346,2.148,347,2.148,348,3.288,349,4.482,350,3.288,351,3.288,352,4.978,353,4.817,354,4.817,355,2.364,356,3.288,357,4.817,358,1.466,359,2.924,360,3.288,361,2.859,362,1.466,363,2.924,364,3.288,365,1.725,366,5.051,367,3.525,368,3.092,369,3.288,370,1.806,371,1.895,372,2.232,373,4.216,374,3.66,375,2.878,376,1.413,377,3.82,378,1.362,379,3.288,380,3.288,381,2.11,382,3.288,383,3.288,384,3.288,385,3.288,386,1.995,387,3.288,388,2.245,389,4.817,390,4.817,391,4.817,392,3.288,393,1.995,394,3.288]],["title/modules/CompaniesModule.html",[18,1.071,31,2.851]],["body/modules/CompaniesModule.html",[2,2.018,3,0.156,4,0.14,5,0.109,7,0.336,8,0.012,9,0.803,12,0.156,13,0.181,16,0.009,17,0.009,18,1.848,20,2.211,21,2.211,22,2.385,23,2.385,24,2.211,25,3.339,26,3.339,31,5.554,41,3.036,42,2.385,43,2.385,45,2.482,51,2.587,52,1.36,125,0.563,234,2.701,236,1.989,341,5.273,355,1.743,374,5.442,375,4.505,395,4.505,396,4.505,397,4.505,398,5.148,399,5.148,400,4.793,401,4.505,402,4.082]],["title/injectables/CompaniesService.html",[101,0.742,374,2.681]],["body/injectables/CompaniesService.html",[3,0.098,4,0.088,5,0.069,7,0.323,8,0.012,9,0.506,12,0.098,13,0.114,15,0.939,16,0.006,17,0.006,52,0.857,55,1.446,56,1.064,57,1.446,58,0.783,81,4.139,91,2.246,97,1.704,101,0.847,102,1.134,108,0.302,109,1.339,116,2.674,120,2.178,122,0.981,124,2.012,125,0.76,126,0.731,127,1.952,128,1.866,142,2.262,166,1.253,190,1.564,200,1.866,243,1.446,248,2.89,256,1.07,258,2.018,263,1.638,269,1.702,283,1.915,304,3.433,320,3.286,344,2.127,345,2.049,346,2.127,347,2.127,349,4.46,352,4.486,355,1.098,358,2.127,361,2.776,362,2.127,365,2.503,366,5.031,372,1.503,374,3.061,376,1.393,377,3.782,378,1.344,401,2.838,403,2.838,404,4.769,405,3.243,406,3.243,407,4.769,408,4.769,409,3.243,410,4.769,411,3.099,412,3.243,413,2.373,414,3.243,415,3.243,416,3.243,417,2.572,418,2.373,419,2.214,420,2.214,421,1.63,422,1.968,423,3.243,424,3.243,425,1.446,426,3.433,427,3.243,428,3.243,429,3.243,430,4.769,431,1.393,432,1.393,433,3.243]],["title/classes/Company.html",[13,0.147,355,1.414]],["body/classes/Company.html",[3,0.117,4,0.105,5,0.082,7,0.232,8,0.012,12,0.189,13,0.136,16,0.007,17,0.007,52,1.019,58,0.93,88,1.44,108,0.358,117,1.998,122,1.133,125,0.682,126,0.882,200,1.082,236,2.086,239,1.303,256,1.121,258,1.75,263,1.804,355,1.828,400,2.82,417,3.057,425,2.778,431,2.677,432,2.677,434,1.019,435,2.82,436,3.422,437,3.591,438,3.422,439,2.251,440,3.422,441,4.559,442,3.591,443,4.866,444,3.854,445,3.702,446,3.854,447,3.004,448,3.781,449,4.045,450,3.854,451,3.854,452,3.854,453,3.854,454,2.501,455,3.854,456,3.854,457,3.854,458,3.854,459,3.854,460,2.221,461,2.965,462,2.339,463,3.373]],["title/classes/Company-1.html",[13,0.123,293,1.828,355,1.18]],["body/classes/Company-1.html",[3,0.133,4,0.12,5,0.093,7,0.306,8,0.012,12,0.133,13,0.251,16,0.008,17,0.008,58,1.424,108,0.408,117,1.468,122,0.833,125,0.78,126,0.75,239,1.424,256,1.068,258,1.873,355,2.519,411,2.631,434,1.16,439,1.585,445,2.965,464,5.288,465,3.21,466,2.845,467,2.734,468,2.965,469,4.388,470,4.388,471,2.663,472,4.318,473,3.84,474,5.836,475,3.58,476,3.788,477,3.788,478,3.788,479,1.818,480,1.885,481,2.205,482,2.821,483,3.48,484,4.028,485,2.663,486,3.84,487,3.48,488,2.302,489,3.84,490,3.84,491,3.21,492,3.84,493,2.663,494,3.84,495,3.21,496,3.84,497,3.21,498,3.48,499,3.84,500,3.21,501,3.84,502,3.21]],["title/classes/Company-2.html",[13,0.123,82,2.763,355,1.18]],["body/classes/Company-2.html",[3,0.111,4,0.099,5,0.078,7,0.299,8,0.012,12,0.183,13,0.255,15,1.504,16,0.007,17,0.007,58,1.253,108,0.339,117,1.292,122,0.733,125,0.847,126,0.693,148,2.102,162,2.214,170,1.567,225,1.939,239,1.253,256,1.119,258,1.955,263,2.095,285,3.797,333,2.725,355,2.521,411,2.315,434,0.964,436,3.618,439,1.876,466,2.503,467,2.406,471,2.214,475,3.578,476,3.333,477,3.333,478,3.333,479,1.511,480,1.567,481,1.833,482,2.82,503,4.127,504,2.214,505,3.997,506,3.647,507,3.799,508,3.647,509,3.881,510,3.333,511,3.669,512,4.424,513,1.914,514,4.228,515,4.228,516,2.49,517,3.545,518,2.49,519,2.341,520,2.49,521,2.669]],["title/classes/CreateCompanyDto.html",[13,0.147,349,2.681]],["body/classes/CreateCompanyDto.html",[3,0.151,4,0.136,5,0.106,7,0.214,8,0.012,12,0.151,13,0.226,16,0.009,17,0.009,108,0.464,117,1.865,122,1.058,125,0.849,126,0.789,239,1.549,256,1.116,349,4.12,434,1.318,436,4.26,439,2.802,441,5.675,467,3.473,475,3.332,479,2.066,482,2.538,505,3.945,522,6.788,523,3.954,524,4.986,525,4.986,526,4.986,527,4.986]],["title/classes/CreateFileDto.html",[13,0.147,528,2.851]],["body/classes/CreateFileDto.html",[3,0.198,4,0.178,5,0.139,8,0.011,12,0.198,13,0.23,16,0.01,17,0.01,434,1.724,528,5.166,529,5.711,530,5.175]],["title/classes/CreateJobDto.html",[13,0.147,485,2.535]],["body/classes/CreateJobDto.html",[3,0.109,4,0.098,5,0.076,7,0.28,8,0.012,12,0.109,13,0.23,16,0.007,17,0.007,58,1.238,108,0.333,117,1.946,122,1.104,125,0.715,126,0.842,239,1.238,256,1.08,258,1.007,355,2.508,411,2.915,434,0.948,439,2.164,445,3.285,464,6.28,465,2.623,466,1.729,467,3.51,468,3.807,471,2.176,472,3.753,473,3.138,474,5.242,475,3.466,476,3.292,477,3.292,478,3.292,479,1.486,480,1.54,481,1.802,482,2.732,483,2.843,484,3.502,485,3.113,486,3.138,487,2.843,488,3.142,489,3.138,490,3.138,491,4.382,492,3.138,493,3.635,494,3.138,495,4.382,496,3.138,497,4.382,498,2.843,499,3.138,500,4.382,501,3.138,502,4.382,531,3.585,532,3.585,533,3.585,534,3.585,535,3.585,536,3.585,537,3.585,538,3.585,539,3.585,540,3.585,541,3.138,542,2.623,543,3.585,544,3.585,545,3.585]],["title/classes/CreatePermissionDto.html",[13,0.147,546,2.681]],["body/classes/CreatePermissionDto.html",[3,0.144,4,0.13,5,0.101,7,0.267,8,0.012,12,0.144,13,0.219,16,0.008,17,0.008,18,1.78,108,0.443,117,1.832,122,1.039,125,0.76,126,0.775,175,3.096,239,1.504,256,1.105,434,1.258,468,3.701,475,3.284,479,1.973,480,2.045,481,2.392,482,2.744,484,3.25,511,4.639,542,5.389,546,3.998,547,6.69,548,3.776,549,3.813,550,7.365,551,4.761,552,4.761,553,4.761,554,4.761,555,4.167,556,4.761,557,5.452,558,4.761,559,4.761,560,4.761]],["title/classes/CreateResumeDto.html",[13,0.147,561,2.681]],["body/classes/CreateResumeDto.html",[3,0.151,4,0.136,5,0.106,7,0.322,8,0.012,12,0.151,13,0.226,16,0.009,17,0.009,58,1.549,108,0.464,117,1.766,122,1.002,126,0.747,239,1.549,256,0.875,434,1.318,467,2.31,468,3.567,475,3.22,479,2.066,480,2.142,481,2.505,482,2.626,483,3.954,509,4.12,510,4.556,542,4.696,557,4.364,561,4.12,562,6.561,563,3.954,564,5.194,565,5.194,566,4.846,567,5.945,568,6.419,569,4.986,570,4.986,571,4.986,572,3.404,573,3.954,574,6.419,575,4.986]],["title/classes/CreateRoleDto.html",[13,0.147,576,2.681]],["body/classes/CreateRoleDto.html",[3,0.139,4,0.125,5,0.098,7,0.293,8,0.012,12,0.139,13,0.214,16,0.008,17,0.008,58,1.468,88,1.714,108,0.427,117,1.806,122,1.025,125,0.746,126,0.764,239,1.468,256,0.99,299,3.427,434,1.213,439,2.464,454,2.817,466,2.932,467,3.16,468,3.795,472,4.449,475,3.245,479,1.901,480,1.971,481,2.306,482,2.755,484,3.133,498,4.822,510,3.903,511,4.138,516,3.133,541,4.016,555,4.016,576,3.903,577,6.611,578,3.639,579,4.655,580,6.08,581,4.589,582,4.589,583,4.589,584,4.589,585,4.589,586,5.322,587,4.589,588,4.589,589,6.08,590,4.589,591,4.589,592,4.589,593,4.589]],["title/classes/CreateSubscriberDto.html",[13,0.147,594,2.681]],["body/classes/CreateSubscriberDto.html",[3,0.15,4,0.135,5,0.105,7,0.274,8,0.012,12,0.15,13,0.225,16,0.009,17,0.009,88,2.386,108,0.46,117,1.759,122,0.998,125,0.774,126,0.744,239,1.541,256,1.08,263,2.048,434,1.307,467,2.959,468,3.554,472,4.673,475,3.211,479,2.05,480,2.125,481,2.486,482,2.766,484,3.377,487,3.923,488,3.711,509,4.539,511,3.876,542,3.619,586,4.33,594,4.099,595,6.541,596,3.923,597,4.947,598,4.947,599,4.947,600,4.947,601,4.947,602,4.947,603,4.947,604,4.947,605,4.947]],["title/classes/CreateUserDto.html",[13,0.147,513,2.192]],["body/classes/CreateUserDto.html",[3,0.096,4,0.086,5,0.067,7,0.283,8,0.012,12,0.169,13,0.243,15,1.359,16,0.006,17,0.006,58,1.133,108,0.295,117,1.822,122,1.034,125,0.818,126,0.801,148,1.829,162,1.926,170,1.363,225,2.46,239,1.133,256,1.125,258,1.318,263,2.166,285,3.925,333,2.93,355,2.48,411,2.49,434,0.839,436,3.918,439,1.696,466,1.53,467,3.195,468,1.594,471,1.926,475,3.511,476,3.012,477,3.012,478,3.012,479,1.315,480,1.363,481,1.594,482,2.781,503,5.106,504,1.926,505,3.993,507,2.321,509,3.961,510,3.012,511,3.389,512,4.086,513,2.462,514,4.579,515,4.579,516,2.166,517,3.203,518,2.166,519,2.036,520,2.166,521,2.321,606,3.173,607,3.173,608,3.173,609,3.173,610,2.777,611,3.173,612,3.173,613,3.173,614,3.173,615,3.173,616,3.173]],["title/interfaces/DataQueryResponse.html",[617,1.794,618,3.056]],["body/interfaces/DataQueryResponse.html",[3,0.126,4,0.114,5,0.089,7,0.279,8,0.012,12,0.173,16,0.008,17,0.008,55,1.858,56,2.129,57,1.858,58,1.375,91,1.244,97,1.068,108,0.387,126,0.734,200,2.266,239,1.375,248,2.64,256,0.568,264,2.844,283,1.929,293,2.99,320,3.242,372,1.931,411,3.112,413,5.348,418,3.049,419,2.844,420,2.844,421,2.094,447,2.747,617,2.448,618,4.169,619,2.529,620,3.049,621,4.691,622,4.519,623,5.536,624,4.519,625,4.519,626,3.89,627,4.169,628,5.683,629,3.89,630,4.169,631,4.169,632,1.79,633,4.519,634,4.751,635,4.519,636,3.049,637,4.519,638,3.304,639,3.304,640,3.304,641,3.304,642,5.536,643,3.304,644,3.304,645,3.304,646,4.519,647,3.304,648,4.519,649,3.304,650,3.304,651,3.304,652,3.304,653,3.304,654,3.304,655,3.304,656,3.304]],["title/controllers/DatabasesController.html",[0,1.286,657,3.056]],["body/controllers/DatabasesController.html",[0,1.893,2,1.893,3,0.186,4,0.167,5,0.131,7,0.313,8,0.012,9,0.959,12,0.186,13,0.216,14,2.546,15,1.78,16,0.01,17,0.01,106,3.225,657,5.346,658,5.379,659,6.145,660,5.005,661,5.379,662,6.145]],["title/modules/DatabasesModule.html",[18,1.071,32,2.851]],["body/modules/DatabasesModule.html",[2,1.957,3,0.149,4,0.134,5,0.104,7,0.35,8,0.012,9,0.766,12,0.149,13,0.173,16,0.009,17,0.009,18,1.807,20,2.109,21,2.109,22,2.274,23,2.274,24,2.109,25,3.265,26,2.274,32,5.398,41,2.944,42,2.274,43,2.274,45,2.367,51,2.467,52,1.297,120,1.421,125,0.771,161,2.189,221,4.079,222,3.591,225,1.834,226,4.079,227,3.351,234,2.576,235,3.591,236,2.723,237,3.591,657,5.155,660,5.075,661,4.296,663,4.296,664,4.296,665,4.908,666,4.296,667,4.908,668,2.576,669,4.338,670,3.893,671,3.893]],["title/injectables/DatabasesService.html",[101,0.742,660,2.681]],["body/injectables/DatabasesService.html",[3,0.106,4,0.095,5,0.074,7,0.334,8,0.012,9,0.544,12,0.106,13,0.123,15,1.707,16,0.007,17,0.007,52,0.922,55,1.555,56,1.144,57,1.555,58,0.842,88,1.878,91,1.761,101,0.893,102,1.219,108,0.324,109,1.412,120,1.707,122,0.71,124,1.01,125,0.804,126,0.367,127,0.979,128,0.979,161,1.555,190,2.843,200,2.002,222,2.551,225,2.202,227,2.38,243,2.242,247,3.987,248,3.603,249,4.676,263,1.456,269,1.83,271,2.38,275,4.314,277,2.38,279,2.38,280,2.765,281,3.052,282,3.052,283,2.666,285,2.638,294,2.765,299,3.243,319,4.4,322,3.052,436,2.761,439,1.817,514,3.227,515,3.227,518,2.38,579,3.432,660,3.227,666,3.052,668,1.83,670,2.765,672,3.052,673,7.127,674,3.052,675,5.16,676,3.487,677,3.487,678,2.551,679,4.676,680,2.765,681,5.028,682,3.487,683,2.238,684,2.238,685,3.487,686,5.896,687,3.487,688,5.896,689,3.487,690,5.896,691,3.487,692,5.215,693,3.487,694,3.487,695,3.487,696,3.487,697,3.487,698,3.052,699,3.487,700,5.028,701,3.487,702,5.028,703,5.028,704,5.028,705,5.028,706,4.4,707,5.028,708,5.028,709,3.487,710,3.487,711,3.487,712,3.052,713,3.487,714,2.38]],["title/classes/DeleteUserDto.html",[13,0.147,715,3.056]],["body/classes/DeleteUserDto.html",[3,0.166,4,0.149,5,0.116,7,0.318,8,0.012,12,0.206,13,0.261,16,0.009,17,0.009,108,0.509,117,1.362,122,0.772,126,0.576,164,3.513,239,1.644,256,1.011,258,2.178,343,1.795,361,2.864,434,1.447,467,2.536,475,3.184,479,2.268,482,2.306,504,3.322,505,3.574,513,2.872,715,4.982,716,5.4,717,5.473,718,3.006,719,2.872,720,2.75,721,3.513,722,2.639,723,4.791]],["title/injectables/ErrorHandlerInterceptor.html",[101,0.742,724,3.312]],["body/injectables/ErrorHandlerInterceptor.html",[3,0.155,4,0.139,5,0.109,7,0.308,8,0.012,9,0.797,12,0.155,13,0.18,16,0.009,17,0.009,97,1.309,101,1.157,102,1.786,108,0.475,109,1.83,122,0.721,124,1.479,125,0.559,126,0.537,127,1.434,128,1.434,268,4.449,273,3.486,274,4.049,320,2.194,331,1.845,334,5.704,482,1.729,621,3.277,683,3.277,684,3.277,714,3.486,724,5.169,725,4.469,726,5.704,727,5.169,728,5.163,729,4.901,730,5.998,731,5.106,732,3.736,733,5.693,734,5.169,735,5.106,736,6.518,737,4.049,738,5.106,739,4.049,740,5.106,741,4.049]],["title/classes/File.html",[5,0.089,13,0.147]],["body/classes/File.html",[3,0.198,4,0.178,5,0.17,8,0.011,12,0.198,13,0.23,16,0.01,17,0.01,434,1.73,742,5.73]],["title/controllers/FilesController.html",[0,1.286,743,3.056]],["body/controllers/FilesController.html",[0,1.19,2,1.19,3,0.117,4,0.105,5,0.133,7,0.305,8,0.012,9,0.603,12,0.117,13,0.136,14,1.6,15,1.118,16,0.007,17,0.007,56,1.267,97,1.824,106,2.027,108,0.359,109,1.518,117,1.769,122,1.004,124,1.957,125,0.739,126,0.711,127,1.898,128,1.998,152,2.027,154,2.969,165,2.344,169,2.027,170,1.659,256,1.07,314,3.38,331,1.395,344,3.013,345,2.323,346,2.411,347,2.411,358,1.722,359,3.281,361,2.848,362,1.722,363,3.281,365,2.027,368,3.47,370,2.121,371,2.226,378,1.6,386,2.344,388,2.636,393,2.344,743,3.956,744,3.38,745,3.38,746,6.237,747,3.862,748,3.862,749,3.862,750,5.271,751,3.862,752,3.862,753,5.459,754,3.862,755,3.862,756,4.732,757,3.862,758,5.406,759,4.732,760,2.826,761,4.004,762,3.38,763,3.063,764,3.862,765,2.826,766,3.862,767,3.862,768,3.862,769,3.862,770,3.862,771,3.862,772,3.38,773,3.862,774,3.862,775,3.862,776,3.862,777,3.862,778,3.862,779,3.862,780,3.862,781,3.862,782,3.862,783,3.862]],["title/modules/FilesModule.html",[18,1.071,33,2.851]],["body/modules/FilesModule.html",[2,2.071,3,0.163,4,0.146,5,0.114,7,0.34,8,0.012,9,0.837,12,0.163,13,0.189,16,0.009,17,0.009,18,1.883,20,2.305,21,2.305,22,2.486,23,2.486,24,2.305,25,3.404,26,2.486,33,5.524,41,3.116,42,2.486,43,2.486,45,2.587,100,4.696,165,3.256,743,5.374,761,5.194,762,4.696,765,3.926,784,4.696,785,4.696,786,5.365,787,5.365,788,5.365,789,4.921,790,5.365,791,5.365]],["title/injectables/FilesService.html",[101,0.742,761,2.681]],["body/injectables/FilesService.html",[3,0.133,4,0.12,5,0.158,7,0.286,8,0.012,9,0.685,12,0.133,13,0.154,16,0.008,17,0.008,97,1.908,101,1.048,102,1.534,108,0.408,109,1.657,122,1.05,124,2.065,125,0.78,126,0.75,127,2.003,128,2.199,256,1.014,331,1.585,343,1.935,344,3.18,345,2.535,346,2.631,347,2.631,358,2.631,361,2.961,362,2.631,365,3.096,376,1.885,378,1.818,411,3.596,528,5.079,745,3.84,750,5.345,761,3.788,763,4.68,792,3.84,793,5.901,794,4.388,795,4.388,796,4.388,797,4.388,798,4.388,799,6.512,800,3.84,801,4.388,802,4.388]],["title/interfaces/HistoryResume.html",[572,2.851,617,1.794]],["body/interfaces/HistoryResume.html",[3,0.126,4,0.114,5,0.089,7,0.314,8,0.012,12,0.211,13,0.147,16,0.008,17,0.008,52,1.101,58,1.375,88,1.556,108,0.387,126,0.864,200,1.17,236,2.202,239,1.375,256,1.12,258,1.96,263,2.117,355,1.411,402,3.304,425,1.858,431,3.14,432,1.79,437,2.401,438,2.288,440,2.288,442,2.401,443,4.818,445,3.792,447,2.747,449,3.566,454,1.931,460,2.401,461,3.129,462,2.529,466,2.747,564,3.049,565,3.049,566,2.844,567,5.536,572,4.433,617,1.79,619,2.529,803,2.844,804,4.99,805,5.107,806,3.647,807,3.89,808,3.049,809,2.094,810,3.049,811,3.049,812,3.304,813,3.304,814,2.529,815,3.304,816,4.169,817,3.304,818,3.647,819,3.049,820,2.844,821,3.304]],["title/interfaces/IMailSender.html",[617,1.794,822,2.851]],["body/interfaces/IMailSender.html",[3,0.161,4,0.145,5,0.113,8,0.012,12,0.203,16,0.009,17,0.009,18,1.364,108,0.495,116,1.86,125,0.907,126,0.832,225,1.987,239,1.615,256,1.185,258,2.055,263,1.541,299,2.674,355,1.801,447,3.225,488,2.792,493,3.229,549,2.922,617,2.874,619,3.229,822,4.567,823,4.219,824,5.241]],["title/classes/Job.html",[13,0.147,809,2.099]],["body/classes/Job.html",[3,0.096,4,0.086,5,0.067,7,0.201,8,0.012,12,0.169,13,0.112,16,0.006,17,0.006,52,0.839,58,1.133,88,2.086,108,0.295,117,2.033,122,1.153,125,0.675,126,0.887,200,0.891,236,1.813,239,1.133,256,1.108,258,1.733,263,1.617,355,1.891,411,2.751,425,2.49,431,2.399,432,2.399,434,0.839,437,3.218,438,3.067,439,2.018,440,3.067,442,3.218,443,4.909,445,3.823,447,2.975,448,3.745,449,4.022,454,2.859,460,1.829,461,2.577,462,1.926,466,1.53,488,2.93,491,4.086,493,3.389,495,4.086,497,4.086,500,4.086,502,4.086,505,1.53,579,3.812,809,2.358,825,2.321,826,3.173,827,3.173,828,3.173,829,3.173,830,3.173,831,3.173,832,3.173,833,3.173,834,3.173,835,3.173,836,3.173,837,3.173,838,3.173,839,3.173,840,2.777,841,3.173,842,3.173,843,3.173,844,3.173,845,2.321,846,2.166,847,2.777]],["title/controllers/JobsController.html",[0,1.286,848,3.056]],["body/controllers/JobsController.html",[0,0.976,2,0.976,3,0.096,4,0.086,5,0.067,7,0.306,8,0.012,9,0.494,12,0.096,13,0.111,14,1.312,15,0.917,16,0.006,17,0.006,56,1.83,97,1.687,106,1.662,108,0.295,109,1.316,116,2.66,117,1.637,118,4.209,120,2.284,122,0.929,124,1.906,125,0.72,126,0.692,127,1.848,128,1.848,152,2.927,154,2.574,159,2.574,160,1.662,161,1.412,166,1.224,169,1.662,170,1.361,173,4.224,175,2.934,176,4.493,177,5.219,191,3.581,256,1.065,331,1.693,343,1.83,344,2.09,345,2.014,346,2.09,347,2.488,358,1.412,359,1.922,361,2.829,362,1.412,363,1.922,365,1.662,367,3.429,368,2.033,370,2.574,371,1.826,372,2.172,376,1.361,378,1.312,381,2.033,386,1.922,388,2.162,393,1.922,485,4.182,632,2.649,809,3.757,824,4.493,848,3.429,849,2.772,850,2.772,851,3.429,852,3.167,853,3.167,854,2.772,855,3.167,856,3.167,857,2.772,858,3.167,859,3.717,860,3.167,861,3.167,862,4.997,863,3.167,864,3.167,865,3.581,866,2.772,867,3.717,868,3.167,869,3.167,870,3.167,871,3.167,872,3.167,873,5.579,874,3.167,875,3.167,876,3.167]],["title/modules/JobsModule.html",[18,1.071,34,2.851]],["body/modules/JobsModule.html",[2,2.06,3,0.161,4,0.145,5,0.113,7,0.339,8,0.012,9,0.83,12,0.161,13,0.187,16,0.009,17,0.009,18,1.876,20,2.286,21,2.286,22,2.465,23,2.465,24,2.286,25,3.39,26,2.465,34,5.512,41,3.1,42,2.465,43,2.465,45,2.565,51,2.674,52,1.406,125,0.582,234,2.792,236,2.056,809,2.674,846,4.567,848,5.354,865,5.183,866,4.657,877,4.657,878,4.657,879,5.32,880,5.32,881,4.657]],["title/injectables/JobsService.html",[101,0.742,865,2.681]],["body/injectables/JobsService.html",[3,0.101,4,0.091,5,0.071,7,0.319,8,0.012,9,0.521,12,0.101,13,0.117,15,0.967,16,0.007,17,0.007,52,0.883,55,1.489,56,1.095,57,1.489,58,0.806,91,2.357,97,1.724,101,0.865,102,1.168,108,0.311,109,1.369,116,2.693,120,2.099,122,0.991,124,2.033,125,0.768,126,0.739,127,1.972,128,1.889,142,2.53,166,1.291,190,1.61,200,1.889,243,1.489,248,2.93,256,1.076,258,1.616,263,1.411,269,1.753,283,2.277,304,2.957,320,3.256,330,1.834,331,1.207,343,1.598,344,2.173,345,2.093,346,2.173,347,2.173,358,2.173,361,2.871,362,2.173,365,2.557,376,1.435,378,1.384,421,1.678,422,2.027,426,2.957,431,1.435,432,1.435,485,4.082,632,2.472,809,1.678,845,2.444,850,4.265,854,4.265,862,5.073,865,3.128,867,3.865,881,2.923,882,2.923,883,3.34,884,3.34,885,4.265,886,3.34,887,3.34,888,3.34,889,3.34,890,3.34,891,3.34,892,3.34,893,3.34,894,4.873,895,2.28,896,3.34,897,3.34,898,3.34,899,2.923,900,4.873,901,3.34]],["title/injectables/JwtAuthGuard.html",[61,3.056,101,0.742]],["body/injectables/JwtAuthGuard.html",[3,0.202,4,0.102,5,0.079,7,0.313,8,0.012,9,0.584,12,0.113,13,0.132,14,1.55,16,0.007,17,0.007,60,2.554,61,3.868,88,2.29,97,1.708,101,0.939,102,1.308,108,0.348,109,1.485,120,2.035,122,0.865,124,1.775,125,0.671,126,0.645,127,1.722,128,1.485,161,1.668,165,2.27,175,2.357,176,2.554,196,4.192,200,2.106,215,2.401,243,1.668,256,0.51,299,2.656,330,2.903,331,1.91,333,1.963,454,1.733,482,1.79,549,2.054,668,1.963,722,2.549,728,5.119,729,2.554,732,4.875,741,4.862,902,5.831,903,2.966,904,5.286,905,5.286,906,5.286,907,3.274,908,5.786,909,3.741,910,5.286,911,3.741,912,5.286,913,3.741,914,5.286,915,3.609,916,3.274,917,5.365,918,3.741,919,3.741,920,2.966,921,2.966,922,2.737,923,5.286,924,3.741,925,4.192,926,5.286,927,3.741,928,3.274,929,3.274,930,3.274,931,2.966,932,3.274,933,3.274,934,3.274,935,3.741,936,3.741,937,5.286,938,3.741,939,3.741,940,3.741,941,3.741,942,6.13,943,3.741,944,3.741,945,3.741,946,5.286,947,3.741,948,3.741,949,3.741,950,3.741]],["title/injectables/JwtStrategy.html",[101,0.742,211,2.851]],["body/injectables/JwtStrategy.html",[3,0.135,4,0.122,5,0.095,7,0.33,8,0.012,9,0.696,12,0.135,13,0.157,15,1.728,16,0.008,17,0.008,49,5.256,50,2.862,88,1.666,91,2.007,97,1.143,101,1.059,102,1.56,108,0.415,109,1.675,116,2.51,122,0.842,124,1.728,125,0.819,126,0.628,127,1.675,128,1.253,142,2.386,166,1.723,190,2.876,191,2.862,200,1.888,211,4.073,215,2.862,223,3.942,224,3.537,225,2.511,230,3.903,243,2.66,250,5.884,256,0.813,258,1.888,263,1.728,283,1.51,294,3.537,295,3.903,299,2.241,300,3.903,303,5.221,722,2.876,922,3.263,951,3.903,952,5.221,953,5.221,954,4.46,955,4.46,956,5.966,957,4.46,958,3.903,959,4.46,960,3.903,961,3.537,962,4.46,963,4.46,964,4.46,965,4.46,966,4.46]],["title/injectables/LocalAuthGuard.html",[101,0.742,155,3.056]],["body/injectables/LocalAuthGuard.html",[3,0.188,4,0.169,5,0.132,7,0.315,8,0.012,9,0.969,12,0.188,13,0.218,16,0.01,17,0.01,101,1.305,102,2.17,155,5.377,215,3.983,722,3.543,903,4.921,916,5.431,967,5.431,968,7.349]],["title/injectables/LocalStrategy.html",[101,0.742,212,2.851]],["body/injectables/LocalStrategy.html",[3,0.148,4,0.133,5,0.104,7,0.319,8,0.012,9,0.762,12,0.148,13,0.172,14,2.023,16,0.009,17,0.009,91,2.099,97,1.252,101,1.125,102,1.708,108,0.454,109,1.779,120,2.035,122,0.894,124,1.834,125,0.693,126,0.666,127,1.779,128,1.371,156,3.873,157,4.792,158,3.873,200,1.371,212,4.323,215,3.134,243,2.177,256,1.077,264,4.323,283,1.653,285,4.044,330,2.682,331,1.764,333,2.562,482,1.653,520,4.323,722,3.054,915,4.323,922,3.573,952,5.543,953,5.543,958,4.274,960,4.274,961,3.873,969,4.274,970,4.883,971,4.883,972,6.333,973,4.883,974,4.883,975,4.883]],["title/controllers/MailerController.html",[0,1.286,976,3.056]],["body/controllers/MailerController.html",[0,1.63,2,1.63,3,0.16,4,0.144,5,0.112,7,0.339,8,0.012,9,0.826,12,0.16,13,0.186,14,2.192,15,1.532,16,0.009,17,0.009,74,4.196,91,2.179,97,1.357,106,2.776,108,0.492,109,1.872,117,1.316,122,0.747,128,1.486,142,2.116,159,3.661,160,2.776,161,2.359,169,2.776,170,2.273,263,1.93,283,1.791,976,4.877,977,4.631,978,4.196,979,7.662,980,5.291,981,6.666,982,5.291,983,4.685,984,4.631,985,5.291,986,5.291,987,5.291,988,5.291,989,5.291,990,5.291,991,5.291]],["title/modules/MailerModule.html",[18,1.071,35,2.851]],["body/modules/MailerModule.html",[2,1.795,3,0.131,4,0.117,5,0.092,7,0.348,8,0.012,9,0.672,12,0.131,13,0.152,16,0.008,17,0.008,18,1.694,20,1.851,21,1.851,22,1.996,23,1.996,24,1.851,25,3.061,26,1.996,35,5.484,41,2.701,42,1.996,43,1.996,45,2.81,49,4.832,50,2.765,51,2.165,52,1.139,88,1.609,90,3.417,91,1.287,98,3.417,107,3.417,120,1.248,125,0.638,234,2.261,236,2.252,261,3.771,291,2.483,331,1.557,634,3.152,809,2.165,810,3.152,817,3.417,846,3.979,976,4.833,978,5.864,983,4.892,984,3.771,992,3.771,993,3.771,994,3.771,995,4.308,996,4.308,997,4.622,998,3.417,999,3.417,1000,5.829,1001,4.308,1002,2.483,1003,3.979,1004,3.771,1005,4.308,1006,4.308,1007,4.308,1008,4.308,1009,4.308,1010,2.615,1011,4.308,1012,4.308,1013,3.771,1014,4.308,1015,4.308,1016,4.308,1017,4.308,1018,4.308,1019,3.771]],["title/injectables/MailerService.html",[101,0.742,983,2.681]],["body/injectables/MailerService.html",[3,0.122,4,0.11,5,0.086,7,0.335,8,0.012,9,0.628,12,0.122,13,0.142,15,1.847,16,0.008,17,0.008,52,1.064,55,1.795,56,1.32,57,1.795,58,0.972,91,1.904,101,0.988,102,1.408,108,0.374,109,1.563,122,0.785,124,1.166,125,0.698,126,0.424,127,1.131,128,1.131,166,1.555,178,2.584,190,3.075,200,2.028,243,2.481,248,3.547,263,1.166,269,2.112,283,2.159,355,1.363,488,2.92,493,2.443,683,2.584,732,2.945,809,2.796,810,2.945,822,3.799,824,3.799,845,2.945,885,5.581,983,4.093,997,3.192,998,3.192,1002,2.32,1004,3.523,1013,3.523,1020,3.523,1021,6.879,1022,4.026,1023,6.879,1024,6.377,1025,4.026,1026,5.564,1027,4.026,1028,2.945,1029,4.026,1030,4.026,1031,4.026,1032,4.87,1033,4.026,1034,4.026,1035,4.026,1036,4.026,1037,4.026,1038,5.564,1039,4.026,1040,4.026,1041,5.564,1042,4.026,1043,4.026,1044,5.564,1045,4.026,1046,4.026,1047,4.026,1048,4.026,1049,4.026,1050,4.026,1051,4.026,1052,4.026,1053,3.523,1054,4.026,1055,4.026,1056,4.026,1057,4.026,1058,3.523,1059,4.026,1060,4.026,1061,4.026]],["title/injectables/MulterConfigService.html",[101,0.742,789,3.056]],["body/injectables/MulterConfigService.html",[3,0.116,4,0.104,5,0.143,7,0.315,8,0.012,9,0.597,12,0.116,13,0.135,16,0.007,17,0.007,88,2.005,97,1.884,101,0.953,102,1.337,108,0.356,109,1.508,122,0.949,124,1.554,125,0.587,126,0.565,127,1.508,128,1.742,135,4.698,165,2.32,178,3.446,200,2.163,239,1.296,256,0.846,265,2.454,286,4.698,288,2.797,291,3.094,454,1.772,480,1.642,481,1.921,684,2.454,741,4.257,753,5.43,756,3.346,759,3.346,760,2.797,765,2.797,772,3.346,789,3.928,999,3.032,1010,2.32,1062,3.346,1063,6.204,1064,6.727,1065,5.368,1066,5.368,1067,3.823,1068,6.204,1069,5.368,1070,3.823,1071,3.823,1072,3.823,1073,5.368,1074,3.823,1075,3.823,1076,5.368,1077,5.368,1078,5.368,1079,3.823,1080,3.823,1081,3.823,1082,3.823,1083,3.823,1084,3.823,1085,6.727,1086,3.823,1087,5.368,1088,3.823,1089,3.823,1090,3.823,1091,5.368,1092,3.823,1093,3.823,1094,3.823,1095,3.823,1096,3.823,1097,3.823,1098,3.823,1099,5.368,1100,3.823,1101,3.823,1102,3.823,1103,5.368,1104,3.823,1105,5.368,1106,3.823]],["title/interfaces/PaginationQueryOptions.html",[617,1.794,626,2.851]],["body/interfaces/PaginationQueryOptions.html",[3,0.12,4,0.108,5,0.084,7,0.272,8,0.012,12,0.167,16,0.008,17,0.008,55,1.772,56,2.077,57,1.772,58,1.331,91,1.187,97,1.019,108,0.37,126,0.72,127,2.184,200,2.246,239,1.331,248,2.556,256,0.542,264,2.714,283,1.868,293,2.894,320,2.721,372,1.842,411,3.051,413,5.259,418,2.908,419,2.714,420,2.714,421,1.998,617,2.37,618,2.908,619,2.412,620,2.908,621,3.54,622,5.426,623,5.426,624,4.374,625,4.374,626,4.324,627,5.259,628,6.912,629,4.907,630,5.259,631,5.259,632,1.708,633,4.374,634,4.635,635,4.374,636,2.908,637,4.374,638,3.152,639,3.152,640,3.152,641,3.152,642,5.426,643,3.152,644,3.152,645,3.152,646,4.374,647,3.152,648,4.374,649,3.152,650,3.152,651,3.152,652,3.152,653,3.152,654,3.152,655,3.152,656,3.152]],["title/injectables/ParseObjectIDPipe.html",[101,0.742,1107,3.312]],["body/injectables/ParseObjectIDPipe.html",[3,0.166,4,0.149,5,0.116,7,0.292,8,0.012,9,0.854,12,0.166,13,0.193,16,0.009,17,0.009,58,1.644,97,1.403,101,1.209,102,1.914,108,0.509,109,1.912,122,0.772,124,1.585,125,0.599,126,0.576,127,1.537,128,1.537,200,1.537,256,0.746,265,4.371,684,3.513,720,2.75,915,3.737,1107,5.4,1108,4.791,1109,6.809,1110,6.809,1111,5.473,1112,6.809,1113,5.473,1114,6.809,1115,5.473,1116,5.473,1117,6.809,1118,5.473]],["title/classes/Permission.html",[13,0.147,668,2.192]],["body/classes/Permission.html",[3,0.116,4,0.104,5,0.081,7,0.266,8,0.012,9,0.596,12,0.188,13,0.134,16,0.007,17,0.007,18,1.589,52,1.008,58,0.921,88,1.425,101,0.678,108,0.355,117,1.994,122,1.131,125,0.678,126,0.881,175,2.763,200,1.072,236,2.071,239,1.294,256,1.119,258,1.74,263,1.794,425,2.763,431,2.662,432,2.662,434,1.008,437,3.571,438,3.403,440,3.403,442,3.571,443,4.861,445,3.69,447,2.988,448,3.761,449,4.032,454,2.484,460,2.199,461,2.944,462,2.316,549,3.403,668,2.813,669,2.605,678,2.792,1119,2.792,1120,3.816,1121,3.816,1122,3.816,1123,3.816,1124,3.816,1125,3.816,1126,3.816,1127,3.816,1128,3.816,1129,3.816,1130,3.816,1131,3.34]],["title/controllers/PermissionController.html",[0,1.286,1132,3.056]],["body/controllers/PermissionController.html",[0,0.955,2,0.955,3,0.094,4,0.084,5,0.066,7,0.304,8,0.012,9,0.484,12,0.094,13,0.109,14,1.285,15,0.898,16,0.006,17,0.006,56,1.807,91,2.042,97,1.672,106,1.627,108,0.288,109,1.296,116,2.646,117,1.623,118,3.149,120,2.331,122,0.92,124,1.889,125,0.714,126,0.686,127,1.832,128,1.832,142,1.845,152,3.202,154,2.533,159,3.582,160,1.627,161,1.382,166,1.198,169,1.627,170,1.332,173,4.186,175,2.908,256,1.06,283,1.562,331,1.99,343,1.807,344,2.057,345,1.982,346,2.057,347,2.456,358,1.382,359,2.8,361,2.736,362,1.382,363,2.8,365,1.627,367,3.375,368,1.99,370,2.533,371,1.787,372,1.437,376,1.332,378,1.285,381,1.99,386,1.882,388,2.117,393,1.882,439,2.357,546,4.388,632,1.982,668,4.079,851,3.375,1010,3.958,1132,3.375,1133,2.714,1134,2.714,1135,3.1,1136,3.1,1137,1.787,1138,3.1,1139,3.1,1140,3.1,1141,3.1,1142,4.966,1143,3.1,1144,3.1,1145,2.714,1146,3.536,1147,2.714,1148,3.658,1149,3.1,1150,3.1,1151,3.1,1152,3.375,1153,2.268,1154,3.1,1155,5.509,1156,3.1,1157,3.1,1158,3.1]],["title/modules/PermissionModule.html",[18,1.071,36,2.851]],["body/modules/PermissionModule.html",[2,2.057,3,0.161,4,0.145,5,0.113,7,0.339,8,0.012,9,0.828,12,0.161,13,0.187,16,0.009,17,0.009,18,1.874,20,2.279,21,2.279,22,2.458,23,2.458,24,2.279,25,3.386,26,2.458,36,5.509,41,3.094,42,2.458,43,2.458,45,2.558,51,2.666,52,1.402,125,0.581,234,2.784,236,2.05,668,2.784,669,4.559,671,4.208,1132,5.347,1146,5.179,1147,4.644,1159,4.644,1160,4.644,1161,5.306,1162,5.306,1163,4.644]],["title/injectables/PermissionService.html",[101,0.742,1146,2.681]],["body/injectables/PermissionService.html",[3,0.094,4,0.084,5,0.066,7,0.319,8,0.012,9,0.484,12,0.094,13,0.109,15,0.898,16,0.006,17,0.006,52,0.819,55,1.382,56,1.017,57,1.382,58,0.748,91,2.387,97,1.672,101,0.819,102,1.084,108,0.288,109,1.296,116,2.646,120,2.153,122,0.965,124,1.98,125,0.813,126,0.719,127,1.92,128,1.832,142,2.609,166,1.198,175,1.382,190,1.495,200,1.92,235,4.031,243,1.382,248,2.827,256,1.06,258,1.92,268,2.117,269,1.627,283,2.397,320,3.25,330,2.533,331,1.667,333,1.627,343,1.513,344,2.057,345,1.982,346,2.057,347,2.057,358,2.057,361,2.642,362,2.057,365,2.421,376,1.332,378,1.285,421,1.558,422,1.882,425,1.382,426,3.343,431,1.332,432,1.332,546,4.388,549,1.703,632,1.332,668,1.627,675,4.037,678,2.268,760,2.268,895,2.117,1134,4.037,1137,2.659,1142,4.966,1146,2.961,1148,3.658,1163,2.714,1164,2.714,1165,3.1,1166,3.1,1167,3.1,1168,3.1,1169,3.1,1170,3.1,1171,3.1,1172,2.268,1173,2.714,1174,3.1,1175,4.037,1176,3.1,1177,3.1,1178,3.1,1179,3.1,1180,3.1,1181,2.714,1182,3.1,1183,3.1,1184,4.037,1185,3.1,1186,3.1,1187,2.714,1188,3.1,1189,3.1,1190,4.613,1191,3.1]],["title/classes/RegisterUserDto.html",[13,0.147,148,2.407]],["body/classes/RegisterUserDto.html",[3,0.1,4,0.09,5,0.07,7,0.288,8,0.012,12,0.173,13,0.246,15,1.402,16,0.007,17,0.007,58,1.169,108,0.308,117,1.741,122,0.988,125,0.827,126,0.78,148,2.791,162,2.009,170,1.422,225,1.809,239,1.169,256,1.126,258,1.36,263,2.19,285,3.968,333,3.004,355,2.269,411,2.552,434,0.875,436,3.971,439,1.75,466,1.596,467,3.105,471,2.009,475,3.532,476,3.108,477,3.108,478,3.108,479,1.372,480,1.422,481,1.664,482,2.797,503,4.936,504,2.009,505,4.014,507,2.422,509,4.043,510,3.108,511,3.474,512,4.188,513,1.737,514,4.641,515,4.641,516,2.26,517,3.305,518,2.26,519,2.125,520,2.26,521,2.422,610,2.898,1192,3.311,1193,3.311,1194,3.311,1195,3.311,1196,3.311,1197,3.311]],["title/interfaces/Response.html",[131,2.681,617,1.794]],["body/interfaces/Response.html",[3,0.148,4,0.133,5,0.104,7,0.33,8,0.012,9,0.76,12,0.192,13,0.171,14,2.018,16,0.009,17,0.009,60,3.325,97,1.249,101,1.123,108,0.453,126,0.739,131,4.058,161,2.172,239,1.526,256,0.957,320,2.093,411,3.13,480,2.093,482,2.607,617,2.093,619,2.956,621,3.126,683,3.126,684,3.126,714,5.387,727,3.863,728,4.316,729,3.325,730,5.014,733,5.014,734,5.014,737,3.863,739,6.106,908,5.567,925,3.863,1198,3.863,1199,4.263,1200,4.263,1201,3.564,1202,4.263,1203,4.263,1204,4.263,1205,4.263,1206,4.263]],["title/classes/Resume.html",[13,0.147,814,2.535]],["body/classes/Resume.html",[3,0.098,4,0.088,5,0.069,7,0.285,8,0.012,12,0.189,13,0.114,16,0.006,17,0.006,52,0.857,58,1.151,88,1.211,108,0.302,117,1.988,122,1.128,126,0.882,200,0.911,236,1.843,239,1.151,256,1.07,258,1.751,263,2.08,355,1.098,402,2.572,425,2.522,431,2.679,432,2.43,434,0.857,437,3.26,438,3.106,440,3.106,442,3.26,443,4.819,445,3.61,447,2.727,448,4.217,449,3.816,454,2.21,460,1.869,461,2.619,462,1.968,466,3.007,468,3.339,564,4.139,565,4.139,566,3.861,567,5.27,572,3.861,617,1.393,803,2.214,804,4.257,805,2.373,806,2.838,807,3.861,808,2.373,809,1.63,810,2.373,811,2.373,812,2.572,813,2.572,814,2.894,815,4.486,816,4.563,817,2.572,818,2.838,819,4.139,820,2.214,821,2.572,1207,3.243,1208,3.243,1209,3.243,1210,3.243,1211,3.243,1212,3.243,1213,3.243,1214,3.243,1215,3.243,1216,3.243,1217,3.243,1218,3.243,1219,3.243,1220,3.243]],["title/controllers/ResumesController.html",[0,1.286,1221,3.056]],["body/controllers/ResumesController.html",[0,0.86,2,0.86,3,0.085,4,0.076,5,0.059,7,0.302,8,0.012,9,0.436,12,0.085,13,0.098,14,1.156,15,0.808,16,0.006,17,0.006,56,1.695,91,2.156,97,1.684,106,1.465,108,0.26,109,1.197,116,2.689,117,1.634,118,4.484,120,2.378,122,0.927,124,1.902,125,0.719,126,0.691,127,1.845,128,1.845,142,2.068,152,3.036,154,1.533,159,3.608,160,1.465,161,1.245,166,1.078,169,1.465,170,1.199,173,4.216,175,2.929,256,1.036,283,0.945,331,1.868,343,1.695,344,1.9,345,1.831,346,1.9,358,1.245,359,1.694,361,2.846,362,1.245,363,1.694,368,1.791,370,2.34,371,1.609,372,1.293,376,1.199,378,1.156,381,1.791,386,1.694,393,1.694,439,2.374,561,4.216,632,1.831,804,4.665,807,3.95,808,2.042,813,4.942,814,4.471,851,3.118,857,2.443,859,3.38,1010,3.987,1053,4.525,1137,1.609,1145,2.443,1153,2.042,1221,3.118,1222,2.443,1223,3.73,1224,3.73,1225,2.443,1226,2.791,1227,2.791,1228,2.791,1229,2.791,1230,2.791,1231,2.791,1232,2.791,1233,2.791,1234,2.791,1235,2.791,1236,2.443,1237,4.262,1238,2.791,1239,2.791,1240,3.318,1241,2.443,1242,3.38,1243,1.905,1244,2.791,1245,2.791,1246,2.791,1247,2.791,1248,5.17,1249,2.791,1250,2.791,1251,2.791,1252,2.791,1253,2.791,1254,2.791,1255,2.791,1256,2.791,1257,2.791,1258,2.791]],["title/modules/ResumesModule.html",[18,1.071,37,2.851]],["body/modules/ResumesModule.html",[2,2.057,3,0.161,4,0.145,5,0.113,7,0.339,8,0.012,9,0.828,12,0.161,13,0.187,16,0.009,17,0.009,18,1.874,20,2.279,21,2.279,22,2.458,23,2.458,24,2.279,25,3.386,26,2.458,37,5.509,41,3.094,42,2.458,43,2.458,45,2.558,51,2.666,52,1.402,125,0.581,234,2.784,236,2.05,573,4.208,814,3.22,820,4.559,1221,5.347,1240,5.179,1241,4.644,1259,4.644,1260,4.644,1261,5.306,1262,5.306,1263,5.306]],["title/injectables/ResumesService.html",[101,0.742,1240,2.681]],["body/injectables/ResumesService.html",[3,0.081,4,0.073,5,0.057,7,0.318,8,0.012,9,0.417,12,0.081,13,0.094,15,0.773,16,0.006,17,0.006,52,0.706,55,1.19,56,0.876,57,1.19,58,1.214,91,2.322,97,1.655,101,0.731,102,0.934,108,0.248,109,1.157,116,2.546,120,2.064,122,0.949,124,1.948,125,0.78,126,0.708,127,1.889,128,1.813,142,2.443,166,1.032,190,1.287,200,1.715,243,1.19,248,2.619,256,1.06,258,2.081,263,1.769,269,1.401,283,2.185,291,2.374,292,3.013,293,3.387,304,3.707,320,3.127,330,1.466,331,1.817,333,1.401,343,1.351,344,1.836,345,1.769,346,1.836,358,1.836,361,2.599,362,1.836,376,1.147,378,1.106,421,1.342,422,1.62,425,1.19,426,3.917,431,2.16,432,1.147,441,1.953,445,2.07,561,3.92,564,3.013,565,3.013,566,1.822,573,2.117,629,1.822,632,1.147,804,5.058,805,3.013,807,4.169,808,1.953,811,1.953,814,1.62,815,4.483,819,3.013,895,1.822,915,1.822,1010,1.62,1137,2.374,1172,1.953,1173,2.337,1187,4.401,1223,3.605,1224,3.605,1225,3.605,1236,3.605,1240,2.644,1242,3.266,1243,1.822,1264,2.337,1265,2.67,1266,2.67,1267,4.119,1268,2.67,1269,2.67,1270,2.67,1271,4.119,1272,2.67,1273,2.67,1274,2.67,1275,2.337,1276,2.67,1277,2.67,1278,2.67,1279,2.67,1280,2.67,1281,4.119,1282,4.119,1283,2.67,1284,2.67,1285,4.119,1286,2.67,1287,2.67,1288,2.67,1289,2.337,1290,2.337]],["title/classes/Role.html",[13,0.147,225,1.56]],["body/classes/Role.html",[3,0.113,4,0.101,5,0.079,7,0.262,8,0.012,12,0.185,13,0.131,16,0.007,17,0.007,52,0.983,58,1.271,88,2.283,108,0.346,117,1.984,122,1.126,125,0.669,126,0.882,200,1.044,225,1.966,226,2.387,236,2.034,239,1.271,256,1.075,258,1.716,263,1.769,277,2.539,299,3.071,425,2.725,431,2.625,432,2.625,434,0.983,437,3.522,438,3.356,439,2.208,440,3.356,442,3.522,443,4.811,445,3.659,447,2.946,448,4.033,449,3.999,454,3.079,460,2.143,461,2.891,462,2.257,466,1.793,468,2.645,579,4.171,668,3.206,670,2.949,671,2.949,816,3.852,1291,2.721,1292,3.719,1293,3.719,1294,3.719,1295,3.719,1296,3.719,1297,3.719,1298,3.719,1299,3.719,1300,3.719,1301,3.719,1302,3.719,1303,3.719,1304,3.255,1305,3.255]],["title/controllers/RolesController.html",[0,1.286,1306,3.056]],["body/controllers/RolesController.html",[0,0.979,2,0.979,3,0.096,4,0.087,5,0.068,7,0.306,8,0.012,9,0.496,12,0.096,13,0.112,14,1.317,15,0.92,16,0.006,17,0.006,56,1.833,91,2.06,97,1.69,106,1.668,108,0.296,109,1.32,116,2.662,117,1.639,120,2.34,122,0.93,124,1.908,125,0.721,126,0.693,127,1.851,128,1.851,142,1.879,152,3.241,154,2.58,159,3.619,161,1.417,166,1.228,169,1.668,170,1.365,173,4.23,175,2.938,223,3.07,225,2.462,256,1.065,283,1.591,331,2.02,343,1.833,344,2.095,345,2.018,346,2.095,347,2.492,358,1.417,359,2.852,361,2.758,362,1.417,363,2.852,365,1.668,368,3.016,370,2.58,371,1.832,372,1.473,376,1.365,378,1.317,381,2.04,386,1.929,388,2.17,393,1.929,439,2.381,576,4.428,632,2.018,1010,4,1137,1.832,1152,2.325,1153,2.325,1306,3.438,1307,2.782,1308,5.59,1309,2.782,1310,3.178,1311,3.178,1312,3.178,1313,3.178,1314,5.002,1315,3.178,1316,2.782,1317,3.726,1318,3.178,1319,3.178,1320,3.178,1321,3.178,1322,5.59,1323,3.178,1324,3.178,1325,3.178]],["title/modules/RolesModule.html",[18,1.071,38,2.681]],["body/modules/RolesModule.html",[2,2.018,3,0.156,4,0.14,5,0.109,7,0.336,8,0.012,9,0.803,12,0.156,13,0.181,16,0.009,17,0.009,18,1.848,20,2.211,21,2.211,22,2.385,23,2.385,24,2.211,25,3.339,26,3.339,38,5.222,41,3.036,42,2.385,43,2.385,45,2.482,51,2.587,52,1.36,125,0.563,223,4.656,225,1.923,226,4.205,234,2.701,236,1.989,237,3.766,1306,5.273,1316,4.505,1326,4.505,1327,4.505,1328,4.505,1329,5.148,1330,5.148,1331,4.505]],["title/injectables/RolesService.html",[101,0.742,223,2.294]],["body/injectables/RolesService.html",[3,0.096,4,0.086,5,0.067,7,0.314,8,0.012,9,0.494,12,0.096,13,0.111,15,0.917,16,0.006,17,0.006,18,0.812,52,0.837,55,1.412,56,1.039,57,1.412,58,0.765,91,2.395,97,1.687,101,0.832,102,1.108,108,0.295,109,1.316,116,2.66,120,2.165,122,0.972,124,1.995,125,0.78,126,0.725,127,1.935,128,1.848,142,2.632,166,1.224,175,1.412,190,1.527,200,1.848,223,2.574,225,1.183,243,1.412,248,2.857,249,3.717,256,1.065,258,2.002,263,1.616,269,1.662,277,2.162,283,2.333,291,1.826,292,2.318,293,3.453,299,2.355,304,3.386,320,3.145,343,1.537,344,2.09,345,2.014,346,2.09,347,2.09,358,2.09,361,2.662,362,2.09,365,2.459,372,1.468,376,1.361,378,1.312,421,1.592,422,1.922,425,1.412,426,3.386,431,1.361,432,1.361,549,1.74,576,4.423,632,1.361,636,2.318,1137,2.701,1309,4.102,1314,4.997,1317,3.717,1331,2.772,1332,2.772,1333,3.167,1334,3.167,1335,3.167,1336,3.167,1337,3.167,1338,3.167,1339,3.167,1340,3.167,1341,3.167,1342,3.167,1343,3.167,1344,3.167,1345,3.167,1346,3.167,1347,3.167,1348,3.167,1349,4.687,1350,3.167]],["title/classes/Subscriber.html",[13,0.147,1002,2.407]],["body/classes/Subscriber.html",[3,0.12,4,0.108,5,0.084,7,0.236,8,0.012,12,0.191,13,0.139,16,0.007,17,0.007,52,1.044,58,0.953,108,0.367,117,1.987,122,1.127,125,0.691,126,0.885,200,1.109,236,2.122,239,1.326,256,1.118,258,1.773,263,2.15,425,2.815,431,2.712,432,2.712,434,1.044,437,3.639,438,3.467,440,3.467,442,3.639,443,4.828,445,3.73,447,3.044,448,4.141,449,4.077,454,2.545,460,2.277,461,3.016,468,1.985,488,3.313,1002,3.165,1003,2.697,1028,2.89,1351,2.89,1352,3.95,1353,3.95,1354,3.95,1355,3.95,1356,3.95,1357,3.95,1358,3.95,1359,3.95,1360,3.95,1361,3.95,1362,3.457]],["title/controllers/SubscribersController.html",[0,1.286,1363,3.056]],["body/controllers/SubscribersController.html",[0,0.912,2,0.912,3,0.09,4,0.081,5,0.063,7,0.299,8,0.012,9,0.462,12,0.09,13,0.104,14,1.227,15,0.857,16,0.006,17,0.006,56,1.462,91,2.299,97,1.723,106,1.553,108,0.275,109,1.252,116,2.722,117,1.672,120,2.343,122,0.948,124,1.946,125,0.735,126,0.707,127,1.887,128,2.015,142,2.385,152,2.812,154,1.626,160,1.553,161,1.32,166,1.144,169,1.553,170,1.272,173,4.105,175,2.852,176,4.366,177,5.072,191,4.105,256,1.001,283,2.019,331,1.936,343,1.758,344,1.987,345,1.914,346,2.389,347,2.389,358,1.32,359,2.705,361,2.694,362,1.32,363,2.705,370,2.943,371,1.706,372,1.372,376,1.272,378,1.227,381,1.9,386,1.797,393,1.797,594,4.313,632,1.914,799,5.219,800,3.9,1002,2.568,1137,1.706,1152,2.166,1153,2.166,1363,3.261,1364,2.591,1365,6.28,1366,3.9,1367,2.591,1368,5.963,1369,2.96,1370,2.96,1371,2.96,1372,2.96,1373,2.96,1374,2.591,1375,2.96,1376,2.96,1377,2.96,1378,2.591,1379,4.587,1380,2.96,1381,2.96,1382,3.44,1383,2.591,1384,3.534,1385,4.25,1386,2.96,1387,2.96,1388,2.96,1389,2.96,1390,4.69,1391,2.96,1392,2.96,1393,2.96,1394,2.96,1395,2.96,1396,2.96,1397,2.96]],["title/modules/SubscribersModule.html",[18,1.071,39,2.851]],["body/modules/SubscribersModule.html",[2,2.057,3,0.161,4,0.145,5,0.113,7,0.339,8,0.012,9,0.828,12,0.161,13,0.187,16,0.009,17,0.009,18,1.874,20,2.279,21,2.279,22,2.458,23,2.458,24,2.279,25,3.386,26,2.458,39,5.509,41,3.094,42,2.458,43,2.458,45,2.558,51,2.666,52,1.402,125,0.581,234,2.784,236,2.05,1002,3.058,1003,4.559,1019,4.644,1363,5.347,1382,5.179,1383,4.644,1398,4.644,1399,4.644,1400,5.306,1401,5.306,1402,4.644]],["title/injectables/SubscribersService.html",[101,0.742,1382,2.681]],["body/injectables/SubscribersService.html",[3,0.092,4,0.082,5,0.064,7,0.31,8,0.012,9,0.472,12,0.092,13,0.106,15,0.876,16,0.006,17,0.006,52,0.8,55,1.349,56,0.993,57,1.349,58,0.73,88,1.13,91,2.424,97,1.737,101,0.805,102,1.058,108,0.281,109,1.272,116,2.734,120,2.178,122,0.991,124,2.034,125,0.769,126,0.739,127,1.973,128,1.903,142,2.71,166,1.169,190,1.459,200,1.903,243,1.349,248,2.793,256,1.007,258,1.813,263,1.962,268,2.066,269,1.588,283,2.501,293,1.588,304,3.918,320,3.103,330,1.662,331,1.094,338,2.649,340,2.649,343,1.486,344,2.02,345,1.946,346,2.02,347,2.02,358,2.02,361,2.33,362,2.02,376,1.3,378,1.254,421,1.521,422,1.837,425,1.349,426,3.296,431,1.3,432,1.3,488,1.588,594,4.349,632,1.3,712,2.649,760,2.214,895,2.066,1002,1.744,1028,2.214,1137,2.611,1175,3.965,1181,2.649,1184,2.649,1366,3.965,1367,3.965,1374,3.965,1378,3.965,1379,4.626,1382,2.908,1384,3.593,1402,2.649,1403,2.649,1404,3.026,1405,3.026,1406,4.531,1407,3.026,1408,3.026,1409,3.026,1410,3.026,1411,3.026,1412,3.026,1413,3.026,1414,3.026,1415,3.026,1416,3.026,1417,3.026,1418,4.531,1419,3.026,1420,3.026,1421,4.531,1422,3.026,1423,3.026]],["title/injectables/TransformInterceptor.html",[101,0.742,1201,3.056]],["body/injectables/TransformInterceptor.html",[3,0.143,4,0.128,5,0.1,7,0.327,8,0.012,9,0.736,12,0.188,13,0.166,14,1.953,16,0.008,17,0.008,60,3.218,97,1.209,101,1.099,102,1.648,108,0.438,109,1.738,122,0.873,124,1.792,125,0.677,126,0.651,127,1.738,128,1.324,131,3.026,161,2.102,243,2.102,256,0.643,320,2.025,411,2.102,480,2.025,482,2.095,617,2.025,621,3.026,683,3.026,684,3.026,714,4.717,726,5.417,727,4.908,728,5.009,729,4.717,730,5.819,732,3.449,733,5.48,734,4.908,737,3.738,739,4.908,907,4.126,908,6.202,925,3.738,1198,3.738,1199,4.126,1200,4.126,1201,4.528,1202,4.126,1203,4.126,1204,4.126,1205,4.126,1206,4.126,1424,4.714,1425,4.714]],["title/classes/UpdateCompanyDto.html",[13,0.147,366,2.851]],["body/classes/UpdateCompanyDto.html",[3,0.146,4,0.132,5,0.103,7,0.3,8,0.012,12,0.146,13,0.221,16,0.009,17,0.009,108,0.45,117,1.843,122,1.046,125,0.84,126,0.779,239,1.519,256,1.108,343,1.585,349,3.103,366,4.295,377,3.833,434,1.277,436,4.218,439,2.775,441,5.62,467,3.433,475,3.3,479,2.003,482,2.508,505,3.92,523,3.833,718,2.655,719,2.536,720,2.429,1426,6.723,1427,4.834,1428,4.834,1429,4.834,1430,4.834]],["title/classes/UpdateFileDto.html",[13,0.147,750,2.851]],["body/classes/UpdateFileDto.html",[3,0.187,4,0.169,5,0.131,7,0.315,8,0.012,12,0.187,13,0.218,16,0.01,17,0.01,343,2.029,434,1.635,528,4.223,530,4.905,718,3.397,719,3.246,720,3.108,722,3.536,750,5.007,763,4.905,1431,5.414,1432,7.334]],["title/classes/UpdateJobDto.html",[13,0.147,862,2.851]],["body/classes/UpdateJobDto.html",[3,0.17,4,0.153,5,0.119,7,0.321,8,0.012,12,0.17,13,0.243,16,0.009,17,0.009,108,0.521,117,1.394,122,0.791,126,0.589,239,1.667,343,1.837,434,1.481,454,3.201,465,4.099,467,2.596,475,2.968,479,2.321,482,1.897,485,3.4,505,3.331,579,5.113,718,3.077,719,2.94,720,2.815,722,3.331,862,4.716,867,4.443,1433,6.046,1434,6.908,1435,6.908,1436,6.908,1437,5.602]],["title/classes/UpdatePermissionDto.html",[13,0.147,1142,2.851]],["body/classes/UpdatePermissionDto.html",[3,0.187,4,0.169,5,0.131,7,0.315,8,0.012,12,0.187,13,0.218,16,0.01,17,0.01,343,2.029,434,1.635,546,3.97,548,4.905,718,3.397,719,3.246,720,3.108,722,3.536,1142,5.007,1148,4.905,1438,5.414,1439,7.334]],["title/classes/UpdateResumeDto.html",[13,0.147,1243,2.851]],["body/classes/UpdateResumeDto.html",[3,0.187,4,0.169,5,0.131,7,0.315,8,0.012,12,0.187,13,0.218,16,0.01,17,0.01,343,2.029,434,1.635,561,3.97,563,4.905,718,3.397,719,3.246,720,3.108,722,3.536,1242,4.905,1243,5.007,1440,5.414,1441,7.334]],["title/classes/UpdateRoleDto.html",[13,0.147,1314,2.851]],["body/classes/UpdateRoleDto.html",[3,0.187,4,0.169,5,0.131,7,0.315,8,0.012,12,0.187,13,0.218,16,0.01,17,0.01,343,2.029,434,1.635,576,3.97,578,4.905,718,3.397,719,3.246,720,3.108,722,3.536,1314,5.007,1317,4.905,1442,5.414,1443,7.334]],["title/classes/UpdateSubscriberDto.html",[13,0.147,1379,2.851]],["body/classes/UpdateSubscriberDto.html",[3,0.187,4,0.169,5,0.131,7,0.315,8,0.012,12,0.187,13,0.218,16,0.01,17,0.01,343,2.029,434,1.635,594,3.97,596,4.905,718,3.397,719,3.246,720,3.108,722,3.536,1379,5.007,1384,4.905,1444,5.414,1445,7.334]],["title/classes/UpdateUserDto.html",[13,0.147,721,2.681]],["body/classes/UpdateUserDto.html",[3,0.165,4,0.148,5,0.116,7,0.317,8,0.012,12,0.206,13,0.26,16,0.009,17,0.009,108,0.506,117,1.354,122,0.768,126,0.573,164,3.493,239,1.638,256,1.008,258,2.174,343,1.785,361,2.857,434,1.438,467,2.522,475,3.176,479,2.255,482,2.297,504,3.303,505,3.565,513,2.856,715,3.982,716,5.381,718,2.989,719,2.856,720,2.735,721,4.355,722,3.271,723,5.938,1446,5.442]],["title/classes/User.html",[13,0.147,120,1.209]],["body/classes/User.html",[3,0.097,4,0.087,5,0.068,7,0.24,8,0.012,12,0.17,13,0.112,16,0.006,17,0.006,52,0.843,58,1.137,88,2.669,108,0.297,117,2.011,120,1.364,122,1.141,125,0.677,126,0.886,200,0.896,201,4.098,221,2.047,225,2.311,227,2.177,236,1.82,237,2.333,239,1.137,256,1.12,258,1.737,263,2,271,2.177,285,2.939,355,1.896,411,2.1,425,2.497,431,2.406,432,2.406,434,0.843,436,3.076,437,3.228,438,3.076,440,3.076,442,3.228,443,4.851,445,3.471,447,2.982,448,4.005,449,4.028,454,2.182,460,1.838,461,2.587,462,1.935,466,2.982,468,2.367,505,2.271,514,3.595,515,3.595,812,2.529,816,3.446,840,4.122,1304,4.122,1447,2.333,1448,3.189,1449,3.189,1450,3.189,1451,3.189,1452,3.189,1453,3.189,1454,3.189,1455,3.189,1456,3.189,1457,3.189,1458,3.189,1459,3.189,1460,3.189,1461,3.189,1462,3.189,1463,3.189,1464,2.333,1465,2.791]],["title/controllers/UserController.html",[0,1.286,1466,3.056]],["body/controllers/UserController.html",[0,0.916,2,0.916,3,0.163,4,0.081,5,0.063,7,0.308,8,0.012,9,0.464,12,0.09,13,0.105,14,1.232,15,0.861,16,0.006,17,0.006,56,1.762,58,1.079,91,2.195,97,1.643,106,1.561,108,0.277,109,1.256,116,2.619,117,1.594,118,4.08,120,2.443,122,0.904,124,1.856,125,0.701,126,0.674,127,1.8,128,1.8,142,2.149,152,2.82,154,1.633,159,2.951,160,1.561,161,1.326,164,2.87,166,1.149,169,1.561,170,1.278,175,2.857,176,4.374,191,2.87,200,1.509,245,3.262,256,1.002,258,1.256,283,1.82,291,3.693,320,2.892,330,1.633,331,1.616,343,0.975,347,1.326,361,2.309,367,3.272,370,2.456,371,1.714,372,1.378,376,1.278,378,1.232,439,2.315,482,1.514,513,3.532,519,4.113,632,1.921,721,4.321,729,2.03,851,3.272,859,3.547,915,2.03,928,2.603,929,2.603,930,2.603,931,2.359,932,2.603,933,2.603,934,2.603,1464,5.258,1466,3.272,1467,2.603,1468,3.914,1469,3.914,1470,3.914,1471,3.914,1472,3.914,1473,2.603,1474,2.974,1475,2.974,1476,2.974,1477,2.974,1478,2.974,1479,2.974,1480,2.974,1481,2.974,1482,2.603,1483,2.974,1484,2.974,1485,3.914,1486,2.603,1487,2.974,1488,2.974,1489,2.603,1490,2.974,1491,2.974,1492,2.974,1493,2.974,1494,2.974,1495,2.974,1496,2.974,1497,2.974,1498,2.974,1499,2.974,1500,2.974,1501,2.974,1502,2.974,1503,2.974,1504,2.603,1505,2.974,1506,2.974,1507,2.974,1508,2.974,1509,2.974,1510,2.974]],["title/classes/UserLoginDto.html",[13,0.147,162,2.535]],["body/classes/UserLoginDto.html",[3,0.11,4,0.099,5,0.077,7,0.298,8,0.012,12,0.182,13,0.254,15,2.09,16,0.007,17,0.007,58,1.246,108,0.337,117,1.285,122,0.729,125,0.79,126,0.691,148,2.086,162,3.134,170,1.555,225,1.929,239,1.246,256,1.124,258,1.45,263,2.09,285,4.056,333,2.71,355,2.35,411,2.303,434,0.957,436,3.605,439,2.372,466,1.745,471,2.197,475,3.574,476,3.315,477,3.315,478,3.315,479,1.5,480,1.555,481,1.819,482,2.817,503,4.11,504,2.197,505,3.951,507,2.648,509,3.864,510,3.315,511,3.654,512,4.405,513,1.899,514,4.214,515,4.214,516,2.471,517,3.525,518,3.525,519,3.315,520,4.11,521,3.778,1511,5.164,1512,3.62,1513,3.62]],["title/modules/UserModule.html",[18,1.071,40,2.681]],["body/modules/UserModule.html",[2,2.018,3,0.156,4,0.14,5,0.109,7,0.336,8,0.012,9,0.803,12,0.156,13,0.181,16,0.009,17,0.009,18,1.848,20,2.211,21,2.211,22,2.385,23,2.385,24,2.211,25,3.339,26,3.339,40,5.222,41,3.036,42,2.385,43,2.385,45,2.482,51,2.587,52,1.36,120,1.491,125,0.563,221,4.205,234,2.701,235,3.766,236,1.989,245,5.145,1466,5.273,1489,4.505,1514,4.505,1515,4.505,1516,4.505,1517,5.148,1518,5.148,1519,4.505]],["title/injectables/UserService.html",[101,0.742,245,2.535]],["body/injectables/UserService.html",[3,0.074,4,0.067,5,0.052,7,0.311,8,0.012,9,0.382,12,0.074,13,0.086,15,0.708,16,0.005,17,0.005,52,0.647,55,1.091,56,0.802,57,1.091,58,0.929,91,2.372,97,1.821,101,0.683,102,0.855,108,0.228,109,1.081,116,2.484,120,2.253,122,0.979,124,1.886,125,0.777,126,0.685,127,1.829,128,1.748,142,2.49,164,2.47,166,0.945,175,1.091,178,2.47,190,1.18,200,2.068,201,4.29,225,1.777,239,0.929,243,1.091,245,2.335,247,3.052,248,2.498,256,1.042,258,1.949,263,1.803,265,2.47,269,1.284,271,1.67,279,1.67,280,1.94,283,2.493,285,2.829,288,1.79,291,3.379,292,3.48,293,3.266,299,1.934,304,2.886,317,4.719,320,2.674,321,2.141,345,1.653,352,1.94,372,1.134,376,1.051,378,1.014,418,1.79,419,1.67,420,1.67,421,1.229,422,1.485,425,1.091,426,2.886,431,1.051,432,1.051,513,3.266,549,1.344,622,3.052,627,3.48,629,3.247,630,2.815,631,1.79,632,1.051,674,2.141,692,1.79,721,3.996,895,1.67,899,2.141,1290,4.719,1464,2.815,1468,3.368,1469,3.368,1470,3.368,1471,3.368,1472,3.368,1473,3.368,1482,3.368,1485,4.719,1486,3.368,1519,2.141,1520,2.141,1521,4.756,1522,4.756,1523,2.446,1524,2.446,1525,3.848,1526,2.446,1527,3.848,1528,2.446,1529,3.848,1530,2.446,1531,2.446,1532,2.446,1533,2.446,1534,2.446,1535,2.446,1536,2.446,1537,2.446,1538,3.848,1539,3.848,1540,2.446,1541,2.446,1542,2.446,1543,2.446,1544,4.756,1545,2.446,1546,2.446,1547,3.848]],["title/interfaces/UserType.html",[116,1.461,617,1.794]],["body/interfaces/UserType.html",[3,0.153,4,0.138,5,0.107,8,0.012,12,0.196,16,0.009,17,0.009,18,1.295,108,0.47,116,2.264,125,0.898,126,0.872,225,2.814,239,1.562,256,1.184,258,2.238,263,2.181,299,3.785,355,1.711,447,3.632,488,2.651,493,3.066,549,2.774,617,2.781,619,3.066,822,3.449,823,4.006,824,3.449]],["title/coverage.html",[1548,4.526]],["body/coverage.html",[0,2.21,1,1.621,5,0.076,6,1.939,8,0.012,10,1.422,13,0.287,16,0.005,17,0.005,24,0.952,61,1.621,101,1.387,103,1.939,104,1.621,105,1.939,116,0.775,120,1.03,126,0.233,131,1.422,148,1.277,155,1.621,157,1.345,159,1.217,160,1.163,162,1.345,211,1.513,212,1.513,221,1.422,223,1.217,225,0.828,226,1.422,238,1.939,245,1.345,273,1.513,275,1.621,278,1.757,279,1.513,331,0.801,341,1.621,342,1.939,349,1.422,355,1.508,366,1.513,374,1.422,400,1.621,403,1.939,421,1.113,435,2.602,464,2.82,465,3.26,480,1.528,485,1.345,503,3.481,504,3.618,513,1.163,522,1.939,523,2.82,528,1.513,529,1.939,530,2.82,546,1.422,547,1.939,548,2.82,561,1.422,562,1.939,563,2.82,572,1.513,576,1.422,577,1.939,578,2.82,594,1.422,595,1.939,596,2.82,617,2.561,618,1.621,620,3.26,626,1.513,657,1.621,658,1.939,660,1.422,668,1.163,669,1.513,672,1.939,679,1.757,680,1.757,692,6.376,715,1.621,716,2.82,721,1.422,724,1.757,725,1.939,742,1.939,743,1.621,744,1.939,750,1.513,761,1.422,789,1.621,792,1.939,803,3.041,809,1.113,814,1.345,820,1.513,822,1.513,823,2.82,825,2.602,846,1.513,848,1.621,849,1.939,862,1.513,865,1.422,882,1.939,902,1.939,903,2.82,920,1.757,921,1.757,951,1.939,967,1.939,969,1.939,976,1.621,977,1.939,983,1.422,1002,1.277,1003,1.513,1020,1.939,1062,1.939,1107,1.757,1108,1.939,1119,2.602,1132,1.621,1133,1.939,1142,1.513,1146,1.422,1164,1.939,1172,1.621,1198,2.82,1201,1.621,1221,1.621,1222,1.939,1240,1.422,1243,1.513,1264,1.939,1291,2.602,1306,1.621,1307,1.939,1314,1.513,1332,1.939,1351,2.602,1363,1.621,1364,1.939,1379,1.513,1382,1.422,1385,1.757,1403,1.939,1426,1.939,1431,1.939,1433,1.939,1438,1.939,1440,1.939,1442,1.939,1444,1.939,1447,2.602,1466,1.621,1467,1.939,1520,1.939,1548,1.757,1549,2.216,1550,2.216,1551,2.216,1552,6.719,1553,2.216,1554,6.264,1555,5.962,1556,2.216,1557,7.948,1558,8.282,1559,2.216,1560,6.719,1561,4.455,1562,5.962,1563,5.962,1564,4.455,1565,1.939,1566,1.939,1567,3.899,1568,5.483,1569,3.556,1570,2.216,1571,1.939,1572,2.216,1573,2.216,1574,3.113,1575,1.939,1576,2.216,1577,2.216]],["title/dependencies.html",[21,2.159,1578,3.05]],["body/dependencies.html",[8,0.012,9,0.725,13,0.216,16,0.008,17,0.008,21,1.995,50,2.981,52,1.228,55,2.071,56,1.523,57,2.071,58,1.479,60,3.171,74,3.684,77,3.684,156,4.861,165,2.819,170,1.995,191,3.934,215,2.981,218,3.684,270,4.065,372,2.152,419,3.171,420,3.171,471,2.819,479,1.925,683,2.981,719,2.437,720,2.334,765,3.398,961,5.44,997,3.684,998,3.684,1579,4.645,1580,4.645,1581,4.645,1582,6.86,1583,4.645,1584,4.645,1585,4.645,1586,4.645,1587,4.645,1588,6.129,1589,4.645,1590,4.645,1591,4.645,1592,4.645,1593,4.645,1594,6.129,1595,6.129,1596,4.645,1597,4.645,1598,4.645,1599,4.645,1600,4.645,1601,4.645,1602,6.129,1603,4.645,1604,4.645,1605,4.645,1606,4.645,1607,4.645,1608,4.645,1609,4.645,1610,4.645,1611,4.645,1612,4.645,1613,4.645,1614,4.645,1615,4.645,1616,4.645,1617,4.645,1618,4.645,1619,4.645,1620,4.645,1621,4.645,1622,4.645,1623,4.645,1624,4.645,1625,4.645,1626,4.645,1627,4.645]],["title/miscellaneous/enumerations.html",[1628,2.008,1629,4.398]],["body/miscellaneous/enumerations.html",[8,0.011,16,0.01,17,0.01,108,0.591,265,5.074,807,5.085,1628,3.66,1629,5.558,1630,6.351,1631,6.351,1632,7.449,1633,7.449,1634,7.449]],["title/miscellaneous/functions.html",[1628,2.008,1635,4.398]],["body/miscellaneous/functions.html",[8,0.01,16,0.01,17,0.01,24,3.449,108,0.613,1571,5.77,1628,3.8,1635,5.77,1636,6.593]],["title/index.html",[108,0.324,1637,3.485,1638,3.485]],["body/index.html",[4,0.138,8,0.012,16,0.009,17,0.009,307,4.433,439,1.83,517,4.882,931,4.017,999,4.017,1058,4.433,1548,4.017,1639,5.065,1640,5.065,1641,6.484,1642,5.065,1643,5.065,1644,5.065,1645,5.065,1646,5.065,1647,7.152,1648,5.065,1649,5.065,1650,5.065,1651,8.106,1652,5.065,1653,5.065,1654,7.973,1655,5.065,1656,5.065,1657,6.484,1658,5.065,1659,5.065,1660,5.065,1661,5.065,1662,6.484,1663,6.484,1664,5.065,1665,5.065,1666,5.065,1667,6.484,1668,6.484,1669,5.065,1670,5.065,1671,5.065,1672,5.065,1673,5.065,1674,4.433,1675,5.065,1676,5.065,1677,5.065,1678,5.065,1679,5.065,1680,5.065,1681,5.065,1682,5.065,1683,5.065,1684,4.433,1685,5.065,1686,5.065,1687,5.065,1688,5.065,1689,5.065,1690,5.065,1691,4.433]],["title/modules.html",[20,2.452]],["body/modules.html",[8,0.009,16,0.009,17,0.009,19,4.075,20,2.393,30,3.802,31,3.802,32,3.802,33,3.802,34,3.802,35,3.802,36,3.802,37,3.802,38,3.575,39,3.802,40,3.575,1674,7.498,1692,8.567,1693,8.567,1694,8.567]],["title/overview.html",[1695,4.995]],["body/overview.html",[2,1.121,8,0.012,10,3.876,16,0.007,17,0.007,18,0.933,19,6.237,20,1.564,21,1.564,22,1.687,23,1.687,24,1.564,25,1.687,26,1.687,27,3.186,28,3.186,29,3.186,30,5.563,31,4.936,32,4.749,33,4.749,34,4.749,35,5.079,36,4.749,37,4.749,38,4.776,39,4.749,40,4.776,41,2.403,42,1.687,43,1.687,102,1.273,157,4.516,207,3.186,208,3.186,210,3.186,211,4.123,212,4.123,223,4.086,245,4.516,374,4.776,395,3.186,396,3.186,397,3.186,434,0.962,619,2.209,660,3.876,663,3.186,664,3.186,706,3.186,761,3.876,784,3.186,785,3.186,865,3.876,877,3.186,878,3.186,978,4.79,983,3.876,992,3.186,993,3.186,994,3.186,1146,3.876,1159,3.186,1160,3.186,1240,3.876,1259,3.186,1260,3.186,1326,3.186,1327,3.186,1328,3.186,1382,3.876,1398,3.186,1399,3.186,1514,3.186,1515,3.186,1516,3.186,1695,3.186,1696,5.185,1697,3.64,1698,3.64]],["title/properties.html",[239,1.213,1578,3.05]],["body/properties.html",[8,0.012,16,0.01,17,0.01,239,1.575,373,5.711,439,2.358,1684,5.711,1691,5.711,1699,6.525,1700,6.525]],["title/miscellaneous/typealiases.html",[1628,2.008,1701,5.025]],["body/miscellaneous/typealiases.html",[8,0.01,16,0.01,17,0.01,108,0.554,126,0.626,271,4.894,277,4.894,417,5.685,435,4.356,461,4.609,678,5.245,803,4.064,811,5.245,825,4.356,845,5.245,1028,5.245,1119,4.356,1291,4.356,1351,4.356,1447,4.356,1628,3.431,1702,5.953,1703,5.21,1704,5.21,1705,5.21,1706,5.21,1707,5.21,1708,5.21,1709,5.21]],["title/miscellaneous/variables.html",[1628,2.008,1710,4.398]],["body/miscellaneous/variables.html",[5,0.04,8,0.012,16,0.004,17,0.004,18,1.718,56,1.517,88,1.487,91,0.929,97,1.415,107,1.491,108,0.175,114,1.491,120,1.891,125,0.733,126,0.667,152,2.427,159,1.709,160,1.633,175,2.913,178,4.964,185,1.646,200,1.991,221,1.997,226,1.997,248,0.871,256,1.014,263,0.901,264,1.284,265,4.964,273,2.124,275,2.277,278,2.468,279,2.124,283,1.566,285,1.633,288,4.638,293,2.088,299,1.564,320,1.337,330,1.033,331,1.671,333,2.088,343,1.305,347,0.839,355,1.053,361,2.449,370,1.033,400,2.277,413,3.384,421,1.564,435,1.376,438,3.481,439,0.679,440,3.481,447,0.907,449,1.033,454,1.442,463,1.646,480,2.201,482,1.053,488,2.427,491,1.376,493,1.141,495,1.376,497,1.376,500,1.376,502,1.376,505,3.621,519,2.554,549,3.587,566,1.284,620,1.376,621,1.207,623,3.156,624,1.491,625,1.491,626,1.284,627,1.376,629,1.284,630,1.376,631,1.376,632,0.808,633,2.468,634,2.912,635,2.468,636,1.376,637,2.468,638,1.491,639,1.491,640,1.491,641,1.491,642,3.668,643,1.491,644,1.491,645,1.491,646,2.468,647,1.491,648,2.468,649,1.491,650,1.491,651,1.491,652,1.491,653,1.491,654,1.491,655,1.491,656,1.491,669,2.124,679,2.468,680,2.468,692,3.384,698,1.646,714,1.284,728,1.284,803,1.284,804,2.124,805,4.638,809,2,819,1.376,820,2.124,821,1.491,824,1.284,825,1.376,846,2.124,847,1.646,917,1.646,920,2.468,921,2.468,922,1.376,1003,2.124,1010,3.847,1032,2.723,1119,1.376,1131,1.646,1152,1.376,1172,2.277,1275,1.646,1289,5.548,1291,1.376,1305,1.646,1351,1.376,1362,1.646,1365,2.723,1385,2.468,1390,3.483,1447,1.376,1464,2.277,1465,1.646,1504,1.646,1565,1.646,1566,1.646,1567,1.646,1568,1.646,1574,1.646,1575,1.646,1628,1.084,1703,1.646,1704,1.646,1705,1.646,1706,1.646,1707,1.646,1708,1.646,1709,1.646,1710,1.646,1711,3.98,1712,3.111,1713,1.88,1714,5.844,1715,1.88,1716,1.88,1717,1.88,1718,7.441,1719,7.441,1720,3.111,1721,4.625,1722,3.111,1723,3.111,1724,6.846,1725,6.338,1726,4.625,1727,3.111,1728,1.88,1729,3.111,1730,1.88,1731,1.88,1732,1.88,1733,1.88,1734,1.88,1735,1.88,1736,1.88,1737,1.88,1738,1.88,1739,1.88,1740,1.88,1741,1.88,1742,1.88,1743,1.88,1744,1.88,1745,1.88,1746,1.88,1747,1.88,1748,1.88,1749,1.88,1750,1.88,1751,1.88,1752,1.88,1753,1.88,1754,1.88,1755,1.88,1756,1.88,1757,1.88,1758,1.88,1759,1.88,1760,1.88,1761,1.88,1762,1.88,1763,1.88,1764,1.88,1765,1.88,1766,1.88,1767,1.88,1768,1.88,1769,1.88,1770,1.88,1771,1.88,1772,1.88,1773,1.88,1774,1.88,1775,1.88,1776,3.98,1777,1.88,1778,1.88,1779,1.88,1780,1.88,1781,1.88,1782,1.88,1783,1.88,1784,1.88,1785,1.88,1786,1.88,1787,1.88,1788,1.88,1789,1.88,1790,1.88,1791,1.88,1792,1.88,1793,1.88,1794,1.88,1795,1.88,1796,1.88,1797,1.88,1798,1.88,1799,1.88,1800,1.88]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":692,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1699,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["0.7.34",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":293,"title":{"classes/Company-1.html":{}},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["1.0.38",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["1.1.23",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":644,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["10.4.0",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["10000",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FilesController.html":{}}}],["1024",{"_index":775,"title":{},"body":{"controllers/FilesController.html":{}}}],["12",{"_index":1696,"title":{},"body":{"overview.html":{}}}],["123",{"_index":521,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["1].jobs.push",{"_index":1043,"title":{},"body":{"injectables/MailerService.html":{}}}],["2",{"_index":82,"title":{"classes/Company-2.html":{}},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{}}}],["2.0.4",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{},"overview.html":{}}}],["200",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["202",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["204",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["206",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":1697,"title":{},"body":{"overview.html":{}}}],["3",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["3.1.1",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["31t08:32:13.474z",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31t08:32:13.801z",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31t08:32:13.864z",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31t08:32:13.923z",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["401",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["403",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["422",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.1",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["503",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1698,"title":{},"body":{"overview.html":{}}}],["6.4.14",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["6.9.9",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["7.1.0",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["_id.tostring",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["accepted",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{}}}],["access_token",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":799,"title":{},"body":{"injectables/FilesService.html":{},"controllers/SubscribersController.html":{}}}],["active",{"_index":1436,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["adapter",{"_index":1017,"title":{},"body":{"modules/MailerModule.html":{}}}],["addfiletypevalidator",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":436,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["adds",{"_index":800,"title":{},"body":{"injectables/FilesService.html":{},"controllers/SubscribersController.html":{}}}],["admin",{"_index":519,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["admin')@get",{"_index":1480,"title":{},"body":{"controllers/UserController.html":{}}}],["admin')@post",{"_index":1474,"title":{},"body":{"controllers/UserController.html":{}}}],["admin@gmail.com",{"_index":518,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["admin_role",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":699,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":514,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["aliases",{"_index":1702,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/SubscribersService.html":{}}}],["amazing",{"_index":1675,"title":{},"body":{"index.html":{}}}],["api",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["api_path_must_be_string",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":549,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IMailSender.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":512,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":868,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mailer",{"_index":987,"title":{},"body":{"controllers/MailerController.html":{}}}],["apitags('permission",{"_index":1149,"title":{},"body":{"controllers/PermissionController.html":{}}}],["apitags('resumes",{"_index":1244,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1318,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1386,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1490,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":1058,"title":{},"body":{"injectables/MailerService.html":{},"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1646,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":1633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/UserService.html":{}}}],["aqp(queryparams",{"_index":638,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["aqp(querystring",{"_index":1537,"title":{},"body":{"injectables/UserService.html":{}}}],["array",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"interfaces/PaginationQueryOptions.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auroraphtgrp",{"_index":1052,"title":{},"body":{"injectables/MailerService.html":{}}}],["auth",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailerModule.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":903,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":911,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:19",{"_index":913,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:9",{"_index":909,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/account",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/login",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/refresh",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/register",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":104,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":916,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":904,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":968,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1684,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":157,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"interfaces/PaginationQueryOptions.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":1676,"title":{},"body":{"index.html":{}}}],["bad_request",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basename",{"_index":1103,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{}}}],["body('status",{"_index":1252,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":454,"title":{},"body":{"classes/Company.html":{},"classes/CreateRoleDto.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1694,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1692,"title":{},"body":{"modules.html":{}}}],["build",{"_index":776,"title":{},"body":{"controllers/FilesController.html":{}}}],["building",{"_index":1642,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":730,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":905,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":910,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catch",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror",{"_index":735,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{}}}],["catcherror((err",{"_index":738,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{}}}],["cb",{"_index":1091,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(new",{"_index":1093,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1099,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["change",{"_index":1250,"title":{},"body":{"controllers/ResumesController.html":{}}}],["class",{"_index":13,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":434,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":395,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_exports",{"_index":396,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":397,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":663,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":664,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":784,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":785,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":877,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":878,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":992,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_imports",{"_index":993,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":994,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_permissionmodule",{"_index":1159,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_permissionmodule_providers",{"_index":1160,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1259,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1260,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1326,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1328,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1327,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1398,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1399,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1514,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1516,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1515,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection",{"_index":812,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["companies",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["companies.controller",{"_index":399,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["companies/schemas/company.schema",{"_index":806,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{}}}],["companiescontroller",{"_index":341,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodel",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companiesmodule",{"_index":31,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":374,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":355,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"injectables/MailerService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"interfaces/UserType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":523,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:10",{"_index":1427,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:11",{"_index":525,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:13",{"_index":1428,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":526,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:16",{"_index":1429,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":527,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:7",{"_index":1430,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":524,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":402,"title":{},"body":{"modules/CompaniesModule.html":{},"interfaces/HistoryResume.html":{},"classes/Resume.html":{}}}],["company_id_is_required",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["company_is_required",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companydocument",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":564,"title":{},"body":{"classes/CreateResumeDto.html":{},"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companyschema",{"_index":400,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepassword",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparepassword(pass",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparesync(password",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compodoc/compodoc",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailerModule.html":{}}}],["configservice.get('email_auth_password",{"_index":1012,"title":{},"body":{"modules/MailerModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1011,"title":{},"body":{"modules/MailerModule.html":{}}}],["configservice.get('email_host",{"_index":1008,"title":{},"body":{"modules/MailerModule.html":{}}}],["configservice.get('jwt_access_token_secret_key",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_expiration_time",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1059,"title":{},"body":{"injectables/MailerService.html":{}}}],["connection",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["conpany",{"_index":507,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["console.log",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["console.log(_id",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(createroledto",{"_index":1341,"title":{},"body":{"injectables/RolesService.html":{}}}],["console.log(err",{"_index":1083,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(isexist",{"_index":1179,"title":{},"body":{"injectables/PermissionService.html":{}}}],["console.log(isskippermission",{"_index":948,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["console.log(isvalid",{"_index":1097,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(user",{"_index":975,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["console.log(x",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SubscribersService.html":{}}}],["const",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constant/http_status",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/ErrorHandlerInterceptor.html":{}}}],["constant/message",{"_index":481,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["constant/status",{"_index":808,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["constructor",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel(company.name",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(@injectmodel(job.name",{"_index":892,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(permission.name",{"_index":1174,"title":{},"body":{"injectables/PermissionService.html":{}}}],["constructor(@injectmodel(resume.name",{"_index":1276,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(@injectmodel(role.name",{"_index":1340,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(@injectmodel(subscriber.name",{"_index":1413,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":1535,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":970,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companiesmodel",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":954,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":883,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(mailerservices",{"_index":1022,"title":{},"body":{"injectables/MailerService.html":{}}}],["constructor(permissionmodel",{"_index":1165,"title":{},"body":{"injectables/PermissionService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":907,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1265,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1333,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscriberservice",{"_index":1404,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":732,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MailerService.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":926,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":925,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":936,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1203,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["control",{"_index":697,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('databases",{"_index":662,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('jobs",{"_index":869,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mailer",{"_index":988,"title":{},"body":{"controllers/MailerController.html":{}}}],["controller('permission",{"_index":1150,"title":{},"body":{"controllers/PermissionController.html":{}}}],["controller('resumes",{"_index":1245,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1319,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1387,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1491,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["countpermission",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1548,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/DeleteUserDto.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["create(createcompanydto",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["create(createfiledto",{"_index":793,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":850,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1134,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["create(createresumedto",{"_index":1225,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createroledto",{"_index":1309,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1367,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["createcompany",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompany(createcompanydto",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompanydto",{"_index":349,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created_at",{"_index":437,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["createdat",{"_index":1289,"title":{},"body":{"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createfiledto",{"_index":528,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":485,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1064,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator((data",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":546,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createpermissiondto.apipath",{"_index":1177,"title":{},"body":{"injectables/PermissionService.html":{}}}],["createpermissiondto.method",{"_index":1178,"title":{},"body":{"injectables/PermissionService.html":{}}}],["createresumedto",{"_index":561,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createresumedto.companyid",{"_index":1279,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createresumedto.jobid",{"_index":1280,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createresumedto.url",{"_index":1278,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createroledto",{"_index":576,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":594,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createsubscriberdto.email",{"_index":1415,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createuser",{"_index":1468,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":1494,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":1473,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto",{"_index":513,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["cron",{"_index":985,"title":{},"body":{"controllers/MailerController.html":{}}}],["cron(cronexpression.every_10_seconds",{"_index":989,"title":{},"body":{"controllers/MailerController.html":{}}}],["cronexpression",{"_index":986,"title":{},"body":{"controllers/MailerController.html":{}}}],["ctx",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":637,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["currentpage",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["cv",{"_index":1053,"title":{},"body":{"injectables/MailerService.html":{},"controllers/ResumesController.html":{}}}],["data",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data?.meta",{"_index":1206,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["data?.result",{"_index":1205,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["databases",{"_index":659,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":667,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":661,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["databases/seeder",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["databasescontroller",{"_index":657,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":32,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":660,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["dataqueryresponse",{"_index":618,"title":{"interfaces/DataQueryResponse.html":{}},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"coverage.html":{}}}],["date",{"_index":445,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["date.now()}${extname",{"_index":1106,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator/customize",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{}}}],["decorators",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":642,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailerService.html":{},"interfaces/PaginationQueryOptions.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete('/delete/:_id",{"_index":1500,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["deleted",{"_index":1506,"title":{},"body":{"controllers/UserController.html":{}}}],["deletedat",{"_index":438,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["deleteuser",{"_index":1469,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@param('_id",{"_index":1501,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(_id",{"_index":1476,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(user_id",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserdto",{"_index":715,"title":{"classes/DeleteUserDto.html":{}},"body":{"classes/DeleteUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/SubscribersController.html":{}}}],["description",{"_index":439,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"controllers/PermissionController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/UpdateCompanyDto.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["description_is_required",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destination",{"_index":1090,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["development",{"_index":1653,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1014,"title":{},"body":{"modules/MailerModule.html":{}}}],["disable",{"_index":929,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["diskstorage",{"_index":1078,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["dont",{"_index":949,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["dto/create",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":1664,"title":{},"body":{"index.html":{}}}],["each",{"_index":586,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["efficient",{"_index":1643,"title":{},"body":{"index.html":{}}}],["email",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["email'})@isnotempty({message",{"_index":610,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["email_is_invalid",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email_is_required",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end_date_is_required",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enddate",{"_index":502,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["endpoint",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ensureexists",{"_index":1065,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1069,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enumerations",{"_index":1629,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":741,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{}}}],["err.message",{"_index":740,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{}}}],["error",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(response_message.file_is_not_valid",{"_index":1094,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhandlerinterceptor",{"_index":724,"title":{"injectables/ErrorHandlerInterceptor.html":{}},"body":{"injectables/ErrorHandlerInterceptor.html":{},"coverage.html":{}}}],["errorhttpstatuscode",{"_index":777,"title":{},"body":{"controllers/FilesController.html":{}}}],["eslint",{"_index":928,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["eslint/no",{"_index":932,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["example",{"_index":517,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["exec",{"_index":656,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":728,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1181,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/SubscribersService.html":{}}}],["expired",{"_index":935,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["extends",{"_index":722,"title":{},"body":{"classes/DeleteUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extname",{"_index":1085,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":959,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":963,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":1010,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.dto",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":530,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":779,"title":{},"body":{"controllers/FilesController.html":{}}}],["file_is_not_valid",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["files.controller",{"_index":787,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":743,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":33,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":761,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["filetypes",{"_index":1084,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filetypes.test(file.mimetype",{"_index":1088,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filetypes.test(path.extname(file.originalname).tolowercase",{"_index":1086,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filter",{"_index":627,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["filter.current",{"_index":639,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["filter.pagesize",{"_index":640,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["finalname",{"_index":1105,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1288,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":650,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["findall(@query",{"_index":1153,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["findall(@query('page",{"_index":383,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["findall(@user",{"_index":871,"title":{},"body":{"controllers/JobsController.html":{}}}],["findall(currentpage",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["findall(page",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["findall(querystring",{"_index":1137,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["findall(user",{"_index":854,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["findone",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":386,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["findone(email",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(id",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["folder",{"_index":1095,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbidden",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":914,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":899,"title":{},"body":{"injectables/JobsService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":1641,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1077,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1081,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":696,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1635,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":515,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["gensalt(10",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/find/:id",{"_index":1508,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["get('account",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('logout",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@responsemessage('handle",{"_index":980,"title":{},"body":{"controllers/MailerController.html":{}}}],["getaccount",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(@user",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(user",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["getcv",{"_index":1223,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["getcv(@user",{"_index":1257,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getcv(user",{"_index":1231,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getcv(userid",{"_index":1271,"title":{},"body":{"injectables/ResumesService.html":{}}}],["getrootpath",{"_index":1063,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskill",{"_index":1366,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["getskill(@user",{"_index":1396,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getskill(user",{"_index":1374,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["getting",{"_index":1637,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1470,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuser(@query",{"_index":1492,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(qs",{"_index":1529,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(querystring",{"_index":1479,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid",{"_index":1471,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyid(@param('id",{"_index":1509,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(user_id",{"_index":1482,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyrefreshtoken",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["grow",{"_index":1671,"title":{},"body":{"index.html":{}}}],["handlebars",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["handlebars/runtime",{"_index":919,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlebarsadapter",{"_index":1000,"title":{},"body":{"modules/MailerModule.html":{}}}],["handlerefres",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefres(@req",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefres(req",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":906,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":912,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlesendemail",{"_index":1021,"title":{},"body":{"injectables/MailerService.html":{}}}],["handletestemail",{"_index":979,"title":{},"body":{"controllers/MailerController.html":{}}}],["hash(password",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashedpassword",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashp",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["hashpassword",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashpassword('123",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["hashpassword(createuserdto.password",{"_index":1541,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(registeruserdto.password",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword(updateuserdto.password",{"_index":1543,"title":{},"body":{"injectables/UserService.html":{}}}],["helmet",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1681,"title":{},"body":{"index.html":{}}}],["history",{"_index":819,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["history_is_required",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["historyresume",{"_index":572,"title":{"interfaces/HistoryResume.html":{}},"body":{"classes/CreateResumeDto.html":{},"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"coverage.html":{}}}],["host",{"_index":1007,"title":{},"body":{"modules/MailerModule.html":{}}}],["http_status",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http_status.bad_request",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorHandlerInterceptor.html":{}}}],["http_status.not_found",{"_index":391,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["httpexception",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/PermissionService.html":{},"injectables/SubscribersService.html":{}}}],["httpexception('id",{"_index":1188,"title":{},"body":{"injectables/PermissionService.html":{}}}],["httpexception('invalid",{"_index":390,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["httpexception('refresh",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('subscriber",{"_index":1416,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["httpexception(`permission",{"_index":1180,"title":{},"body":{"injectables/PermissionService.html":{}}}],["httponly",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":1688,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionService.html":{},"injectables/SubscribersService.html":{}}}],["httpstatus.bad_request",{"_index":1184,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/SubscribersService.html":{}}}],["httpstatus.unprocessable_entity",{"_index":778,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":461,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/DeleteUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["id')@delete('/delete/:_id",{"_index":1477,"title":{},"body":{"controllers/UserController.html":{}}}],["id')@delete(':id",{"_index":1234,"title":{},"body":{"controllers/ResumesController.html":{}}}],["id')@get(':id",{"_index":857,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{}}}],["id')@patch('/update",{"_index":1487,"title":{},"body":{"controllers/UserController.html":{}}}],["id')@public()@get('/find/:id",{"_index":1483,"title":{},"body":{"controllers/UserController.html":{}}}],["id_is_invalid",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":964,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iif",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["imailsender",{"_index":822,"title":{"interfaces/IMailSender.html":{}},"body":{"interfaces/IMailSender.html":{},"injectables/MailerService.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["implements",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":108,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{}}}],["init",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailerModule.html":{}}}],["injectable",{"_index":101,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailerService.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{}}}],["injectmodel(job.name",{"_index":1029,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(permission.name",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(role.name",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["injectmodel(subscriber.name",{"_index":1030,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectmodel(user.name",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["installation",{"_index":1650,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1652,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":726,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":727,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":617,"title":{"interfaces/DataQueryResponse.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"interfaces/PaginationQueryOptions.html":{},"interfaces/Response.html":{},"interfaces/UserType.html":{}},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"interfaces/PaginationQueryOptions.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["interface/user.interface",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailerService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["interfaces",{"_index":619,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"interfaces/PaginationQueryOptions.html":{},"interfaces/Response.html":{},"interfaces/UserType.html":{},"overview.html":{}}}],["internal_server_error",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["is_public_key",{"_index":920,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":921,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":579,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{},"classes/UpdateJobDto.html":{}}}],["isalowed",{"_index":942,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isarray",{"_index":472,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isarray({message",{"_index":541,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["isboolean",{"_index":589,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":473,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdatestring",{"_index":474,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdatestring()@isnotempty({message",{"_index":534,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":440,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":509,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isexist",{"_index":1175,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/SubscribersService.html":{}}}],["isexist.apipath",{"_index":1183,"title":{},"body":{"injectables/PermissionService.html":{}}}],["isexist.method",{"_index":1182,"title":{},"body":{"injectables/PermissionService.html":{}}}],["isglobal",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["ismatch",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismongoid",{"_index":510,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ismongoid({message",{"_index":568,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["isnotempty",{"_index":475,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":467,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":476,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":608,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isobject",{"_index":477,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispubic",{"_index":923,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ispublic",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":946,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":511,"title":{},"body":{"classes/Company-2.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1511,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isstring({message",{"_index":550,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isvalid",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["item",{"_index":1041,"title":{},"body":{"injectables/MailerService.html":{}}}],["item.company.name",{"_index":1045,"title":{},"body":{"injectables/MailerService.html":{}}}],["item.jobs",{"_index":1061,"title":{},"body":{"injectables/MailerService.html":{}}}],["item.name",{"_index":1044,"title":{},"body":{"injectables/MailerService.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1046,"title":{},"body":{"injectables/MailerService.html":{}}}],["item.skills",{"_index":1048,"title":{},"body":{"injectables/MailerService.html":{}}}],["item.to",{"_index":1051,"title":{},"body":{"injectables/MailerService.html":{}}}],["job",{"_index":809,"title":{"classes/Job.html":{}},"body":{"interfaces/HistoryResume.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job')@delete(':id",{"_index":860,"title":{},"body":{"controllers/JobsController.html":{}}}],["job')@patch(':id",{"_index":863,"title":{},"body":{"controllers/JobsController.html":{}}}],["job')@post",{"_index":852,"title":{},"body":{"controllers/JobsController.html":{}}}],["job.dto",{"_index":867,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":465,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:11",{"_index":470,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:15",{"_index":538,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:19",{"_index":543,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:26",{"_index":532,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:29",{"_index":537,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:32",{"_index":540,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:35",{"_index":539,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:38",{"_index":536,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:41",{"_index":533,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:45",{"_index":545,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:49",{"_index":535,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:7",{"_index":1437,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["job.dto.ts:8",{"_index":469,"title":{},"body":{"classes/Company-1.html":{}}}],["job.name",{"_index":817,"title":{},"body":{"interfaces/HistoryResume.html":{},"modules/MailerModule.html":{},"classes/Resume.html":{}}}],["job_id_is_required",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jobid",{"_index":565,"title":{},"body":{"classes/CreateResumeDto.html":{},"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmatchingwithskills",{"_index":1038,"title":{},"body":{"injectables/MailerService.html":{}}}],["jobmodel",{"_index":885,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailerService.html":{}}}],["jobs",{"_index":824,"title":{},"body":{"interfaces/IMailSender.html":{},"controllers/JobsController.html":{},"injectables/MailerService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["jobs')@get",{"_index":855,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobs.controller",{"_index":880,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":866,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/:id",{"_index":873,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobs/jobs.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["jobs/schemas/job.schemas",{"_index":810,"title":{},"body":{"interfaces/HistoryResume.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Resume.html":{}}}],["jobschema",{"_index":846,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":848,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsdocument",{"_index":845,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MailerService.html":{},"miscellaneous/typealiases.html":{}}}],["jobsmodule",{"_index":34,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":865,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["join",{"_index":999,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["join(__dirname",{"_index":1015,"title":{},"body":{"modules/MailerModule.html":{}}}],["join(this.getrootpath",{"_index":1100,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|png|gif",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["json.parse(json.stringify(qs",{"_index":1536,"title":{},"body":{"injectables/UserService.html":{}}}],["json.parse(json.stringify(querystring",{"_index":636,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["jwt')@get('account",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwtauthguard",{"_index":61,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":962,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":211,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1685,"title":{},"body":{"index.html":{}}}],["le",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":497,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["level_is_required",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":1691,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1668,"title":{},"body":{"index.html":{}}}],["limit",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["limit(defaultlimit",{"_index":652,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":930,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["list",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["literal",{"_index":447,"title":{},"body":{"classes/Company.html":{},"interfaces/DataQueryResponse.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":155,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":212,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":491,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["location_is_required",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":918,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["loggerservice",{"_index":666,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["login",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login')@apibody({type",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@req",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":441,"title":{},"body":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"injectables/ResumesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["logout",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@user",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(_id",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(user",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["mailer",{"_index":978,"title":{},"body":{"controllers/MailerController.html":{},"modules/MailerModule.html":{},"overview.html":{}}}],["mailer.controller",{"_index":996,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.forrootasync",{"_index":1005,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":984,"title":{},"body":{"controllers/MailerController.html":{},"modules/MailerModule.html":{}}}],["mailer/mailer.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["mailercontroller",{"_index":976,"title":{"controllers/MailerController.html":{}},"body":{"controllers/MailerController.html":{},"modules/MailerModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":35,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailers",{"_index":1023,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailerservice",{"_index":983,"title":{"injectables/MailerService.html":{}},"body":{"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"coverage.html":{},"overview.html":{}}}],["mailerservices",{"_index":1026,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailsender",{"_index":1031,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailsender.foreach(async",{"_index":1049,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailsender.push",{"_index":1035,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailsender[mailsender.length",{"_index":1042,"title":{},"body":{"injectables/MailerService.html":{}}}],["male",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1199,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1202,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitem",{"_index":649,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":482,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":621,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"injectables/ErrorHandlerInterceptor.html":{},"interfaces/PaginationQueryOptions.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePermissionDto.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["method_must_be_string",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["mimetype",{"_index":1087,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["minh",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["miscellaneous",{"_index":1628,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1667,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1657,"title":{},"body":{"index.html":{}}}],["model",{"_index":633,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["model.find(filter)).length",{"_index":647,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"interfaces/IMailSender.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"classes/Permission.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"interfaces/UserType.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["module_is_required",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module_must_be_string",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":998,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1001,"title":{},"body":{"modules/MailerModule.html":{}}}],["mongo",{"_index":1275,"title":{},"body":{"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["mongo_id_is_invalid",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MailerService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.isvalidobjectid(_id",{"_index":1502,"title":{},"body":{"controllers/UserController.html":{}}}],["mongoose.isvalidobjectid(id",{"_index":389,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["mongoose.schema.types.array",{"_index":818,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":466,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid",{"_index":567,"title":{},"body":{"classes/CreateResumeDto.html":{},"interfaces/HistoryResume.html":{},"classes/Resume.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.types.objectid.isvalid(value[item",{"_index":1115,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["mongoosemodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1680,"title":{},"body":{"index.html":{}}}],["ms",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(this.configservice.get('jwt_refresh_token_expiration_time",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1079,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":790,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":789,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":788,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":791,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1068,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1076,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":1686,"title":{},"body":{"index.html":{}}}],["name",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["name_is_required",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name_must_be_string",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":1647,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1690,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":734,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":997,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":719,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Permission.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailerController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailerModule.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":729,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{}}}],["next.handle().pipe",{"_index":737,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nice",{"_index":1057,"title":{},"body":{"injectables/MailerService.html":{}}}],["no_content",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":1640,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":698,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["not_found",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":891,"title":{},"body":{"injectables/JobsService.html":{}}}],["notfoundexception('job",{"_index":898,"title":{},"body":{"injectables/JobsService.html":{}}}],["npm",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"interfaces/PaginationQueryOptions.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["number(current",{"_index":641,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["number(pagesize",{"_index":643,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":449,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object.keys(value).map((item",{"_index":1113,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["objectid",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objuser",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":733,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":645,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["open",{"_index":1669,"title":{},"body":{"index.html":{}}}],["optional",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":634,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"modules/MailerModule.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["override",{"_index":1054,"title":{},"body":{"injectables/MailerService.html":{}}}],["overview",{"_index":1695,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1578,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["pages",{"_index":624,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["pagesize",{"_index":623,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":1152,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"miscellaneous/variables.html":{}}}],["pagination')@get",{"_index":1138,"title":{},"body":{"controllers/PermissionController.html":{}}}],["paginationquery",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/JobsService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginationquery(qs",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["paginationquery(query",{"_index":1346,"title":{},"body":{"injectables/RolesService.html":{}}}],["paginationquery(querystring",{"_index":895,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{}}}],["paginationqueryoptions",{"_index":626,"title":{"interfaces/PaginationQueryOptions.html":{}},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginationresult",{"_index":894,"title":{},"body":{"injectables/JobsService.html":{}}}],["param",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["params",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["parsefilepipebuilder",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["parseobjectidpipe",{"_index":1107,"title":{"injectables/ParseObjectIDPipe.html":{}},"body":{"injectables/ParseObjectIDPipe.html":{},"coverage.html":{}}}],["parser",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["partial_content",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partialtype",{"_index":718,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createfiledto",{"_index":1432,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1434,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1439,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1441,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1443,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1445,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createuserdto",{"_index":723,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["pass",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailerModule.html":{}}}],["passport",{"_index":961,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":958,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":952,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["patch('/update",{"_index":1496,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@skippermission",{"_index":1380,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/MailerModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["path.basename(file.originalname",{"_index":1104,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1102,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission",{"_index":668,"title":{"classes/Permission.html":{}},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/Role.html":{},"coverage.html":{}}}],["permission')@patch(':id",{"_index":1143,"title":{},"body":{"controllers/PermissionController.html":{}}}],["permission')@post",{"_index":1135,"title":{},"body":{"controllers/PermissionController.html":{}}}],["permission.controller",{"_index":1162,"title":{},"body":{"modules/PermissionModule.html":{}}}],["permission.dto",{"_index":1148,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":548,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":551,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:15",{"_index":552,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:19",{"_index":553,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:7",{"_index":554,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.name",{"_index":671,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionModule.html":{},"classes/Role.html":{}}}],["permission.service",{"_index":1147,"title":{},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{}}}],["permission/:id",{"_index":1155,"title":{},"body":{"controllers/PermissionController.html":{}}}],["permission/permission.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["permission/schemas/permission.schema",{"_index":670,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["permissioncontroller",{"_index":1132,"title":{"controllers/PermissionController.html":{}},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"coverage.html":{}}}],["permissiondocument",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionService.html":{}}}],["permissionmodule",{"_index":36,"title":{"modules/PermissionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionModule.html":{},"modules.html":{},"overview.html":{}}}],["permissions",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IMailSender.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["permissions.name,permissions.method,permissions.module,permissions.apipath",{"_index":1345,"title":{},"body":{"injectables/RolesService.html":{}}}],["permissions.some((permissions",{"_index":943,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions_is_array",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissions_is_required",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissionschema",{"_index":669,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionservice",{"_index":1146,"title":{"injectables/PermissionService.html":{}},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"coverage.html":{},"overview.html":{}}}],["pipetransform",{"_index":1112,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["please",{"_index":1678,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailerService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["populate",{"_index":1290,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UserService.html":{}}}],["populate(population",{"_index":655,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["populateoptions",{"_index":622,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/UserService.html":{}}}],["population",{"_index":631,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["population_modify",{"_index":1538,"title":{},"body":{"injectables/UserService.html":{}}}],["post",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["post('by",{"_index":1256,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('login",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skills",{"_index":1395,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('skills')@skippermission",{"_index":1375,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{}}}],["prefix",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailerService.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{}}}],["process.cwd",{"_index":1080,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processrefreshtoken",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":1659,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1639,"title":{},"body":{"index.html":{}}}],["project",{"_index":1670,"title":{},"body":{"index.html":{}}}],["projection",{"_index":630,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["projection_modify",{"_index":1539,"title":{},"body":{"injectables/UserService.html":{}}}],["promise",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/LocalStrategy.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":443,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":840,"title":{},"body":{"classes/Job.html":{},"classes/User.html":{}}}],["prop({type",{"_index":448,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({unique",{"_index":1299,"title":{},"body":{"classes/Role.html":{}}}],["properties",{"_index":239,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"classes/DeleteUserDto.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"properties.html":{}}}],["provide",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@responsemessage('refresh",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1101,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1286,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/UserService.html":{}}}],["quantity",{"_index":495,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["quantity_is_required",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"controllers/JobsController.html":{},"interfaces/PaginationQueryOptions.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["query('limit",{"_index":384,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["query.fields",{"_index":1344,"title":{},"body":{"injectables/RolesService.html":{}}}],["query.populate",{"_index":1343,"title":{},"body":{"injectables/RolesService.html":{}}}],["queryparams",{"_index":635,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["querystring",{"_index":632,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"interfaces/PaginationQueryOptions.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":1679,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["receiver",{"_index":1060,"title":{},"body":{"injectables/MailerService.html":{}}}],["record",{"_index":628,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{}}}],["recursive",{"_index":1082,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":816,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":908,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["register",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["register')@public()@post('register",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registeruserdto",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":148,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["rejected",{"_index":1634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["remove",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["remove(@param('id",{"_index":393,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["remove(id",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["removes",{"_index":802,"title":{},"body":{"injectables/FilesService.html":{}}}],["repository",{"_index":1649,"title":{},"body":{"index.html":{}}}],["req",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.cookies['refresh_token",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["req?.headers?.folder_type",{"_index":1096,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":917,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":938,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request?.route.path",{"_index":940,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["required",{"_index":505,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["required'})@ismongoid({message",{"_index":615,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["res",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["res.clearcookie('refresh_token",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie('refresh_token",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":131,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response_message",{"_index":480,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UserLoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response_message.api_path_must_be_string",{"_index":556,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["response_message.company_id_is_required",{"_index":483,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{}}}],["response_message.company_is_required",{"_index":489,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.description_is_required",{"_index":498,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["response_message.email_is_invalid",{"_index":602,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["response_message.email_is_required",{"_index":603,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["response_message.end_date_is_required",{"_index":501,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.id_is_invalid",{"_index":574,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["response_message.job_id_is_required",{"_index":575,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["response_message.level_is_required",{"_index":496,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.location_is_required",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.method_must_be_string",{"_index":558,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["response_message.module_is_required",{"_index":560,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["response_message.module_must_be_string",{"_index":559,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["response_message.mongo_id_is_invalid",{"_index":516,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["response_message.name_is_required",{"_index":484,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["response_message.name_must_be_string",{"_index":555,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{}}}],["response_message.permissions_is_array",{"_index":592,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["response_message.permissions_is_required",{"_index":593,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["response_message.quantity_is_required",{"_index":494,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.salary_is_required",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.skills_is_array",{"_index":486,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.skills_is_required",{"_index":487,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["response_message.skills_must_be_array",{"_index":604,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["response_message.skills_must_be_string",{"_index":605,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["response_message.start_date_is_required",{"_index":499,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["response_message.status_is_required",{"_index":590,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["response_message.status_must_be_boolean",{"_index":591,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["response_message.url_is_required",{"_index":557,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{}}}],["responsemessage",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('change",{"_index":1237,"title":{},"body":{"controllers/ResumesController.html":{}}}],["responsemessage('create",{"_index":851,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/UserController.html":{}}}],["responsemessage('delete",{"_index":859,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/UserController.html":{}}}],["responsemessage('fetch",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["responsemessage('get",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/UserController.html":{}}}],["responsemessage('handle",{"_index":990,"title":{},"body":{"controllers/MailerController.html":{}}}],["responsemessage('logout",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('refresh",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('this",{"_index":1368,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage('update",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/UserController.html":{}}}],["responsemessage('user",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/JobsService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/PermissionService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":814,"title":{"classes/Resume.html":{}},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["resume')@patch(':id",{"_index":1238,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resume')@post",{"_index":1226,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resume.dto",{"_index":1242,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":563,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:12",{"_index":569,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:16",{"_index":570,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:8",{"_index":571,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1263,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":811,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1267,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":813,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{}}}],["resumes')@get",{"_index":1228,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resumes.controller",{"_index":1262,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1241,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/:id",{"_index":1248,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resumes/by",{"_index":1255,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resumes/resumes.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":820,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1221,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":37,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1240,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["resumestatus",{"_index":807,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/enumerations.html":{}}}],["resumestatus.pending",{"_index":1281,"title":{},"body":{"injectables/ResumesService.html":{}}}],["return",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":225,"title":{"classes/Role.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IMailSender.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["role.dto",{"_index":1317,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":578,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:12",{"_index":581,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:16",{"_index":583,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:21",{"_index":588,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:8",{"_index":584,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{}}}],["roledocument",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["roles",{"_index":1308,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles.controller",{"_index":1330,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1316,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/:id",{"_index":1322,"title":{},"body":{"controllers/RolesController.html":{}}}],["roles/roles.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["roles/roles.service",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["roles/schemas/role.schema",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{}}}],["roleschema",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1306,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservie",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":38,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["roless",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolesservice",{"_index":223,"title":{"injectables/RolesService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["route",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["run",{"_index":1654,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ErrorHandlerInterceptor.html":{},"injectables/MailerService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1200,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["salary",{"_index":493,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"injectables/MailerService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["salary_is_required",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salt",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":1644,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"classes/Permission.html":{},"modules/PermissionModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":460,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":463,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":847,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1131,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":821,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1305,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1362,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1465,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":401,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schemas",{"_index":881,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1163,"title":{},"body":{"modules/PermissionModule.html":{},"injectables/PermissionService.html":{}}}],["schemas/resume.schema",{"_index":573,"title":{},"body":{"classes/CreateResumeDto.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1331,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1402,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1519,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["secret",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":965,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1009,"title":{},"body":{"modules/MailerModule.html":{}}}],["seeder",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["select",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["select('_id",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["select(projection",{"_index":654,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":981,"title":{},"body":{"controllers/MailerController.html":{}}}],["server",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["service_unavailable",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set",{"_index":1435,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["setmetadata(is_public_key",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1645,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["signrefreshtoken",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["skills",{"_index":488,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"injectables/MailerService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["skills_is_array",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skills_is_required",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skills_must_be_array",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skills_must_be_string",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip(offset",{"_index":651,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["skippermission",{"_index":1385,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailerService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailerService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["softdeleteplugin",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":629,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ResumesService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sort(sort",{"_index":653,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"index.html":{}}}],["sponsors",{"_index":1673,"title":{},"body":{"index.html":{}}}],["src/.../company.schema.ts",{"_index":1703,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hashpassword.ts",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http_status.ts",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schemas.ts",{"_index":1704,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../message.ts",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pagination_query.utils.ts",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.schema.ts",{"_index":1705,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1706,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1707,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../seeder.ts",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.ts",{"_index":1630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1708,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1709,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../validation.utils.ts",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":103,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:62",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:68",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:159",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:87",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:93",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:99",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":902,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":967,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":951,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:20",{"_index":957,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":955,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":969,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:11",{"_index":973,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:6",{"_index":971,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:19",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:24",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:28",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:33",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:40",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":398,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:12",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:14",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:25",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:30",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:35",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:49",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":522,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1426,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":435,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":444,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":453,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":458,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":446,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:24",{"_index":451,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:27",{"_index":455,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:30",{"_index":456,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":450,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:39",{"_index":459,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":452,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":457,"title":{},"body":{"classes/Company.html":{}}}],["src/constant/http_status.ts",{"_index":1565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constant/message.ts",{"_index":1566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constant/status.ts",{"_index":1631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/errorhandler.interceptor.ts",{"_index":725,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"coverage.html":{}}}],["src/core/errorhandler.interceptor.ts:7",{"_index":731,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1198,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:14",{"_index":1424,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:16",{"_index":1425,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":658,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":665,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:13",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:19",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/seeder.ts",{"_index":1567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize.ts",{"_index":1568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":529,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1431,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:26",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:49",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:54",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:59",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:64",{"_index":749,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":786,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":792,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":795,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":796,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":798,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":797,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":794,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1062,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:12",{"_index":1070,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:20",{"_index":1074,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:30",{"_index":1067,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:9",{"_index":1075,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/schema/file.entity.ts",{"_index":742,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/interface/user.interface.ts",{"_index":823,"title":{},"body":{"interfaces/IMailSender.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["src/jobs/dto/create",{"_index":464,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1433,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":849,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:21",{"_index":853,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:32",{"_index":856,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:43",{"_index":858,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:54",{"_index":864,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:65",{"_index":861,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":879,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":882,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:11",{"_index":884,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:13",{"_index":886,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":887,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:22",{"_index":888,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:28",{"_index":890,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:42",{"_index":889,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schemas.ts",{"_index":825,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schemas.ts:12",{"_index":841,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:15",{"_index":826,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:21",{"_index":836,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:24",{"_index":839,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:27",{"_index":838,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:30",{"_index":835,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:33",{"_index":831,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:36",{"_index":842,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:39",{"_index":832,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:42",{"_index":833,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:45",{"_index":843,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:48",{"_index":827,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:51",{"_index":829,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:54",{"_index":834,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:57",{"_index":828,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:63",{"_index":844,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:69",{"_index":830,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schemas.ts:9",{"_index":837,"title":{},"body":{"classes/Job.html":{}}}],["src/mailer/mailer.controller.ts",{"_index":977,"title":{},"body":{"controllers/MailerController.html":{},"coverage.html":{}}}],["src/mailer/mailer.controller.ts:17",{"_index":982,"title":{},"body":{"controllers/MailerController.html":{}}}],["src/mailer/mailer.module.ts",{"_index":995,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/mailer/mailer.service.ts",{"_index":1020,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/mailer/mailer.service.ts:11",{"_index":1025,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/mailer/mailer.service.ts:21",{"_index":1027,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/main.ts",{"_index":1571,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permission/dto/create",{"_index":547,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permission/dto/update",{"_index":1438,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permission/permission.controller.ts",{"_index":1133,"title":{},"body":{"controllers/PermissionController.html":{},"coverage.html":{}}}],["src/permission/permission.controller.ts:21",{"_index":1136,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:32",{"_index":1139,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:42",{"_index":1140,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:53",{"_index":1144,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:63",{"_index":1141,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.module.ts",{"_index":1161,"title":{},"body":{"modules/PermissionModule.html":{}}}],["src/permission/permission.service.ts",{"_index":1164,"title":{},"body":{"injectables/PermissionService.html":{},"coverage.html":{}}}],["src/permission/permission.service.ts:12",{"_index":1166,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:14",{"_index":1167,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:33",{"_index":1168,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:38",{"_index":1169,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:46",{"_index":1171,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:62",{"_index":1170,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/schemas/permission.schema.ts",{"_index":1119,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permission/schemas/permission.schema.ts:10",{"_index":1128,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:13",{"_index":1120,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:16",{"_index":1126,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:19",{"_index":1127,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:22",{"_index":1129,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:25",{"_index":1121,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:28",{"_index":1123,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:31",{"_index":1125,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:34",{"_index":1122,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:40",{"_index":1130,"title":{},"body":{"classes/Permission.html":{}}}],["src/permission/schemas/permission.schema.ts:46",{"_index":1124,"title":{},"body":{"classes/Permission.html":{}}}],["src/pipe/customize.ts",{"_index":1108,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{},"coverage.html":{}}}],["src/pipe/customize.ts:5",{"_index":1111,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["src/resumes/dto/create",{"_index":562,"title":{},"body":{"classes/CreateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1440,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1222,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:22",{"_index":1227,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:33",{"_index":1229,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:44",{"_index":1230,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:55",{"_index":1239,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:66",{"_index":1235,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:77",{"_index":1233,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1261,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1264,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:14",{"_index":1266,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:16",{"_index":1268,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:41",{"_index":1269,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:46",{"_index":1270,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:52",{"_index":1274,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:80",{"_index":1273,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:96",{"_index":1272,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":803,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1212,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1220,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1219,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1216,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:32",{"_index":1207,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:35",{"_index":1215,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:38",{"_index":1213,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:41",{"_index":1217,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:44",{"_index":1208,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:47",{"_index":1210,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:50",{"_index":1214,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:53",{"_index":1209,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:59",{"_index":1218,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:65",{"_index":1211,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":577,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1442,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1307,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:20",{"_index":1310,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:30",{"_index":1311,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:40",{"_index":1312,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:50",{"_index":1315,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:60",{"_index":1313,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":1329,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":1332,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:11",{"_index":1334,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1335,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:25",{"_index":1336,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:33",{"_index":1337,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:40",{"_index":1339,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:54",{"_index":1338,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1291,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1300,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1296,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1297,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1301,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1302,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:25",{"_index":1292,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1294,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:31",{"_index":1298,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:34",{"_index":1293,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:40",{"_index":1303,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:46",{"_index":1295,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":595,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1444,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1351,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1358,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1359,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1360,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:21",{"_index":1352,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:24",{"_index":1354,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:27",{"_index":1357,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:30",{"_index":1353,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:36",{"_index":1361,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:42",{"_index":1355,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1356,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1364,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:21",{"_index":1370,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:32",{"_index":1372,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:42",{"_index":1373,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:53",{"_index":1381,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:63",{"_index":1377,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:69",{"_index":1376,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1400,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1403,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:11",{"_index":1405,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:13",{"_index":1407,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:26",{"_index":1408,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:34",{"_index":1409,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:38",{"_index":1412,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:54",{"_index":1411,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:67",{"_index":1410,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":503,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":716,"title":{},"body":{"classes/DeleteUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1447,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1458,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1455,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1459,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1449,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1456,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1450,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:31",{"_index":1448,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1461,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1460,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1462,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:43",{"_index":1451,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":1453,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:49",{"_index":1457,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:52",{"_index":1452,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:58",{"_index":1463,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:64",{"_index":1454,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.module.ts",{"_index":1517,"title":{},"body":{"modules/UserModule.html":{}}}],["src/users/user.service.ts",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/user.service.ts:14",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:16",{"_index":1530,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:36",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:48",{"_index":1531,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:62",{"_index":1532,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:71",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:76",{"_index":1528,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:81",{"_index":1534,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:84",{"_index":1533,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.controller.ts",{"_index":1467,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:23",{"_index":1481,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:35",{"_index":1475,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:46",{"_index":1488,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:61",{"_index":1478,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:78",{"_index":1484,"title":{},"body":{"controllers/UserController.html":{}}}],["src/utils/hashpassword.ts",{"_index":1574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/pagination_query.utils.ts",{"_index":620,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/validation.utils.ts",{"_index":1575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1655,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1658,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1660,"title":{},"body":{"index.html":{}}}],["start_date_is_required",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startdate",{"_index":500,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1638,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1648,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":804,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["status_is_required",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status_must_be_boolean",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statuscode",{"_index":739,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stay",{"_index":1682,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1089,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":960,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1018,"title":{},"body":{"modules/MailerModule.html":{}}}],["string",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"classes/DeleteUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["subc",{"_index":1034,"title":{},"body":{"injectables/MailerService.html":{}}}],["subc.email",{"_index":1036,"title":{},"body":{"injectables/MailerService.html":{}}}],["subc.name",{"_index":1037,"title":{},"body":{"injectables/MailerService.html":{}}}],["subc.skills",{"_index":1040,"title":{},"body":{"injectables/MailerService.html":{}}}],["subcriber",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subcribers",{"_index":1032,"title":{},"body":{"injectables/MailerService.html":{},"miscellaneous/variables.html":{}}}],["subcribersdocument",{"_index":1028,"title":{},"body":{"injectables/MailerService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":1055,"title":{},"body":{"injectables/MailerService.html":{}}}],["subscriber",{"_index":1002,"title":{"classes/Subscriber.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber')@post",{"_index":1369,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber.dto",{"_index":1384,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":596,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:10",{"_index":597,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:15",{"_index":601,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:6",{"_index":598,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1019,"title":{},"body":{"modules/MailerModule.html":{},"modules/SubscribersModule.html":{}}}],["subscribermodel",{"_index":1024,"title":{},"body":{"injectables/MailerService.html":{}}}],["subscribers",{"_index":1365,"title":{},"body":{"controllers/SubscribersController.html":{},"miscellaneous/variables.html":{}}}],["subscribers')@get",{"_index":1371,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1401,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1383,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/:id",{"_index":1390,"title":{},"body":{"controllers/SubscribersController.html":{},"miscellaneous/variables.html":{}}}],["subscribers/schemas/subscriber.schema",{"_index":1004,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["subscribers/subscribers.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1003,"title":{},"body":{"modules/MailerModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1363,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscriberservice",{"_index":1406,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscribersmodule",{"_index":39,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1382,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["super",{"_index":922,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["super.canactivate(context",{"_index":927,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1674,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1693,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1071,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":939,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.includes(apipath",{"_index":944,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":945,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":937,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["temp",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp?.permissions",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1013,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["templates",{"_index":1016,"title":{},"body":{"modules/MailerModule.html":{}}}],["test",{"_index":1663,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1666,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1665,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1662,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1672,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(user._id",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processrefreshtoken(refresh_token",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":974,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesmodel",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companiesmodel.create",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companiesmodel.find",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companiesmodel.softdelete",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companiesmodel.updateone",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companiesservice.createcompany(createcompanydto",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+page",{"_index":385,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":387,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":394,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":392,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.configservice.get('jwt_refresh_token_secret_ket",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1098,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":780,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":781,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":783,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":782,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.jobmodel",{"_index":896,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create(createjobdto",{"_index":893,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1039,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.jobmodel.findbyid(id",{"_index":897,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":901,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":900,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":870,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(user",{"_index":872,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":874,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":876,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":875,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(refresh_token",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailerservice.handlesendemail",{"_index":991,"title":{},"body":{"controllers/MailerController.html":{}}}],["this.mailerservices.sendmail",{"_index":1050,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.permissionmodel",{"_index":1186,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionmodel.countdocuments",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1185,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":694,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid(id",{"_index":1189,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionmodel.findone",{"_index":1176,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":693,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1191,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionmodel.updateone",{"_index":1190,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionservice.create(createpermissiondto",{"_index":1151,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.findall(querystring",{"_index":1154,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.findone(id",{"_index":1156,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.remove(id",{"_index":1158,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.update(id",{"_index":1157,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.reflector.get(response_message",{"_index":1204,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":924,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":947,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1282,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1277,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1283,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1287,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1285,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1246,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(querystring",{"_index":1247,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1249,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.getcv(user._id",{"_index":1258,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1254,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.updatestatus(id",{"_index":1253,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1347,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.countdocuments",{"_index":691,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1342,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id))?.populate",{"_index":1348,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["this.rolemodel.insertmany",{"_index":695,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1350,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1349,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservie.findone(user.role._id",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservie.findone(userrole._id",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservie.findone(userrole._id)).toobject",{"_index":966,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1320,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(querystring",{"_index":1321,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1323,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1325,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1324,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.signrefreshtoken(payload",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.subscribermodel.find",{"_index":1033,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.subscriberservice",{"_index":1419,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberservice.create",{"_index":1417,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberservice.find",{"_index":1418,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberservice.findbyid(id",{"_index":1420,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberservice.findone",{"_index":1414,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberservice.softdelete",{"_index":1423,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscriberservice.updateone",{"_index":1421,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1388,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(querystring",{"_index":1389,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1391,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskill(user",{"_index":1397,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1394,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1393,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1540,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.countdocuments",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.usermodel.findbyid(user_id",{"_index":1542,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.insertmany",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.updateone",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":1495,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(_id",{"_index":1505,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuser(querystring",{"_index":1493,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserbyid(user_id",{"_index":1510,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(updateuserdto",{"_index":1498,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findone(email",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.getuserbyrefreshtoken(refresh_token",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validatefile(file",{"_index":1092,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["throttle",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttle({default",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":736,"title":{},"body":{"injectables/ErrorHandlerInterceptor.html":{}}}],["timestamps",{"_index":462,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["token",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["token')@get('refresh",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":625,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["totalitem",{"_index":646,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["totalpage",{"_index":648,"title":{},"body":{"interfaces/DataQueryResponse.html":{},"interfaces/PaginationQueryOptions.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":1683,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1109,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["transform(value",{"_index":1110,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["transformer",{"_index":471,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1201,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1006,"title":{},"body":{"modules/MailerModule.html":{}}}],["true",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailerModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isnotempty({message",{"_index":587,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["try",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["ttl",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["tuan",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["twitter",{"_index":1689,"title":{},"body":{"index.html":{}}}],["type",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"interfaces/DataQueryResponse.html":{},"injectables/DatabasesService.html":{},"classes/DeleteUserDto.html":{},"injectables/ErrorHandlerInterceptor.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/HistoryResume.html":{},"interfaces/IMailSender.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/MulterConfigService.html":{},"interfaces/PaginationQueryOptions.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/Permission.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1701,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1116,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["types",{"_index":720,"title":{},"body":{"classes/DeleteUserDto.html":{},"injectables/ParseObjectIDPipe.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types.objectid.createfromhexstring(value[item",{"_index":1118,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["types/bcryptjs",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["types/cron",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["types/ms",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":931,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"index.html":{}}}],["unauthorized",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":915,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ParseObjectIDPipe.html":{},"injectables/ResumesService.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception('id",{"_index":1503,"title":{},"body":{"controllers/UserController.html":{}}}],["unauthorizedexception('invalid",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorizedexception('status",{"_index":1284,"title":{},"body":{"injectables/ResumesService.html":{}}}],["undefined",{"_index":468,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["undefined})@isarray({message",{"_index":599,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["undefined})@isboolean({message",{"_index":582,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["undefined})@isdatestring",{"_index":544,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["undefined})@ismongoid({message",{"_index":585,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["undefined})@isnotempty({message",{"_index":542,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["undefined})@isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":531,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["undefined})@isstring({each",{"_index":600,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["undefined})@isstring({message",{"_index":580,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["undefined})@public()@useguards(localauthguard)@responsemessage('user",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":1304,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["unit",{"_index":1661,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailerController.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1700,"title":{},"body":{"properties.html":{}}}],["unprocessable_entity",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unused",{"_index":933,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["update",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1392,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["update(@param('id",{"_index":388,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionController.html":{},"controllers/RolesController.html":{}}}],["update(id",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1378,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["updatecompanydto",{"_index":366,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updated",{"_index":1499,"title":{},"body":{"controllers/UserController.html":{}}}],["updated_at",{"_index":442,"title":{},"body":{"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["updatedat",{"_index":805,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"interfaces/HistoryResume.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updatefiledto",{"_index":750,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":862,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1142,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1243,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1314,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":801,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatestatus",{"_index":1224,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["updatestatus(@param('id",{"_index":1251,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(id",{"_index":1236,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["updatesubscriberdto",{"_index":1379,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":1472,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(@body",{"_index":1497,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(updateuserdto",{"_index":1486,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserdto",{"_index":721,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/DeleteUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusertoken",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["uploadedfile",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1422,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":566,"title":{},"body":{"classes/CreateResumeDto.html":{},"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["url_is_required",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailerModule.html":{}}}],["useguards",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{}}}],["usepipes",{"_index":1145,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/ResumesController.html":{}}}],["user",{"_index":120,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailerModule.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@get('logout",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@post('by",{"_index":1232,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{}}}],["user.dto",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":504,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":717,"title":{},"body":{"classes/DeleteUserDto.html":{}}}],["user.dto.ts:12",{"_index":508,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:16",{"_index":613,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":611,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":614,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":607,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":612,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":616,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":606,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":609,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":1196,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:50",{"_index":1194,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:53",{"_index":1197,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:56",{"_index":1193,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:59",{"_index":1195,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:6",{"_index":1446,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:62",{"_index":1192,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:69",{"_index":1513,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:76",{"_index":1512,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:9",{"_index":506,"title":{},"body":{"classes/Company-2.html":{}}}],["user.email",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{}}}],["user.name",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"injectables/PermissionService.html":{},"modules/UserModule.html":{}}}],["user.permissions",{"_index":941,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user.populate",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":1489,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.toobject",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.[data",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_id",{"_index":1485,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user_id_is_required",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_role",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":1466,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":815,"title":{},"body":{"interfaces/HistoryResume.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":162,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@post('login",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":40,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":520,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["userrole",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{}}}],["userrole?._id",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["users",{"_index":1464,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1518,"title":{},"body":{"modules/UserModule.html":{}}}],["users/dto/create",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/find/:id",{"_index":1507,"title":{},"body":{"controllers/UserController.html":{}}}],["users/schemas/user.schema",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["users/user.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/user.service",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["users@gmail.com",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["userschema",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":245,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["usertype",{"_index":116,"title":{"interfaces/UserType.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IMailSender.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"interfaces/UserType.html":{},"coverage.html":{}}}],["utils/hashpassword",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UserService.html":{}}}],["utils/pagination_query.utils",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UserService.html":{}}}],["utils/validation.utils",{"_index":1173,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/ResumesService.html":{}}}],["valid",{"_index":1504,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":953,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":956,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":972,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatefile",{"_index":1066,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["validatefile(file",{"_index":1073,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["validatenested",{"_index":478,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validateobjectid",{"_index":1172,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validateobjectid(id",{"_index":1187,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/ResumesService.html":{}}}],["validateuser",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":479,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/DeleteUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["validobjectid",{"_index":1114,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["value",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseObjectIDPipe.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value[item",{"_index":1117,"title":{},"body":{"injectables/ParseObjectIDPipe.html":{}}}],["variable",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1710,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":934,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{}}}],["version",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"properties.html":{}}}],["vietnam",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["vnd",{"_index":1047,"title":{},"body":{"injectables/MailerService.html":{}}}],["void",{"_index":1072,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["watch",{"_index":1656,"title":{},"body":{"index.html":{}}}],["website",{"_index":1687,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1056,"title":{},"body":{"injectables/MailerService.html":{}}}],["x",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SubscribersService.html":{}}}],["yarn",{"_index":1651,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1677,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailerModule.html":{},"modules/PermissionModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common'\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nPermissionModule\n\nPermissionModule\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            PermissionModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { UserModule } from './Users/user.module'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { AuthModule } from './auth/auth.module'\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose'\n// import { APP_GUARD } from '@nestjs/core'\n// import { JwtAuthGuard } from './auth/jwt-auth.guard'\nimport { CompaniesModule } from './companies/companies.module'\nimport { JobsModule } from './jobs/jobs.module'\nimport { FilesModule } from './files/files.module'\nimport { ResumesModule } from './resumes/resumes.module'\nimport { PermissionModule } from './permission/permission.module'\nimport { RolesModule } from './roles/roles.module'\nimport { DatabasesModule } from './databases/databases.module'\nimport { SubscribersModule } from './subscribers/subscribers.module'\nimport { MailerModule } from './mailer/mailer.module'\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler'\nimport { APP_GUARD } from '@nestjs/core'\n\n@Module({\n  imports: [\n    ThrottlerModule.forRoot([{\n      ttl: 60,\n      limit: 2\n    }]),\n    ScheduleModule.forRoot(),\n    UserModule,\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n      isGlobal: true\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (ConfigService: ConfigService) => ({\n        uri: ConfigService.get('MONGODB_URI'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin)\n          return connection\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailerModule\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // {\n    //   provide: APP_GUARD,\n    //   useClass: JwtAuthGuard\n    // }\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefres\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccount(user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get Account User By JWT')@Get('account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { user: UserType; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefres\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefres(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Refresh Token')@Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Throttle({default: undefined})@Public()@UseGuards(LocalAuthGuard)@ResponseMessage('User Login')@ApiBody({type: UserLoginDto})@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: UserType, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout User')@Get('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('User Register')@Public()@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Body, Res, Req, Get } from '@nestjs/common'\nimport { LocalAuthGuard } from './local-auth.guard'\nimport { AuthService } from './auth.service'\nimport { Public, ResponseMessage, User } from '~/decorator/customize'\nimport { RegisterUserDto, UserLoginDto } from '~/Users/dto/create-user.dto'\nimport { Response } from 'express'\nimport { UserType } from '~/interface/user.interface'\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler'\nimport { ApiBody, ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) { }\n  /*\n   * @Route: /auth/login\n   * @Method: POST\n   * @Access: Public\n   * @Desc: Login User\n   */\n  @Throttle({ default: { limit: 3, ttl: 60 } })\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @ResponseMessage('User Login')\n  @ApiBody({ type: UserLoginDto })\n  @Post('login')\n  async login(@Req() req, @Res({ passthrough: true }) res: Response) {\n    return this.authService.login(req.user, res)\n  }\n  /*\n   * @Route: /auth/register\n   * @Method: POST\n   * @Access: Public\n   * @Desc: Register User\n   */\n  @ResponseMessage('User Register')\n  @Public()\n  @Post('register')\n  async register(@Body() registerUserDto: RegisterUserDto) {\n    return this.authService.register(registerUserDto)\n  }\n  /*\n   * @Route: /auth/account\n   * @Method: GET\n   * @Access: Private\n   * @Desc: Get Account User By JWT\n   */\n  @ResponseMessage('Get Account User By JWT')\n  @Get('account')\n  getAccount(@User() user: UserType) {\n    return { user }\n  }\n  /*\n   * @Route: /auth/refresh\n   * @Method: GET\n   * @Access: Public\n   * @Desc: Refresh Token\n   */\n  @Public()\n  @ResponseMessage('Refresh Token')\n  @Get('refresh')\n  handleRefres(@Req() req, @Res({ passthrough: true }) res: Response) {\n    const refresh_token = req.cookies['refresh_token']\n    return this.authService.processRefreshToken(refresh_token, res)\n  }\n  @ResponseMessage('Logout User')\n  @Get('logout')\n  async logout(@User() user: UserType, @Res({ passthrough: true }) res: Response) {\n    return this.authService.logout(user._id, res)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { UserModule } from '~/Users/user.module'\nimport { PassportModule } from '@nestjs/passport'\nimport { LocalStrategy } from './passport/local.strategy'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { JwtStrategy } from './passport/jwt.strategy'\nimport { AuthController } from './auth.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { User, UserSchema } from '~/Users/schemas/User.schema'\nimport { RolesModule } from '~/roles/roles.module'\nimport { RolesService } from '~/roles/roles.service'\nimport { Role, RoleSchema } from '~/roles/schemas/role.schema'\n\n@Module({\n  imports: [\n    UserModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET_KEY'),\n        signOptions: {\n          expiresIn: configService.get('JWT_EXPIRATION_TIME')\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema\n      },\n      {\n        name: Role.name,\n        schema: RoleSchema\n      }\n    ])\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                processRefreshToken\n                            \n                            \n                                signRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService, configService: ConfigService, userModel: SoftDeleteModel, roleModel: SoftDeleteModel, roleServie: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleServie\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UserType, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(_id: string, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        processRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:93\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { JwtService } from '@nestjs/jwt'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Response } from 'express'\nimport ms from 'ms'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { RegisterUserDto } from '~/Users/dto/create-user.dto'\nimport { User, UserDocument } from '~/Users/schemas/User.schema'\nimport { UserService } from '~/Users/user.service'\nimport { HTTP_STATUS } from '~/constant/HTTP_STATUS'\nimport { USER_ROLE } from '~/databases/seeder'\n\nimport { UserType } from '~/interface/user.interface'\nimport { RolesService } from '~/roles/roles.service'\nimport { Role, RoleDocument } from '~/roles/schemas/role.schema'\nimport { comparePassword, hashPassword } from '~/utils/hashPassword'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UserService,\n    private jwtService: JwtService,\n    private readonly configService: ConfigService,\n    @InjectModel(User.name) private readonly userModel: SoftDeleteModel,\n    @InjectModel(Role.name) private readonly roleModel: SoftDeleteModel,\n    private readonly roleServie: RolesService\n  ) {}\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOne(email)\n    if (user) {\n      const { password } = user\n      const isValid = comparePassword(pass, password)\n      if (!isValid) return null\n      user.role\n        ? (\n            await user.populate({\n              path: 'role',\n              select: { name: 1, _id: 1 }\n            })\n          ).name\n        : null\n      const userRole = user.role as unknown as {\n        _id: string\n        name: string\n      }\n      const temp = await this.roleServie.findOne(userRole._id)\n      const objUser = {\n        ...user.toObject(),\n        permissions: temp?.permissions ?? [],\n        roless: userRole\n      }\n      return objUser\n    }\n    return null\n  }\n  async login(user: UserType, res: Response) {\n    // const { permissions } = await this.roleServie.findOne(user.role._id) as any\n    const { _id, role, name, email, permissions } = user\n    const payload = {\n      email: user.email,\n      sub: 'Token Login',\n      iss: 'From Server',\n      _id,\n      role,\n      name,\n      permissions\n    }\n    const refresh_token = this.signRefreshToken(payload)\n    await this.usersService.updateUserToken(refresh_token, _id)\n    res.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRATION_TIME')) * 10000\n    })\n    return {\n      user: {\n        _id,\n        role,\n        name,\n        email,\n        permissions\n      },\n      access_token: this.jwtService.sign(payload),\n      refresh_token\n    }\n  }\n  async register(registerUserDto: RegisterUserDto) {\n    const hashP = await hashPassword(registerUserDto.password)\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE })\n    const result = await this.userModel.create({ ...registerUserDto, password: hashP, role: userRole?._id })\n    return result\n  }\n  signRefreshToken = (payload: any) => {\n    return this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET_KET'),\n      expiresIn: ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRATION_TIME')) / 1000\n    })\n  }\n  processRefreshToken = async (refresh_token: string, res: Response) => {\n    try {\n      await this.jwtService.verifyAsync(refresh_token, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET_KET')\n      })\n      const user = await this.usersService.getUserByRefreshToken(refresh_token)\n      if (user) {\n        user.role\n          ? (\n              await user.populate({\n                path: 'role',\n                select: { name: 1, _id: 1 }\n              })\n            ).name\n          : null\n        const userRole = user.role as unknown as {\n          _id: string\n          name: string\n        }\n        const temp = await this.roleServie.findOne(userRole._id)\n        const objUser = {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n          roless: userRole\n        }\n        const { _id, role, name, email, permissions } = objUser\n        const payload = {\n          email: user.email,\n          sub: 'Token Login',\n          iss: 'From Server',\n          _id,\n          role,\n          name,\n          permissions\n        }\n        const refresh_token = this.signRefreshToken(payload)\n        await this.usersService.updateUserToken(refresh_token, _id.toString())\n\n        res.clearCookie('refresh_token')\n        res.cookie('refresh_token', refresh_token, {\n          httpOnly: true,\n          maxAge: ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRATION_TIME')) * 10000\n        })\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            _id,\n            role,\n            name,\n            email,\n            permissions\n          }\n        }\n      } else {\n        throw new HttpException('Refresh Token Invalid', HTTP_STATUS.BAD_REQUEST)\n      }\n    } catch (error) {\n      throw new HttpException('Refresh Token Invalid', HTTP_STATUS.BAD_REQUEST)\n    }\n  }\n  async logout(_id: string, res: Response) {\n    console.log(_id)\n\n    const x = await this.usersService.updateUserToken('', _id)\n    console.log(x)\n\n    res.clearCookie('refresh_token')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Fetch List Company !')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update Company !')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpException, Query, Version } from '@nestjs/common'\nimport { CompaniesService } from './companies.service'\nimport { CreateCompanyDto } from './dto/create-company.dto'\nimport { UpdateCompanyDto } from './dto/update-company.dto'\nimport { UserType } from '~/interface/user.interface'\nimport { ResponseMessage, User } from '~/decorator/customize'\nimport mongoose from 'mongoose'\nimport { HTTP_STATUS } from '~/constant/HTTP_STATUS'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Companies')\n@Controller({\n  path: 'companies',\n  version: ['1', '2']\n})\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) { }\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: UserType) {\n    return this.companiesService.createCompany(createCompanyDto, user)\n  }\n  @ResponseMessage('Fetch List Company !')\n  @Get()\n  findAll(@Query('page') page: string, @Query('limit') limit: string, @Query() qs: string) {\n    return this.companiesService.findAll(+page, +limit, qs)\n  }\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.companiesService.findOne(id)\n  }\n  @ResponseMessage('Update Company !')\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateCompanyDto: UpdateCompanyDto, @User() user: UserType) {\n    if (!mongoose.isValidObjectId(id)) {\n      return new HttpException('Invalid company id', HTTP_STATUS.NOT_FOUND)\n    }\n    return await this.companiesService.update(id, updateCompanyDto, user)\n  }\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: UserType) {\n    if (!mongoose.isValidObjectId(id)) {\n      return new HttpException('Invalid company id', HTTP_STATUS.NOT_FOUND)\n    }\n    return this.companiesService.remove(id, user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_exports\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService \n\nCompaniesService \n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { CompaniesService } from './companies.service'\nimport { CompaniesController } from './companies.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Company, CompanySchema } from './schemas/company.schema'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Company.name,\n        schema: CompanySchema\n      }\n    ])\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  exports: [CompaniesService]\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCompany\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companiesModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companiesModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCompany\n                        \n                    \n                \n            \n            \n                \ncreateCompany(createCompanyDto: CreateCompanyDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCompanyDto: UpdateCompanyDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateCompanyDto } from './dto/create-company.dto'\nimport { UpdateCompanyDto } from './dto/update-company.dto'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { Company, CompanyDocument } from './schemas/company.schema'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { UserType } from '~/interface/user.interface'\nimport aqp from 'api-query-params'\nimport { PaginationQuery } from '~/utils/pagination_query.utils'\n\n@Injectable()\nexport class CompaniesService {\n  constructor(@InjectModel(Company.name) private readonly companiesModel: SoftDeleteModel) {}\n  createCompany(createCompanyDto: CreateCompanyDto, user: UserType) {\n    const result = this.companiesModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return result\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    const result = await PaginationQuery(qs, this.companiesModel)\n    return result\n  }\n\n  async findOne(id: string) {\n    const result = await this.companiesModel.find({ _id: id })\n    return result\n  }\n\n  update(id: string, updateCompanyDto: UpdateCompanyDto, user: UserType) {\n    const result = this.companiesModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return result\n  }\n\n  async remove(id: string, user: UserType) {\n    await this.companiesModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    const result = this.companiesModel.softDelete({ _id: id })\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { HydratedDocument } from 'mongoose'\n\nexport type CompanyDocument = HydratedDocument\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop()\n  name: string\n\n  @Prop()\n  address: string\n\n  @Prop()\n  description: string\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop()\n  logo: string\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer'\nimport { IsArray, IsDate, IsDateString, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator'\nimport mongoose from 'mongoose'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\n\nclass Company {\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.COMPANY_ID_IS_REQUIRED })\n  _id: mongoose.Schema.Types.ObjectId\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.NAME_IS_REQUIRED })\n  name: string\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.NAME_IS_REQUIRED })\n  name: string\n\n  @IsArray({ message: RESPONSE_MESSAGE.SKILLS_IS_ARRAY })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.SKILLS_IS_REQUIRED })\n  skills: string[]\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.COMPANY_IS_REQUIRED })\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.LOCATION_IS_REQUIRED })\n  location: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.SALARY_IS_REQUIRED })\n  salary: number\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.QUANTITY_IS_REQUIRED })\n  quantity: number\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.LEVEL_IS_REQUIRED })\n  level: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.DESCRIPTION_IS_REQUIRED })\n  description: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.START_DATE_IS_REQUIRED })\n  @IsDateString()\n  startDate: Date\n\n  @IsDateString()\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.END_DATE_IS_REQUIRED })\n  endDate: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_Id company is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name conpany is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator'\nimport { Type } from 'class-transformer'\nimport mongoose from 'mongoose'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n  @IsNotEmpty({ message: '_Id company is required' })\n  _id: mongoose.Schema.Types.ObjectId\n\n  @IsNotEmpty({ message: 'Name conpany is required' })\n  name: string\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: RESPONSE_MESSAGE.MONGO_ID_IS_INVALID })\n  role: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'Admin' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator'\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n\n  @IsNotEmpty({ message: 'Description is required' })\n  description: string\n\n  @IsNotEmpty({ message: 'Logo is required' })\n  logo: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})@IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer'\nimport { IsArray, IsDate, IsDateString, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from 'class-validator'\nimport mongoose from 'mongoose'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\n\nclass Company {\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.COMPANY_ID_IS_REQUIRED })\n  _id: mongoose.Schema.Types.ObjectId\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.NAME_IS_REQUIRED })\n  name: string\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.NAME_IS_REQUIRED })\n  name: string\n\n  @IsArray({ message: RESPONSE_MESSAGE.SKILLS_IS_ARRAY })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.SKILLS_IS_REQUIRED })\n  skills: string[]\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.COMPANY_IS_REQUIRED })\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.LOCATION_IS_REQUIRED })\n  location: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.SALARY_IS_REQUIRED })\n  salary: number\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.QUANTITY_IS_REQUIRED })\n  quantity: number\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.LEVEL_IS_REQUIRED })\n  level: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.DESCRIPTION_IS_REQUIRED })\n  description: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.START_DATE_IS_REQUIRED })\n  @IsDateString()\n  startDate: Date\n\n  @IsDateString()\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.END_DATE_IS_REQUIRED })\n  endDate: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                    \n                                method\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/dto/create-permission.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/dto/create-permission.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/dto/create-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\n\nexport class CreatePermissionDto {\n  @IsString({ message: RESPONSE_MESSAGE.NAME_MUST_BE_STRING })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.NAME_IS_REQUIRED })\n  name: string\n\n  @IsString({ message: RESPONSE_MESSAGE.API_PATH_MUST_BE_STRING })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.URL_IS_REQUIRED })\n  apiPath: string\n\n  @IsString({ message: RESPONSE_MESSAGE.METHOD_MUST_BE_STRING })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.URL_IS_REQUIRED })\n  method: string\n\n  @IsString({ message: RESPONSE_MESSAGE.MODULE_MUST_BE_STRING })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.MODULE_IS_REQUIRED })\n  module: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyID\n                            \n                            \n                                    \n                                    \n                                jobID\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, isEmail } from 'class-validator'\nimport mongoose from 'mongoose'\nimport { HistoryResume } from '../schemas/resume.schema'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.URL_IS_REQUIRED })\n  url: string\n\n  @IsMongoId({ message: RESPONSE_MESSAGE.ID_IS_INVALID })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.COMPANY_ID_IS_REQUIRED })\n  companyID: mongoose.Types.ObjectId\n\n  @IsMongoId({ message: RESPONSE_MESSAGE.ID_IS_INVALID })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.JOB_ID_IS_REQUIRED })\n  jobID: mongoose.Types.ObjectId\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})@IsString({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})@IsBoolean({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})@IsString({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray({message: undefined})@IsMongoId({message: undefined, each: true})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty, IsString } from 'class-validator'\nimport mongoose from 'mongoose'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.NAME_IS_REQUIRED })\n  @IsString({ message: RESPONSE_MESSAGE.NAME_MUST_BE_STRING })\n  name: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.DESCRIPTION_IS_REQUIRED })\n  @IsString({ message: RESPONSE_MESSAGE.DESCRIPTION_IS_REQUIRED })\n  description: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.STATUS_IS_REQUIRED })\n  @IsBoolean({ message: RESPONSE_MESSAGE.STATUS_MUST_BE_BOOLEAN })\n  isActive: boolean\n\n  @IsArray({ message: RESPONSE_MESSAGE.PERMISSIONS_IS_ARRAY })\n  @IsMongoId({ message: RESPONSE_MESSAGE.MONGO_ID_IS_INVALID, each: true })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.PERMISSIONS_IS_REQUIRED })\n  permissions: mongoose.Schema.Types.ObjectId[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: undefined})@IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: undefined})@IsArray({message: undefined})@IsString({each: true, message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, IsString } from 'class-validator'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.NAME_IS_REQUIRED })\n  name: string\n\n  @IsEmail({}, { message: RESPONSE_MESSAGE.EMAIL_IS_INVALID })\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.EMAIL_IS_REQUIRED })\n  email: string\n\n  @IsNotEmpty({ message: RESPONSE_MESSAGE.SKILLS_IS_REQUIRED })\n  @IsArray({ message: RESPONSE_MESSAGE.SKILLS_MUST_BE_ARRAY })\n  @IsString({ each: true, message: RESPONSE_MESSAGE.SKILLS_MUST_BE_STRING })\n  skills: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Invalid email'})@IsNotEmpty({message: 'Email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role is required'})@IsMongoId({message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator'\nimport { Type } from 'class-transformer'\nimport mongoose from 'mongoose'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n  @IsNotEmpty({ message: '_Id company is required' })\n  _id: mongoose.Schema.Types.ObjectId\n\n  @IsNotEmpty({ message: 'Name conpany is required' })\n  name: string\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: RESPONSE_MESSAGE.MONGO_ID_IS_INVALID })\n  role: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'Admin' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataQueryResponse.html":{"url":"interfaces/DataQueryResponse.html","title":"interface - DataQueryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataQueryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination_query.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import aqp from 'api-query-params'\nimport { PopulateOptions } from 'mongoose'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nexport interface DataQueryResponse {\n  meta: {\n    currentPage: number\n    pageSize: number\n    pages: number\n    total: number\n  }\n  result: any[]\n}\n\ninterface PaginationQueryOptions {\n  filter?: Record\n  sort?: Record\n  projection?: Record\n  population?: PopulateOptions[]\n}\n\nexport const PaginationQuery = async (\n  queryString: string,\n  model: SoftDeleteModel,\n  options?: PaginationQueryOptions\n): Promise => {\n  const queryParams = JSON.parse(JSON.stringify(queryString))\n  const { current, pageSize } = queryParams\n  const { filter, sort, projection, population } = options ? options : aqp(queryParams)\n  delete filter.current\n  delete filter.pageSize\n  const currentPage = current ? Number(current) : 1\n  const defaultLimit = pageSize ? Number(pageSize) : 10\n  const offset = (currentPage - 1) * defaultLimit\n  const totalItem = (await model.find(filter)).length\n  const totalPage = Math.ceil(totalItem / defaultLimit)\n  const result = await model\n    .find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    .sort(sort as any)\n    .select(projection)\n    .populate(population)\n    .exec()\n  return {\n    meta: {\n      currentPage: currentPage,\n      pageSize: defaultLimit,\n      pages: totalPage,\n      total: totalItem\n    },\n    result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common'\nimport { DatabasesService } from './databases.service'\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LoggerService, Module } from '@nestjs/common'\nimport { DatabasesService } from './databases.service'\nimport { DatabasesController } from './databases.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { User } from '~/decorator/customize'\nimport { UserSchema } from '~/Users/schemas/User.schema'\nimport { Permission, PermissionSchema } from '~/permission/schemas/permission.schema'\nimport { Role, RoleSchema } from '~/roles/schemas/role.schema'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema\n      },\n      {\n        name: Permission.name,\n        schema: PermissionSchema\n      },\n      {\n        name: Role.name,\n        schema: RoleSchema\n      }\n    ])\n  ],\n  controllers: [DatabasesController],\n  providers: [DatabasesService]\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, LoggerService, OnModuleInit } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { UserDocument } from '~/Users/schemas/User.schema'\nimport { User } from '~/decorator/customize'\nimport { Permission, PermissionDocument } from '~/permission/schemas/permission.schema'\nimport { Role, RoleDocument } from '~/roles/schemas/role.schema'\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './seeder'\nimport { iif } from 'rxjs'\nimport { hashPassword } from '~/utils/hashPassword'\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: SoftDeleteModel,\n    @InjectModel(Permission.name) private readonly permissionModel: SoftDeleteModel,\n    @InjectModel(Role.name) private readonly roleModel: SoftDeleteModel\n  ) {}\n  async onModuleInit() {\n    const countUser = await this.userModel.countDocuments({})\n    const countPermission = await this.permissionModel.countDocuments({})\n    const countRole = await this.roleModel.countDocuments({})\n    if (countPermission === 0) {\n      await this.permissionModel.insertMany(INIT_PERMISSIONS)\n    }\n\n    if (countRole === 0) {\n      const permissions = await this.permissionModel.find({}).select('_id')\n      await this.roleModel.insertMany([\n        {\n          name: ADMIN_ROLE,\n          description: 'Full Control',\n          isActive: true,\n          permissions: permissions\n        },\n        {\n          name: USER_ROLE,\n          description: 'Normal User',\n          isActive: true,\n          permissions: []\n        }\n      ])\n    }\n    if (countUser === 0) {\n      const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE }).select('_id')\n      const userRole = await this.roleModel.findOne({ name: USER_ROLE }).select('_id')\n      await this.userModel.insertMany([\n        {\n          name: 'Le Minh Tuan',\n          email: 'admin@gmail.com',\n          password: await hashPassword('123'),\n          age: 20,\n          gender: 'Male',\n          address: 'VietNam',\n          role: adminRole?._id\n        },\n        {\n          name: 'Le Minh Tuan User',\n          email: 'users@gmail.com',\n          password: await hashPassword('123'),\n          age: 20,\n          gender: 'Male',\n          address: 'VietNam',\n          role: userRole?._id\n        }\n      ])\n    }\n    if (countUser > 0 && countPermission > 0 && countRole > 0) {\n      console.log('>>> ALREADY INIT SEEDER DATA...!')\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserDto.html":{"url":"classes/DeleteUserDto.html","title":"class - DeleteUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Id is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/update-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateUserDto } from './create-user.dto'\nimport { IsNotEmpty } from 'class-validator'\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsNotEmpty({ message: 'Id is required' })\n  _id: string\n}\n\nexport class DeleteUserDto {\n  @IsNotEmpty({ message: 'Id is required' })\n  _id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerInterceptor.html":{"url":"injectables/ErrorHandlerInterceptor.html","title":"injectable - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/errorhandler.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/errorhandler.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, HttpException, Injectable, NestInterceptor } from '@nestjs/common'\nimport { Observable, catchError, throwError } from 'rxjs'\nimport { HTTP_STATUS } from '~/constant/HTTP_STATUS'\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((err) =>\n        throwError(\n          () =>\n            new HttpException(\n              {\n                statusCode: HTTP_STATUS.BAD_REQUEST,\n                message: err.message,\n                data: {\n                  result: err,\n                  meta: {}\n                }\n              },\n              HTTP_STATUS.BAD_REQUEST\n            )\n        )\n      )\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/schema/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filename: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus\n} from '@nestjs/common'\nimport { FilesService } from './files.service'\nimport { UpdateFileDto } from './dto/update-file.dto'\nimport { FileInterceptor } from '@nestjs/platform-express'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) { }\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('file'))\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType: /(jpg|jpeg|png|gif)$/\n        })\n\n        .addMaxSizeValidator({\n          maxSize: 10000 * 1024\n        })\n\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY\n        })\n    )\n    file: Express.Multer.File\n  ) {\n    return {\n      filename: file.filename\n    }\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll()\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id)\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto)\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { FilesService } from './files.service'\nimport { FilesController } from './files.controller'\nimport { MulterModule } from '@nestjs/platform-express'\nimport { MulterConfigService } from './multer.config'\n\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService\n    })\n  ],\n  controllers: [FilesController],\n  providers: [FilesService]\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateFileDto } from './dto/create-file.dto'\nimport { UpdateFileDto } from './dto/update-file.dto'\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file'\n  }\n\n  findAll() {\n    return `This action returns all files`\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryResume.html":{"url":"interfaces/HistoryResume.html","title":"interface - HistoryResume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HistoryResume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            updatedBy\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedBy:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport mongoose, { HydratedDocument } from 'mongoose'\nimport { Company } from '~/companies/schemas/company.schema'\nimport { ResumeStatus } from '~/constant/status'\nimport { Job } from '~/jobs/schemas/job.schemas'\n\nexport type ResumeDocument = HydratedDocument\nexport interface HistoryResume {\n  status: string\n  updatedAt: Date\n  updatedBy: {\n    _id: mongoose.Types.ObjectId\n    email: string\n  }\n}\n\n@Schema({ timestamps: true, collection: 'resumes' })\nexport class Resume {\n  @Prop()\n  email: string\n\n  @Prop()\n  userID: mongoose.Types.ObjectId\n\n  @Prop()\n  url: string\n\n  @Prop()\n  status: ResumeStatus\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Company.name })\n  companyID: mongoose.Schema.Types.ObjectId\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Job.name })\n  jobID: mongoose.Schema.Types.ObjectId\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: HistoryResume[]\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailSender.html":{"url":"interfaces/IMailSender.html","title":"interface - IMailSender","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailSender\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jobs\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jobs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobs:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserType {\n  _id: string\n  name: string\n  email: string\n  role: {\n    _id: string\n    name: string\n  }\n  permissions: {\n    _id: string\n    name: string\n    apiPath: string\n    module: string\n  }[]\n}\nexport interface IMailSender {\n  to: string\n  name: string\n  jobs: {\n    name: string\n    company: string\n    salary: string\n    skills: string[]\n  }[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schemas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schemas.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport mongoose, { HydratedDocument } from 'mongoose'\n\nexport type JobsDocument = HydratedDocument\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop()\n  name: string\n\n  @Prop({ required: true })\n  skills: string[]\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId\n    name: string\n  }\n\n  @Prop()\n  location: string\n\n  @Prop()\n  salary: number\n\n  @Prop()\n  quantity: number\n\n  @Prop()\n  level: string\n\n  @Prop()\n  description: string\n\n  @Prop()\n  startDate: Date\n\n  @Prop()\n  endDate: Date\n\n  @Prop()\n  isActive: boolean\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new Job')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(user: UserType, queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get all Jobs')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get a Job by Id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete a Job')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update a Job')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common'\nimport { JobsService } from './jobs.service'\nimport { CreateJobDto } from './dto/create-job.dto'\nimport { UpdateJobDto } from './dto/update-job.dto'\nimport { ResponseMessage, User } from '~/decorator/customize'\nimport { UserType } from '~/interface/user.interface'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) { }\n  /*\n   * @Route: /jobs\n   * @Method: POST\n   * @Access: JWT\n   * @Desc: Create Job\n   */\n  @ResponseMessage('Create a new Job')\n  @Post()\n  create(@Body() createJobDto: CreateJobDto) {\n    return this.jobsService.create(createJobDto)\n  }\n  /*\n   * @Route: /jobs\n   * @Method: GET\n   * @Access: Public\n   * @Desc: Get All Jobs\n   */\n  @ResponseMessage('Get all Jobs')\n  @Get()\n  findAll(@User() user: UserType, @Query() queryString: string) {\n    return this.jobsService.findAll(user, queryString)\n  }\n  /*\n   * @Route: /jobs/:id\n   * @Method: GET\n   * @Access: Public\n   * @Desc: Get Job By Id\n   */\n  @ResponseMessage('Get a Job by Id')\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id)\n  }\n  /*\n   * @Route: /jobs/:id\n   * @Method: PATCH\n   * @Access: JWT\n   * @Desc: Update Job\n   */\n  @ResponseMessage('Update a Job')\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateJobDto: UpdateJobDto, @User() user: UserType) {\n    return this.jobsService.update(id, updateJobDto, user)\n  }\n  /*\n   * @Route: /jobs/:id\n   * @Method: DELETE\n   * @Access: JWT\n   * @Desc: Delete Job\n   */\n  @ResponseMessage('Delete a Job')\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: UserType) {\n    return this.jobsService.remove(id, user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { JobsService } from './jobs.service'\nimport { JobsController } from './jobs.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { JobSchema } from './schemas/job.schemas'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Job',\n        schema: JobSchema\n      }\n    ])\n  ],\n  controllers: [JobsController],\n  providers: [JobsService]\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: UserType, queryString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common'\nimport { CreateJobDto } from './dto/create-job.dto'\nimport { UpdateJobDto } from './dto/update-job.dto'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Job, JobsDocument } from './schemas/job.schemas'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { UserType } from '~/interface/user.interface'\nimport { PaginationQuery } from '~/utils/pagination_query.utils'\n\n@Injectable()\nexport class JobsService {\n  constructor(@InjectModel(Job.name) private readonly jobModel: SoftDeleteModel) {}\n  async create(createJobDto: CreateJobDto) {\n    const result = await this.jobModel.create(createJobDto)\n    return result\n  }\n\n  findAll(user: UserType, queryString: string) {\n    const paginationResult = PaginationQuery(queryString, this.jobModel)\n    return paginationResult\n  }\n  async findOne(id: string) {\n    const result = await this.jobModel.findById(id)\n    if (!result) throw new NotFoundException('Job not found')\n    return result\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, user: UserType) {\n    const result = await this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return result\n  }\n\n  async remove(id: string, user: UserType) {\n    const result = await this.jobModel.softDelete({ _id: id })\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, ForbiddenException, Injectable, UnauthorizedException } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { AuthGuard } from '@nestjs/passport'\nimport { Request } from 'express'\nimport { log } from 'handlebars/runtime'\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from '~/decorator/customize'\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super()\n  }\n  canActivate(context: ExecutionContext) {\n    const isPubic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [context.getHandler(), context.getClass()])\n    if (isPubic) return true\n    return super.canActivate(context)\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handleRequest(err, user, info, context: ExecutionContext) {\n    if (err || !user) {\n      throw err || new UnauthorizedException({ message: 'Invalid Token or Token Expired' })\n    }\n    const request: Request = context.switchToHttp().getRequest()\n    const targetMethod = request.method\n    const targetEndpoint = request?.route.path as string\n    const permissions = user.permissions ?? []\n    let isAlowed: boolean = permissions.some((permissions) => {\n      const { method, apiPath } = permissions\n      if (targetEndpoint.includes(apiPath) && method === targetMethod) return true\n    })\n    if (targetEndpoint.startsWith('/api/v1/auth')) isAlowed = true\n    const isSkipPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n      context.getHandler(),\n      context.getClass()\n    ])\n    console.log(isSkipPermission);\n\n    if (!isAlowed && !isSkipPermission) {\n      throw new ForbiddenException({ message: 'You dont have permission to access this endpoint' })\n    }\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleServie: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleServie\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { UserType } from '~/interface/user.interface'\nimport { RolesService } from '~/roles/roles.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly roleServie: RolesService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET_KEY')\n    })\n  }\n  async validate(payload: UserType) {\n    const { _id, role, name, email } = payload\n    const userRole = role as unknown as {\n      _id: string\n      name: string\n    }\n    const temp = (await this.roleServie.findOne(userRole._id)).toObject()\n    return {\n      _id,\n      role,\n      name,\n      email,\n      permissions: temp?.permissions ?? []\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { AuthService } from '../auth.service'\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super()\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password)\n    if (!user) {\n      throw new UnauthorizedException({ message: 'Invalid Username or Password' })\n    }\n    console.log(user)\n\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailerController.html":{"url":"controllers/MailerController.html","title":"controller - MailerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer/mailer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mailer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Handle Send Email')\n                \n            \n\n                    \n                        \n                            Defined in src/mailer/mailer.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\nimport { MailerService } from './mailer.service'\nimport { Public, ResponseMessage } from '~/decorator/customize'\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('Mailer')\n@Controller('mailer')\nexport class MailerController {\n  constructor(private readonly mailerService: MailerService) { }\n\n  @Get()\n  @Public()\n  // @Cron(CronExpression.EVERY_10_SECONDS)\n  @ResponseMessage('Handle Send Email')\n  async handleTestEmail() {\n    return await this.mailerService.handleSendEmail()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_imports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailer\n\nMailer\n\n\n\nMailerModule\n\nMailerModule\n\nMailerModule -->\n\nMailer->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mailer/mailer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            Mailer\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MailerService } from './mailer.service'\nimport { MailerController } from './mailer.controller'\nimport { ConfigService } from '@nestjs/config'\nimport { MailerModule as Mailer } from '@nestjs-modules/mailer'\nimport { join } from 'path'\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Job, JobSchema } from '~/jobs/schemas/job.schemas'\nimport { Subscriber, SubscriberSchema } from '~/subscribers/schemas/subscriber.schema'\n\n@Module({\n  imports: [\n    Mailer.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASSWORD')\n          }\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true\n          }\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    MongooseModule.forFeature([\n      {\n        name: Job.name,\n        schema: JobSchema\n      },\n      {\n        name: Subscriber.name,\n        schema: SubscriberSchema\n      }\n    ])\n  ],\n  controllers: [MailerController],\n  providers: [MailerService]\n})\nexport class MailerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer/mailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleSendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerServices: MailerS, jobModel: SoftDeleteModel, subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/mailer/mailer.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerServices\n                                                  \n                                                        \n                                                                    MailerS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSendEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mailer/mailer.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { MailerService as MailerS } from '@nestjs-modules/mailer'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { Job, JobsDocument } from '~/jobs/schemas/job.schemas'\nimport { SubcribersDocument } from '~/subscribers/schemas/subscriber.schema'\nimport { Subscriber } from 'rxjs'\nimport { IMailSender } from '~/interface/user.interface'\n\n@Injectable()\nexport class MailerService {\n  constructor(\n    private readonly mailerServices: MailerS,\n\n    @InjectModel(Job.name)\n    private readonly jobModel: SoftDeleteModel,\n\n    @InjectModel(Subscriber.name)\n    private readonly subscriberModel: SoftDeleteModel\n  ) {}\n  async handleSendEmail() {\n    const mailSender: IMailSender[] = []\n    const subcribers = await this.subscriberModel.find({})\n    for (const subc of subcribers) {\n      mailSender.push({\n        to: subc.email,\n        name: subc.name,\n        jobs: []\n      })\n      const jobMatchingWithSkills = await this.jobModel.find({ skills: { $in: subc.skills } })\n      for (const item of jobMatchingWithSkills) {\n        mailSender[mailSender.length - 1].jobs.push({\n          name: item.name,\n          company: item.company.name,\n          salary: `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' VND',\n          skills: item.skills\n        })\n      }\n    }\n\n    mailSender.forEach(async (item) => {\n      await this.mailerServices.sendMail({\n        to: item.to,\n        from: 'Auroraphtgrp CV', // override default from\n        subject: 'Welcome to Nice App! Confirm your Email',\n        template: 'job',\n        context: {\n          receiver: item.name,\n          jobs: item.jobs\n        }\n      })\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                            \n                                validateFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateFile\n                        \n                    \n                \n            \n            \n                \nvalidateFile(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, ParseFilePipeBuilder } from '@nestjs/common'\nimport { MulterModuleOptions, MulterOptionsFactory } from '@nestjs/platform-express'\nimport fs from 'fs'\nimport { diskStorage } from 'multer'\nimport path, { join } from 'path'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd()\n  }\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (err) => {\n      if (err) {\n        console.log(err)\n        return\n      }\n    })\n  }\n  validateFile(file: Express.Multer.File) {\n    const fileTypes = /(jpg|jpeg|png|gif)$/\n    const extName = fileTypes.test(path.extname(file.originalname).toLowerCase())\n    const mimeType = fileTypes.test(file.mimetype)\n    if (extName && mimeType) {\n      return true\n    } else {\n      return false\n    }\n  }\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const isValid = this.validateFile(file)\n          if (!isValid) {\n            return cb(new Error(RESPONSE_MESSAGE.FILE_IS_NOT_VALID), null)\n          }\n          const folder = req?.headers?.folder_type ?? 'default'\n          console.log(isValid)\n          this.ensureExists(`public/images/${folder}`)\n          cb(null, join(this.getRootPath(), `public/images/${folder}`))\n        },\n        filename: (req, file, cb) => {\n          const extName = path.extname(file.originalname)\n          const baseName = path.basename(file.originalname, extName)\n          const finalName = `${baseName}-${Date.now()}${extName}`\n          cb(null, finalName)\n        }\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationQueryOptions.html":{"url":"interfaces/PaginationQueryOptions.html","title":"interface - PaginationQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination_query.utils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            population\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        population\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        population:     PopulateOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PopulateOptions[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projection:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import aqp from 'api-query-params'\nimport { PopulateOptions } from 'mongoose'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nexport interface DataQueryResponse {\n  meta: {\n    currentPage: number\n    pageSize: number\n    pages: number\n    total: number\n  }\n  result: any[]\n}\n\ninterface PaginationQueryOptions {\n  filter?: Record\n  sort?: Record\n  projection?: Record\n  population?: PopulateOptions[]\n}\n\nexport const PaginationQuery = async (\n  queryString: string,\n  model: SoftDeleteModel,\n  options?: PaginationQueryOptions\n): Promise => {\n  const queryParams = JSON.parse(JSON.stringify(queryString))\n  const { current, pageSize } = queryParams\n  const { filter, sort, projection, population } = options ? options : aqp(queryParams)\n  delete filter.current\n  delete filter.pageSize\n  const currentPage = current ? Number(current) : 1\n  const defaultLimit = pageSize ? Number(pageSize) : 10\n  const offset = (currentPage - 1) * defaultLimit\n  const totalItem = (await model.find(filter)).length\n  const totalPage = Math.ceil(totalItem / defaultLimit)\n  const result = await model\n    .find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    .sort(sort as any)\n    .select(projection)\n    .populate(population)\n    .exec()\n  return {\n    meta: {\n      currentPage: currentPage,\n      pageSize: defaultLimit,\n      pages: totalPage,\n      total: totalItem\n    },\n    result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIDPipe.html":{"url":"injectables/ParseObjectIDPipe.html","title":"injectable - ParseObjectIDPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIDPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipe/customize.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipe/customize.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, UnauthorizedException } from '@nestjs/common'\nimport mongoose, { Types } from 'mongoose'\n@Injectable()\nexport class ParseObjectIDPipe implements PipeTransform {\n  transform(value: any): any {\n    Object.keys(value).map((item: any) => {\n      const validObjectId = mongoose.Types.ObjectId.isValid(value[item]) && typeof value[item] === 'string'\n      if (validObjectId) {\n        value[item] = Types.ObjectId.createFromHexString(value[item])\n      }\n    })\n    return value\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/schemas/permission.schema.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { HydratedDocument } from 'mongoose'\n\nexport type PermissionDocument = HydratedDocument\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string\n\n  @Prop()\n  apiPath: string\n\n  @Prop()\n  method: string\n\n  @Prop()\n  module: string\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionController.html":{"url":"controllers/PermissionController.html","title":"controller - PermissionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/permission.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permission\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new permission')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/permission/permission.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get all permission with pagination')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/permission/permission.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permission/permission.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permission/permission.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update a permission')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permission/permission.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UsePipes, Query } from '@nestjs/common'\nimport { PermissionService } from './permission.service'\nimport { CreatePermissionDto } from './dto/create-permission.dto'\nimport { UpdatePermissionDto } from './dto/update-permission.dto'\nimport { ResponseMessage, User } from '~/decorator/customize'\nimport { UserType } from '~/interface/user.interface'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Permission')\n@Controller('permission')\nexport class PermissionController {\n  constructor(private readonly permissionService: PermissionService) { }\n  /*\n   * @Method: POST\n   * @Route : /permission\n   * @Description: Create a new permission\n   * @Public: false\n   */\n  @ResponseMessage('Create a new permission')\n  @Post()\n  async create(@Body() createPermissionDto: CreatePermissionDto, @User() user: UserType) {\n    return await this.permissionService.create(createPermissionDto, user)\n  }\n  /*\n   * @Method: POST\n   * @Route : /permission\n   * @Description: Get all permission with pagination\n   * @Public: false\n   */\n  @ResponseMessage('Get all permission with pagination')\n  @Get()\n  findAll(@Query() queryString: string) {\n    return this.permissionService.findAll(queryString)\n  }\n  /*\n   * @Method: GET\n   * @Route : /permission/:id\n   * @Description: Get a permission by id\n   * @Public: false\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.permissionService.findOne(id)\n  }\n  /*\n   * @Method: PATCH\n   * @Route : /permission/:id\n   * @Description: Update a permission\n   * @Public: false\n   */\n  @ResponseMessage('Update a permission')\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: UserType) {\n    return await this.permissionService.update(id, updatePermissionDto, user)\n  }\n  /*\n   * @Method: DELETE\n   * @Route : /permission/:id\n   * @Description: Delete a permission\n   * @Public: false\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: UserType) {\n    return this.permissionService.remove(id, user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionModule.html":{"url":"modules/PermissionModule.html","title":"module - PermissionModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_providers\n\n\n\n\nPermissionService\n\nPermissionService\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permission/permission.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { PermissionService } from './permission.service'\nimport { PermissionController } from './permission.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Permission, PermissionSchema } from './schemas/permission.schema'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Permission.name,\n        schema: PermissionSchema\n      }\n    ])\n  ],\n  controllers: [PermissionController],\n  providers: [PermissionService]\n})\nexport class PermissionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permission/permission.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission/permission.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission/permission.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission/permission.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission/permission.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permission/permission.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common'\nimport { CreatePermissionDto } from './dto/create-permission.dto'\nimport { UpdatePermissionDto } from './dto/update-permission.dto'\nimport { UserType } from '~/interface/user.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Permission, PermissionDocument } from './schemas/permission.schema'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { PaginationQuery } from '~/utils/pagination_query.utils'\nimport { validateObjectID } from '~/utils/validation.utils'\n\n@Injectable()\nexport class PermissionService {\n  constructor(@InjectModel(Permission.name) private readonly permissionModel: SoftDeleteModel) {}\n  async create(createPermissionDto: CreatePermissionDto, user: UserType) {\n    const isExist = await this.permissionModel.findOne({\n      apiPath: createPermissionDto.apiPath,\n      method: createPermissionDto.method\n    })\n    console.log(isExist)\n    if (isExist) {\n      throw new HttpException(`Permission is exist: ${isExist.method} with ${isExist.apiPath}`, HttpStatus.BAD_REQUEST)\n    }\n    const result = await this.permissionModel.create({\n      ...createPermissionDto,\n      createdBy: {\n        _id: user._id,\n        name: user.name\n      }\n    })\n    return result\n  }\n\n  async findAll(queryString: string) {\n    const result = await PaginationQuery(queryString, this.permissionModel)\n    return result\n  }\n\n  async findOne(id: string) {\n    if (!validateObjectID(id)) {\n      throw new HttpException('ID is invalid', HttpStatus.BAD_REQUEST)\n    }\n    const result = await this.permissionModel.findById(id)\n    return result\n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto, user: UserType) {\n    const result = await this.permissionModel.updateOne(\n      {\n        _id: id\n      },\n      {\n        ...updatePermissionDto,\n        updatedBy: {\n          _id: user._id,\n          name: user.name\n        }\n      }\n    )\n    return result\n  }\n\n  async remove(id: string, user: UserType) {\n    const result = await this.permissionModel.softDelete({\n      _id: id\n    })\n    await this.permissionModel.updateOne(\n      {\n        _id: id\n      },\n      {\n        deletedBy: {\n          _id: user._id,\n          name: user.name\n        }\n      }\n    )\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Invalid email'})@IsNotEmpty({message: 'Email is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator'\nimport { Type } from 'class-transformer'\nimport mongoose from 'mongoose'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n  @IsNotEmpty({ message: '_Id company is required' })\n  _id: mongoose.Schema.Types.ObjectId\n\n  @IsNotEmpty({ message: 'Name conpany is required' })\n  name: string\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: RESPONSE_MESSAGE.MONGO_ID_IS_INVALID })\n  role: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'Admin' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { RESPONSE_MESSAGE } from '~/decorator/customize'\n\nexport interface Response {\n  statusCode: number\n  message: string\n  data: any\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n  constructor(private reflector: Reflector) {}\n  intercept(context: ExecutionContext, next: CallHandler): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n        data: {\n          result: data?.result || data,\n          meta: data?.meta || {}\n        }\n      }))\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyID\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobID\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HistoryResume[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResumeStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport mongoose, { HydratedDocument } from 'mongoose'\nimport { Company } from '~/companies/schemas/company.schema'\nimport { ResumeStatus } from '~/constant/status'\nimport { Job } from '~/jobs/schemas/job.schemas'\n\nexport type ResumeDocument = HydratedDocument\nexport interface HistoryResume {\n  status: string\n  updatedAt: Date\n  updatedBy: {\n    _id: mongoose.Types.ObjectId\n    email: string\n  }\n}\n\n@Schema({ timestamps: true, collection: 'resumes' })\nexport class Resume {\n  @Prop()\n  email: string\n\n  @Prop()\n  userID: mongoose.Types.ObjectId\n\n  @Prop()\n  url: string\n\n  @Prop()\n  status: ResumeStatus\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Company.name })\n  companyID: mongoose.Schema.Types.ObjectId\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Job.name })\n  jobID: mongoose.Schema.Types.ObjectId\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: HistoryResume[]\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getCV\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateResumeDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create a new resume')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get all resumes')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get resume by id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getCV\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCV(user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get CV by User')@Post('by-user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete Resume by ID')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: ResumeStatus, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Change Status of resume')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            ResumeStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, UsePipes } from '@nestjs/common'\nimport { ResumesService } from './resumes.service'\nimport { CreateResumeDto } from './dto/create-resume.dto'\nimport { UpdateResumeDto } from './dto/update-resume.dto'\nimport { ResponseMessage, User } from '~/decorator/customize'\nimport { UserType } from '~/interface/user.interface'\nimport { ResumeStatus } from '~/constant/status'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n  /*\n   * @Method: POST\n   * @Route : /resumes\n   * @Description: Create a new resume\n   * @Public: false\n   */\n  @ResponseMessage('Create a new resume')\n  @Post()\n  async create(@Body() createResumeDto: CreateResumeDto, @User() user: UserType) {\n    return await this.resumesService.create(createResumeDto, user)\n  }\n  /*\n   * @Method: GET\n   * @Route : /resumes\n   * @Description: Get all resumes\n   * @Public: false\n   */\n  @ResponseMessage('Get all resumes')\n  @Get()\n  async findAll(@Query() queryString: string) {\n    return this.resumesService.findAll(queryString)\n  }\n  /*\n   * @Method: GET\n   * @Route : /resumes/:id\n   * @Description: Get resume by id\n   * @Public: false\n   */\n  @ResponseMessage('Get resume by id')\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id)\n  }\n  /*\n   * @Method: PATCH\n   * @Route : /resumes/:id\n   * @Description: Change Status of resume\n   * @Public: false\n   */\n  @ResponseMessage('Change Status of resume')\n  @Patch(':id')\n  async updateStatus(@Param('id') id: string, @Body('status') status: ResumeStatus, @User() user: UserType) {\n    return this.resumesService.updateStatus(id, status, user)\n  }\n  /*\n   * @Method: DELETE\n   * @Route : /resumes/:id\n   * @Description: delete resume by id\n   * @Public: false\n   */\n  @ResponseMessage('Delete Resume by ID')\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: UserType) {\n    return this.resumesService.remove(id, user)\n  }\n  /*\n   * @Method: POST\n   * @Route : /resumes/by-user\n   * @Description: Get CV by User\n   * @Public: false\n   */\n  @ResponseMessage('Get CV by User')\n  @Post('by-user')\n  getCV(@User() user: UserType) {\n    return this.resumesService.getCV(user._id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ResumesService } from './resumes.service'\nimport { ResumesController } from './resumes.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Resume, ResumeSchema } from './schemas/resume.schema'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Resume.name,\n        schema: ResumeSchema\n      }\n    ])\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService]\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getCV\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateResumeDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCV\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCV(userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: ResumeStatus, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            ResumeStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { CreateResumeDto } from './dto/create-resume.dto'\nimport { UpdateResumeDto } from './dto/update-resume.dto'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { Resume, ResumeDocument } from './schemas/resume.schema'\nimport { UserType } from '~/interface/user.interface'\nimport { ResumeStatus } from '~/constant/status'\nimport { PaginationQuery } from '~/utils/pagination_query.utils'\nimport mongoose, { mongo } from 'mongoose'\nimport { validateObjectID } from '~/utils/validation.utils'\n\n@Injectable()\nexport class ResumesService {\n  constructor(@InjectModel(Resume.name) private readonly resumeModel: SoftDeleteModel) {}\n  async create(createResumeDto: CreateResumeDto, user: UserType) {\n    const result = await this.resumeModel.create({\n      url: createResumeDto.url,\n      companyID: createResumeDto.companyID,\n      jobID: createResumeDto.jobID,\n      userID: user._id,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      },\n      status: ResumeStatus.PENDING,\n      history: [\n        {\n          status: ResumeStatus.PENDING,\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email\n          }\n        }\n      ]\n    })\n    return result\n  }\n\n  async findAll(queryString: string) {\n    const result = await PaginationQuery(queryString, this.resumeModel)\n    return result\n  }\n\n  findOne(id: string) {\n    validateObjectID(id)\n    const result = this.resumeModel.findOne({ _id: id })\n    return result\n  }\n\n  async updateStatus(id: string, status: ResumeStatus, user: UserType) {\n    if (!status || status in ResumeStatus === false) {\n      throw new UnauthorizedException('Status Is Invalid')\n    }\n    validateObjectID(id)\n    const result = await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        status: status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        },\n        $push: {\n          history: {\n            status: status,\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user.email\n            }\n          }\n        }\n      }\n    )\n    return result\n  }\n\n  async remove(id: string, user: UserType) {\n    validateObjectID(id)\n    const result = await this.resumeModel.softDelete({\n      _id: id\n    })\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return result\n  }\n  async getCV(userID: string) {\n    return await this.resumeModel\n      .find({ userID: userID })\n      .sort({ createdAt: -1 })\n      .populate([\n        {\n          path: 'companyID',\n          select: { _id: -1, name: 1, logo: 1 }\n        },\n        {\n          path: 'jobID',\n          select: { _id: -1, name: 1 }\n        }\n      ])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport mongoose, { HydratedDocument } from 'mongoose'\nimport { Permission } from '~/permission/schemas/permission.schema'\n\nexport type RoleDocument = HydratedDocument\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop({ unique: true })\n  name: string\n\n  @Prop()\n  description: string\n\n  @Prop()\n  isActive: boolean\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permission[]\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common'\nimport { RolesService } from './roles.service'\nimport { CreateRoleDto } from './dto/create-role.dto'\nimport { UpdateRoleDto } from './dto/update-role.dto'\nimport { User } from '~/decorator/customize'\nimport { UserType } from '~/interface/user.interface'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) { }\n  /*\n   * @Method: POST\n   * @Route : /roles\n   * @Description: Create a new role\n   * @Public: false\n   */\n  @Post()\n  async create(@Body() createRoleDto: CreateRoleDto, @User() user: UserType) {\n    return await this.rolesService.create(createRoleDto, user)\n  }\n  /*\n   * @Method: GET\n   * @Route : /roles\n   * @Description: Get Role With Pagination\n   * @Public: false\n   */\n  @Get()\n  findAll(@Query() queryString: string) {\n    return this.rolesService.findAll(queryString)\n  }\n  /*\n   * @Method: GET\n   * @Route : /roles/:id\n   * @Description: Get Role By Id\n   * @Public: false\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id)\n  }\n  /*\n   * @Method: PATCH\n   * @Route : /roles/:id\n   * @Description: Update a new role\n   * @Public: false\n   */\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto, @User() user: UserType) {\n    return await this.rolesService.update(id, updateRoleDto, user)\n  }\n  /*\n   * @Method: DELETE\n   * @Route : /roles/:id\n   * @Description: delete a new role\n   * @Public: false\n   */\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: UserType) {\n    return this.rolesService.remove(id, user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_RolesModule_exports\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { RolesService } from './roles.service'\nimport { RolesController } from './roles.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Role, RoleSchema } from './schemas/role.schema'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Role.name,\n        schema: RoleSchema\n      }\n    ])\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService]\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateRoleDto } from './dto/create-role.dto'\nimport { UpdateRoleDto } from './dto/update-role.dto'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Role, RoleDocument } from './schemas/role.schema'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { UserType } from '~/interface/user.interface'\nimport { PaginationQuery } from '~/utils/pagination_query.utils'\n\n@Injectable()\nexport class RolesService {\n  constructor(@InjectModel(Role.name) private readonly roleModel: SoftDeleteModel) {}\n  async create(createRoleDto: CreateRoleDto, user: UserType) {\n    console.log(createRoleDto)\n    const result = await this.roleModel.create({\n      ...createRoleDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return result\n  }\n\n  async findAll(queryString: string) {\n    const query = JSON.parse(JSON.stringify(queryString))\n    ;(query.populate = 'permissions'),\n      (query.fields = 'permissions.name,permissions.method,permissions.module,permissions.apiPath')\n    const result = await PaginationQuery(query, this.roleModel)\n    return result\n  }\n\n  async findOne(id: string) {\n    return (await this.roleModel.findById(id))?.populate({\n      path: 'permissions',\n      select: { _id: -1, apiPath: 1, name: 1, method: 1, module: 1 }\n    })\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: UserType) {\n    const result = await this.roleModel.updateOne(\n      { _id: id },\n      {\n        ...updateRoleDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return result\n  }\n\n  async remove(id: string, user: UserType) {\n    const result = await this.roleModel.softDelete({ _id: id })\n    await this.roleModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { HydratedDocument } from 'mongoose'\n\nexport type SubcribersDocument = HydratedDocument\n\n@Schema()\nexport class Subscriber {\n  @Prop()\n  email: string\n\n  @Prop()\n  name: string\n\n  @Prop({ type: [String] })\n  skills: string[]\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getSkill\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('This action adds a new subscriber')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('This action returns all subscribers')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkill(user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@SkipPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common'\nimport { SubscribersService } from './subscribers.service'\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto'\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto'\nimport { ResponseMessage, SkipPermission, User } from '~/decorator/customize'\nimport { UserType } from '~/interface/user.interface'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) { }\n  /*\n   * @Route: /subscribers\n   * @Method: POST\n   * @Access: JWT\n   * @Desc: Create a new subscriber\n   */\n  @ResponseMessage('This action adds a new subscriber')\n  @Post()\n  async create(@Body() createSubscriberDto: CreateSubscriberDto, @User() user: UserType) {\n    return await this.subscribersService.create(createSubscriberDto, user)\n  }\n  /*\n   * @Route: /subscribers\n   * @Method: GET\n   * @Access: JWT\n   * @Desc: Get all subscribers with pagination\n   */\n  @ResponseMessage('This action returns all subscribers')\n  @Get()\n  findAll(@Query() queryString: string) {\n    return this.subscribersService.findAll(queryString)\n  }\n  /*\n   * @Route: /subscribers/:id\n   * @Method: GET\n   * @Access: JWT\n   * @Desc: Get subscribers with id\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.subscribersService.findOne(id)\n  }\n  /*\n   * @Route: /subscribers/:id\n   * @Method: PATCH\n   * @Access: JWT\n   * @Desc: Update subscribers with id\n   */\n  @Patch()\n  @SkipPermission()\n  update(@Body() updateSubscriberDto: UpdateSubscriberDto, @User() user: UserType) {\n    return this.subscribersService.update(updateSubscriberDto, user)\n  }\n  /*\n   * @Route: /subscribers/:id\n   * @Method: DELETE\n   * @Access: JWT\n   * @Desc: Remove subscribers with id\n   */\n  @Delete(':id')\n  async remove(@Param('id') id: string, @User() user: UserType) {\n    return await this.subscribersService.remove(id, user)\n  }\n\n  @Post('skills')\n  @SkipPermission()\n  async getSkill(@User() user: UserType) {\n    return await this.subscribersService.getSkill(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { SubscribersService } from './subscribers.service'\nimport { SubscribersController } from './subscribers.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schema'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Subscriber.name,\n        schema: SubscriberSchema\n      }\n    ])\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService]\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkill\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberService: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberService\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(queryString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkill(user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common'\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto'\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { SubcribersDocument, Subscriber } from './schemas/subscriber.schema'\nimport { UserType } from '~/interface/user.interface'\nimport { PaginationQuery } from '~/utils/pagination_query.utils'\n\n@Injectable()\nexport class SubscribersService {\n  constructor(@InjectModel(Subscriber.name) private readonly subscriberService: SoftDeleteModel) { }\n  async create(createSubscriberDto: CreateSubscriberDto, user: UserType) {\n    const isExist = await this.subscriberService.findOne({ email: createSubscriberDto.email })\n    if (isExist) throw new HttpException('Subscriber already exist', HttpStatus.BAD_REQUEST)\n    const result = await this.subscriberService.create({\n      ...createSubscriberDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return result\n  }\n\n  async findAll(queryString: string) {\n    const x = await this.subscriberService.find()\n    console.log(x)\n\n    const result = await PaginationQuery(queryString, this.subscriberService)\n    return result\n  }\n\n  async findOne(id: string) {\n    return await this.subscriberService.findById(id)\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: UserType) {\n    const result = await this.subscriberService.updateOne(\n      {\n        email: user.email\n      },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }, { upsert: true }\n    )\n    return result\n  }\n\n  async remove(id: string, user: UserType) {\n    const result = await this.subscriberService.softDelete({ _id: id })\n    await this.subscriberService.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      }\n    )\n    return result\n  }\n  async getSkill(user: UserType) {\n    return await this.subscriberService.find({ email: user.email }, { skills: 1 })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { RESPONSE_MESSAGE } from '~/decorator/customize'\n\nexport interface Response {\n  statusCode: number\n  message: string\n  data: any\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n  constructor(private reflector: Reflector) {}\n  intercept(context: ExecutionContext, next: CallHandler): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n        data: {\n          result: data?.result || data,\n          meta: data?.meta || {}\n        }\n      }))\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateCompanyDto } from './create-company.dto'\nimport { IsNotEmpty } from 'class-validator'\n\nexport class UpdateCompanyDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n\n  @IsNotEmpty({ message: 'Description is required' })\n  description: string\n\n  @IsNotEmpty({ message: 'Logo is required' })\n  logo: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateFileDto } from './create-file.dto'\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Set Active is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateJobDto } from './create-job.dto'\nimport { IsNotEmpty } from 'class-validator'\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {\n  @IsNotEmpty({ message: 'Set Active is required' })\n  isActive: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreatePermissionDto } from './create-permission.dto'\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateResumeDto } from './create-resume.dto'\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateRoleDto } from './create-role.dto'\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateSubscriberDto } from './create-subscriber.dto'\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Id is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateUserDto } from './create-user.dto'\nimport { IsNotEmpty } from 'class-validator'\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsNotEmpty({ message: 'Id is required' })\n  _id: string\n}\n\nexport class DeleteUserDto {\n  @IsNotEmpty({ message: 'Id is required' })\n  _id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/schemas/User.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                created_at\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refresh_token\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updated_at\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/schemas/User.schema.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport mongoose, { HydratedDocument } from 'mongoose'\nimport { Role } from '~/roles/schemas/role.schema'\n\nexport type UserDocument = HydratedDocument\n\n@Schema({ timestamps: true, collection: 'users' })\nexport class User {\n  @Prop()\n  name: string\n\n  @Prop({ required: true, unique: true })\n  email: string\n\n  @Prop({ required: true })\n  password: string\n\n  @Prop()\n  age: number\n\n  @Prop()\n  gender: string\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId\n    name: string\n  }\n\n  @Prop()\n  address: string\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId\n\n  @Prop()\n  refresh_token: string\n\n  @Prop()\n  updated_at: Date\n\n  @Prop()\n  created_at: Date\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: string\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: string\n    email: string\n  }\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUser\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(CreateUserDto: CreateUserDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create A User From Admin')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/Users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(_id: string, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete A User By ID')@Delete('/delete/:_id')\n                \n            \n\n                    \n                        \n                            Defined in src/Users/users.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(queryString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get All Users For Admin')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/Users/users.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(user_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get A User Info By ID')@Public()@Get('/find/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/Users/users.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(updateUserDto: UpdateUserDto, user: UserType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update A User By ID')@Patch('/update')\n                \n            \n\n                    \n                        \n                            Defined in src/Users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query, UnauthorizedException } from '@nestjs/common'\nimport { UserService } from './user.service'\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { CreateUserDto } from './dto/create-user.dto'\nimport { UpdateUserDto } from './dto/update-user.dto'\nimport { Public, ResponseMessage, User } from '~/decorator/customize'\nimport mongoose from 'mongoose'\nimport { UserType } from '~/interface/user.interface'\nimport { ApiTags } from '@nestjs/swagger'\n\n@ApiTags('Users')\n@Controller('users')\nexport class UserController {\n  constructor(private readonly userService: UserService) { }\n  /*\n    Method: GET\n    Path: /users\n    Access: Admin\n    Description: Get all users\n  */\n  @ResponseMessage('Get All Users For Admin')\n  @Get()\n  async getUser(@Query() queryString: string) {\n    const result = await this.userService.getUser(queryString)\n    return result\n  }\n  /*\n    Method: POST\n    Path: /users\n    Access: Admin\n    Description: Create new user from admin\n  */\n  @ResponseMessage('Create A User From Admin')\n  @Post()\n  createUser(@Body() CreateUserDto: CreateUserDto, @User() user: UserType) {\n    return this.userService.createUser(CreateUserDto, user)\n  }\n  /*\n    Method: PATCH\n    Path: /users\n    Access: JWT \n    Description: Update a user\n  */\n  @ResponseMessage('Update A User By ID')\n  @Patch('/update')\n  async updateUser(@Body() updateUserDto: UpdateUserDto, @User() user: UserType) {\n    const result = await this.userService.updateUser(updateUserDto, user)\n    return {\n      message: 'User Updated',\n      result\n    }\n  }\n  /*\n    Method: DELETE\n    Path: /users\n    Access: JWT \n    Description: Delete a user\n  */\n  @ResponseMessage('Delete A User By ID')\n  @Delete('/delete/:_id')\n  async deleteUser(@Param('_id') _id: string, @User() user: UserType) {\n    if (!mongoose.isValidObjectId(_id)) throw new UnauthorizedException('ID is not valid')\n    const result = await this.userService.deleteUser(_id, user)\n    return {\n      message: 'User Deleted',\n      result\n    }\n  }\n  /*\n    Method: GET\n    Path: /users/find/:id\n    Access: Public\n    Description: Get user by id\n  */\n  @ResponseMessage('Get A User Info By ID')\n  @Public()\n  @Get('/find/:id')\n  getUserById(@Param('id') user_id: string) {\n    return this.userService.getUserById(user_id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'admin@gmail.com', description: 'Admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Users/dto/create-user.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator'\nimport { Type } from 'class-transformer'\nimport mongoose from 'mongoose'\nimport { RESPONSE_MESSAGE } from '~/constant/message'\nimport { ApiProperty } from '@nestjs/swagger'\n\nclass Company {\n  @IsNotEmpty({ message: '_Id company is required' })\n  _id: mongoose.Schema.Types.ObjectId\n\n  @IsNotEmpty({ message: 'Name conpany is required' })\n  name: string\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Role is required' })\n  @IsMongoId({ message: RESPONSE_MESSAGE.MONGO_ID_IS_INVALID })\n  role: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company\n}\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Name is required' })\n  name: string\n\n  @IsEmail({}, { message: 'Invalid email' })\n  @IsNotEmpty({ message: 'Email is required' })\n  email: string\n\n  @IsNotEmpty({ message: 'Password is required' })\n  password: string\n\n  @IsNotEmpty({ message: 'Age is required' })\n  age: number\n\n  @IsNotEmpty({ message: 'Gender is required' })\n  gender: string\n\n  @IsNotEmpty({ message: 'Address is required' })\n  address: string\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'Admin' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Users/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './users.controller'\nimport { UserService } from './user.service'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { User, UserSchema } from './schemas/User.schema'\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema\n      }\n    ])\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Users/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getUserByRefreshToken\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/Users/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Users/user.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(user_id: string, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Users/user.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Users/user.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Users/user.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Users/user.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(updateUserDto: UpdateUserDto, user: UserType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Users/user.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/Users/user.service.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/Users/user.service.ts:81\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { User, UserDocument } from './schemas/User.schema'\nimport { CreateUserDto } from './dto/create-user.dto'\nimport { UpdateUserDto } from './dto/update-user.dto'\nimport { hashPassword } from '~/utils/hashPassword'\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose'\nimport { UserType } from '~/interface/user.interface'\nimport { PaginationQuery } from '~/utils/pagination_query.utils'\nimport aqp from 'api-query-params'\nimport { PopulateOptions } from 'mongoose'\n\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel(User.name) private readonly userModel: SoftDeleteModel) {}\n  async getUser(qs: string) {\n    const queryString = JSON.parse(JSON.stringify(qs))\n    const { filter, sort, projection } = aqp(queryString)\n    const population_modify: PopulateOptions[] = [\n      {\n        path: 'role',\n        populate: {\n          path: 'permissions'\n        }\n      }\n    ]\n    const projection_modify = '-password -refresh_token' as any\n    const result = await PaginationQuery(queryString, this.userModel, {\n      filter: filter,\n      sort: sort,\n      projection: projection_modify,\n      population: population_modify\n    })\n    return result\n  }\n  async createUser(createUserDto: CreateUserDto, user: UserType) {\n    const hashP = await hashPassword(createUserDto.password)\n    const users = await this.userModel.create({\n      ...createUserDto,\n      password: hashP,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return users\n  }\n  async getUserById(user_id: string) {\n    const user = await (\n      await this.userModel.findById(user_id, { password: 0 })\n    ).populate({\n      path: 'role',\n      select: { name: 1 }\n      // populate: {\n      //   path: 'permissions',\n      //   select: { name: 1, _id: -1, apiPath: 1, method: 1 }\n      // }\n    })\n    if (!user) return 'user not found'\n    return user\n  }\n  async updateUser(updateUserDto: UpdateUserDto, user: UserType) {\n    const hashP = await hashPassword(updateUserDto.password)\n    const result = await this.userModel.updateOne(\n      { _id: updateUserDto._id },\n      { ...updateUserDto, updatedBy: { _id: user._id, email: user.email }, password: hashP }\n    )\n    return result\n  }\n\n  async deleteUser(user_id: string, user: UserType) {\n    const result = await this.userModel.softDelete({ _id: user_id })\n    await this.userModel.updateOne({ _id: user_id }, { deletedBy: { _id: user._id, email: user.email } })\n    return result\n  }\n  async findOne(email: string) {\n    const user = await this.userModel.findOne({ email: email })\n    if (!user) return null\n    return user\n  }\n  updateUserToken = async (refresh_token: string, _id: string) => {\n    return await this.userModel.updateOne({ _id }, { refresh_token })\n  }\n  getUserByRefreshToken = async (refresh_token: string) => {\n    return (await this.userModel.findOne({ refresh_token })).populate({\n      path: 'role',\n      select: {\n        name: 1\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserType.html":{"url":"interfaces/UserType.html","title":"interface - UserType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserType {\n  _id: string\n  name: string\n  email: string\n  role: {\n    _id: string\n    name: string\n  }\n  permissions: {\n    _id: string\n    name: string\n    apiPath: string\n    module: string\n  }[]\n}\nexport interface IMailSender {\n  to: string\n  name: string\n  jobs: {\n    name: string\n    company: string\n    salary: string\n    skills: string[]\n  }[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Users/dto/update-user.dto.ts\n            \n            class\n            DeleteUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Users/schemas/User.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/Users/schemas/User.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/Users/users.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constant/HTTP_STATUS.ts\n            \n            variable\n            HTTP_STATUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constant/message.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/errorhandler.interceptor.ts\n            \n            injectable\n            ErrorHandlerInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/databases/seeder.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/seeder.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/seeder.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            SkipPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/files/schema/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interface/user.interface.ts\n            \n            interface\n            IMailSender\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interface/user.interface.ts\n            \n            interface\n            UserType\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schemas.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schemas.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mailer/mailer.controller.ts\n            \n            controller\n            MailerController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permission/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission/permission.controller.ts\n            \n            controller\n            PermissionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permission/permission.service.ts\n            \n            injectable\n            PermissionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permission/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/permission/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipe/customize.ts\n            \n            injectable\n            ParseObjectIDPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            interface\n            HistoryResume\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/hashPassword.ts\n            \n            variable\n            comparePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/hashPassword.ts\n            \n            variable\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/pagination_query.utils.ts\n            \n            interface\n            DataQueryResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/pagination_query.utils.ts\n            \n            interface\n            PaginationQueryOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utils/pagination_query.utils.ts\n            \n            variable\n            PaginationQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validation.utils.ts\n            \n            variable\n            validateObjectID\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs-modules/mailer : ^1.10.3\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.4\n        \n            @nestjs/mongoose : 10.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @nestjs/swagger : ^7.2.0\n        \n            @nestjs/throttler : ^5.1.1\n        \n            @types/bcryptjs : 2.4.2\n        \n            @types/cookie-parser : ^1.4.6\n        \n            @types/cron : ^2.4.0\n        \n            @types/ms : ^0.7.34\n        \n            @types/nodemailer : ^6.4.14\n        \n            @types/passport-jwt : ^4.0.0\n        \n            @types/passport-local : ^1.0.38\n        \n            api-query-params : ^5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^7.1.0\n        \n            mongoose : 8.1.0\n        \n            ms : ^2.1.3\n        \n            nodemailer : ^6.9.9\n        \n            npm : ^10.4.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ResumeStatus   (src/.../status.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constant/status.ts\n    \n        \n            \n                \n                    \n                        \n                        ResumeStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 APPROVED\n                            \n                        \n                        \n                            \n                                Value : APPROVED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_exports\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_imports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nCompaniesService \n\nCompaniesService \n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nPermissionModule\n\nPermissionModule\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailer\n\nMailer\n\nMailerModule -->\n\nMailer->MailerModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../job.schemas.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubcribersDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../User.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schemas.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permission/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubcribersDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/Users/schemas/User.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../seeder.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            comparePassword   (src/.../hashPassword.ts)\n                        \n                        \n                            hashPassword   (src/.../hashPassword.ts)\n                        \n                        \n                            HTTP_STATUS   (src/.../HTTP_STATUS.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../seeder.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schemas.ts)\n                        \n                        \n                            PaginationQuery   (src/.../pagination_query.utils.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../message.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../seeder.ts)\n                        \n                        \n                            UserSchema   (src/.../User.schema.ts)\n                        \n                        \n                            validateObjectID   (src/.../validation.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/seeder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Create new User From Admin',\n    apiPath: '/users',\n    method: 'POST',\n    module: 'USER',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.474Z',\n    updatedAt: '2024-01-31T08:32:13.474Z',\n    __v: 0\n  },\n  {\n    name: 'Get all User From Admin',\n    apiPath: '/users',\n    method: 'GET',\n    module: 'USER',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.801Z',\n    updatedAt: '2024-01-31T08:32:13.801Z',\n    __v: 0\n  },\n  {\n    name: 'Register',\n    apiPath: '/auth/register',\n    method: 'POST',\n    module: 'AUTH',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.864Z',\n    updatedAt: '2024-01-31T08:32:13.864Z',\n    __v: 0\n  },\n  {\n    name: 'Create a new Job',\n    apiPath: '/jobs',\n    method: 'POST',\n    module: 'JOB',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.923Z',\n    updatedAt: '2024-01-31T08:32:13.923Z',\n    __v: 0\n  },\n  // Subcribers\n  {\n    name: 'Create a new Subcriber',\n    apiPath: '/subscribers',\n    method: 'POST',\n    module: 'SUBCRIBER',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.923Z',\n    updatedAt: '2024-01-31T08:32:13.923Z'\n  },\n  {\n    name: 'Get all Subcribers with Pagination',\n    apiPath: '/subscribers',\n    method: 'GET',\n    module: 'SUBCRIBER',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.923Z',\n    updatedAt: '2024-01-31T08:32:13.923Z'\n  },\n  {\n    name: 'Get Subcriber with ID',\n    apiPath: '/subscribers/:id',\n    method: 'GET',\n    module: 'SUBCRIBER',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.923Z',\n    updatedAt: '2024-01-31T08:32:13.923Z'\n  },\n  {\n    name: 'Update Subcriber with ID',\n    apiPath: '/subscribers/:id',\n    method: 'PATCH',\n    module: 'SUBCRIBER',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.923Z',\n    updatedAt: '2024-01-31T08:32:13.923Z'\n  },\n  {\n    name: 'Delete Subcriber with ID',\n    apiPath: '/subscribers/:id',\n    method: 'DELETE',\n    module: 'SUBCRIBER',\n    deletedAt: null,\n    isDeleted: false,\n    createdAt: '2024-01-31T08:32:13.923Z',\n    updatedAt: '2024-01-31T08:32:13.923Z'\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/utils/hashPassword.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (password: string, hashedPassword: string): boolean => {\n  const isMatch = compareSync(password, hashedPassword)\n  return isMatch\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (password: string) => {\n  const salt = await genSalt(10)\n  const hashedPassword = await hash(password, salt as string)\n  return hashedPassword\n}\n                    \n                \n\n\n        \n    \n\n    src/constant/HTTP_STATUS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HTTP_STATUS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n  OK: 200,\n  CREATED: 1,\n  ACCEPTED: 202,\n  NO_CONTENT: 204,\n  UNPROCESSABLE_ENTITY: 422,\n  UNAUTHORIZED: 401,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n  BAD_REQUEST: 400,\n  SERVICE_UNAVAILABLE: 503,\n  FORBIDDEN: 403,\n  PARTIAL_CONTENT: 206\n}\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) => {\n  return SetMetadata(RESPONSE_MESSAGE, message)\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: string, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest()\n  const user = request.user\n  return data ? user?.[data] : user\n})\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schemas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/utils/pagination_query.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginationQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  queryString: string,\n  model: SoftDeleteModel,\n  options?: PaginationQueryOptions\n): Promise => {\n  const queryParams = JSON.parse(JSON.stringify(queryString))\n  const { current, pageSize } = queryParams\n  const { filter, sort, projection, population } = options ? options : aqp(queryParams)\n  delete filter.current\n  delete filter.pageSize\n  const currentPage = current ? Number(current) : 1\n  const defaultLimit = pageSize ? Number(pageSize) : 10\n  const offset = (currentPage - 1) * defaultLimit\n  const totalItem = (await model.find(filter)).length\n  const totalPage = Math.ceil(totalItem / defaultLimit)\n  const result = await model\n    .find(filter)\n    .skip(offset)\n    .limit(defaultLimit)\n    .sort(sort as any)\n    .select(projection)\n    .populate(population)\n    .exec()\n  return {\n    meta: {\n      currentPage: currentPage,\n      pageSize: defaultLimit,\n      pages: totalPage,\n      total: totalItem\n    },\n    result\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/permission/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/constant/message.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  FILE_IS_NOT_VALID: 'File is not valid',\n  EMAIL_IS_INVALID: 'Email is invalid',\n  EMAIL_IS_REQUIRED: 'Email is required',\n  USER_ID_IS_REQUIRED: 'User ID is required',\n  URL_IS_REQUIRED: 'URL is required',\n  STATUS_IS_REQUIRED: 'Status is required',\n  COMPANY_ID_IS_REQUIRED: 'Company ID is required',\n  JOB_ID_IS_REQUIRED: 'Job ID is required',\n  HISTORY_IS_REQUIRED: 'History is required',\n  NAME_IS_REQUIRED: 'Name is required',\n  SKILLS_IS_ARRAY: 'Skills is array',\n  SKILLS_IS_REQUIRED: 'Skills is required',\n  COMPANY_IS_REQUIRED: 'Company is required',\n  LOCATION_IS_REQUIRED: 'Location is required',\n  SALARY_IS_REQUIRED: 'Salary is required',\n  QUANTITY_IS_REQUIRED: 'Quantity is required',\n  LEVEL_IS_REQUIRED: 'Level is required',\n  DESCRIPTION_IS_REQUIRED: 'Description is required',\n  START_DATE_IS_REQUIRED: 'StartDate is required',\n  END_DATE_IS_REQUIRED: 'EndDate is required',\n  ID_IS_INVALID: 'ID is invalid',\n  NAME_MUST_BE_STRING: 'Name must be string',\n  API_PATH_MUST_BE_STRING: 'ApiPath must be string',\n  METHOD_MUST_BE_STRING: 'Method must be string',\n  MODULE_MUST_BE_STRING: 'Module must be string',\n  MODULE_IS_REQUIRED: 'Module is required',\n  PERMISSIONS_IS_REQUIRED: 'Permissions is required',\n  STATUS_MUST_BE_BOOLEAN: 'Status must be boolean',\n  PERMISSIONS_IS_ARRAY: 'Permissions is array',\n  MONGO_ID_IS_INVALID: 'Mongo ID is invalid',\n  SKILLS_MUST_BE_STRING: 'Skills must be string',\n  SKILLS_MUST_BE_ARRAY: 'Skills must be array'\n}\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/Users/schemas/User.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    src/utils/validation.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateObjectID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (id: string) => {\n  if (!mongoose.Types.ObjectId.isValid(id)) {\n    throw new UnauthorizedException('Invalid ObjectId')\n  }\n  return true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
